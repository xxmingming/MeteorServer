// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol.proto

#ifndef PROTOBUF_protocol_2eproto__INCLUDED
#define PROTOBUF_protocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_protocol_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[27];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsMeteorMsgImpl();
void InitDefaultsMeteorMsg();
void InitDefaultsKeyDataImpl();
void InitDefaultsKeyData();
void InitDefaultsSyncInitDataImpl();
void InitDefaultsSyncInitData();
void InitDefaultsPlayerEventDataImpl();
void InitDefaultsPlayerEventData();
void InitDefaultsEnterQueueRspImpl();
void InitDefaultsEnterQueueRsp();
void InitDefaultsOnBattleBeginImpl();
void InitDefaultsOnBattleBegin();
void InitDefaultsUserSelectRoleImpl();
void InitDefaultsUserSelectRole();
void InitDefaultsUserSelectSkillImpl();
void InitDefaultsUserSelectSkill();
void InitDefaultsUserSelectSkinImpl();
void InitDefaultsUserSelectSkin();
void InitDefaultsOnBattleCanceledImpl();
void InitDefaultsOnBattleCanceled();
void InitDefaultsOnBattleLoadingImpl();
void InitDefaultsOnBattleLoading();
void InitDefaultsOnBattleResultImpl();
void InitDefaultsOnBattleResult();
void InitDefaultsPlayerSellItemImpl();
void InitDefaultsPlayerSellItem();
void InitDefaultsPlayerBuyItemImpl();
void InitDefaultsPlayerBuyItem();
void InitDefaultsProtocolVerifyReqImpl();
void InitDefaultsProtocolVerifyReq();
void InitDefaultsProtocolVerifyRspImpl();
void InitDefaultsProtocolVerifyRsp();
void InitDefaultsRoomInfoImpl();
void InitDefaultsRoomInfo();
void InitDefaultsGetRoomRspImpl();
void InitDefaultsGetRoomRsp();
void InitDefaultsCreateRoomReqImpl();
void InitDefaultsCreateRoomReq();
void InitDefaultsCreateRoomRspImpl();
void InitDefaultsCreateRoomRsp();
void InitDefaultsJoinRoomReqImpl();
void InitDefaultsJoinRoomReq();
void InitDefaultsJoinRoomRspImpl();
void InitDefaultsJoinRoomRsp();
void InitDefaultsVector2_Impl();
void InitDefaultsVector2_();
void InitDefaultsFrameCommandImpl();
void InitDefaultsFrameCommand();
void InitDefaultsGameFramesImpl();
void InitDefaultsGameFrames();
void InitDefaultsChatMsgImpl();
void InitDefaultsChatMsg();
void InitDefaultsAudioChatMsgImpl();
void InitDefaultsAudioChatMsg();
inline void InitDefaults() {
  InitDefaultsMeteorMsg();
  InitDefaultsKeyData();
  InitDefaultsSyncInitData();
  InitDefaultsPlayerEventData();
  InitDefaultsEnterQueueRsp();
  InitDefaultsOnBattleBegin();
  InitDefaultsUserSelectRole();
  InitDefaultsUserSelectSkill();
  InitDefaultsUserSelectSkin();
  InitDefaultsOnBattleCanceled();
  InitDefaultsOnBattleLoading();
  InitDefaultsOnBattleResult();
  InitDefaultsPlayerSellItem();
  InitDefaultsPlayerBuyItem();
  InitDefaultsProtocolVerifyReq();
  InitDefaultsProtocolVerifyRsp();
  InitDefaultsRoomInfo();
  InitDefaultsGetRoomRsp();
  InitDefaultsCreateRoomReq();
  InitDefaultsCreateRoomRsp();
  InitDefaultsJoinRoomReq();
  InitDefaultsJoinRoomRsp();
  InitDefaultsVector2_();
  InitDefaultsFrameCommand();
  InitDefaultsGameFrames();
  InitDefaultsChatMsg();
  InitDefaultsAudioChatMsg();
}
}  // namespace protobuf_protocol_2eproto
class AudioChatMsg;
class AudioChatMsgDefaultTypeInternal;
extern AudioChatMsgDefaultTypeInternal _AudioChatMsg_default_instance_;
class ChatMsg;
class ChatMsgDefaultTypeInternal;
extern ChatMsgDefaultTypeInternal _ChatMsg_default_instance_;
class CreateRoomReq;
class CreateRoomReqDefaultTypeInternal;
extern CreateRoomReqDefaultTypeInternal _CreateRoomReq_default_instance_;
class CreateRoomRsp;
class CreateRoomRspDefaultTypeInternal;
extern CreateRoomRspDefaultTypeInternal _CreateRoomRsp_default_instance_;
class EnterQueueRsp;
class EnterQueueRspDefaultTypeInternal;
extern EnterQueueRspDefaultTypeInternal _EnterQueueRsp_default_instance_;
class FrameCommand;
class FrameCommandDefaultTypeInternal;
extern FrameCommandDefaultTypeInternal _FrameCommand_default_instance_;
class GameFrames;
class GameFramesDefaultTypeInternal;
extern GameFramesDefaultTypeInternal _GameFrames_default_instance_;
class GetRoomRsp;
class GetRoomRspDefaultTypeInternal;
extern GetRoomRspDefaultTypeInternal _GetRoomRsp_default_instance_;
class JoinRoomReq;
class JoinRoomReqDefaultTypeInternal;
extern JoinRoomReqDefaultTypeInternal _JoinRoomReq_default_instance_;
class JoinRoomRsp;
class JoinRoomRspDefaultTypeInternal;
extern JoinRoomRspDefaultTypeInternal _JoinRoomRsp_default_instance_;
class KeyData;
class KeyDataDefaultTypeInternal;
extern KeyDataDefaultTypeInternal _KeyData_default_instance_;
class MeteorMsg;
class MeteorMsgDefaultTypeInternal;
extern MeteorMsgDefaultTypeInternal _MeteorMsg_default_instance_;
class OnBattleBegin;
class OnBattleBeginDefaultTypeInternal;
extern OnBattleBeginDefaultTypeInternal _OnBattleBegin_default_instance_;
class OnBattleCanceled;
class OnBattleCanceledDefaultTypeInternal;
extern OnBattleCanceledDefaultTypeInternal _OnBattleCanceled_default_instance_;
class OnBattleLoading;
class OnBattleLoadingDefaultTypeInternal;
extern OnBattleLoadingDefaultTypeInternal _OnBattleLoading_default_instance_;
class OnBattleResult;
class OnBattleResultDefaultTypeInternal;
extern OnBattleResultDefaultTypeInternal _OnBattleResult_default_instance_;
class PlayerBuyItem;
class PlayerBuyItemDefaultTypeInternal;
extern PlayerBuyItemDefaultTypeInternal _PlayerBuyItem_default_instance_;
class PlayerEventData;
class PlayerEventDataDefaultTypeInternal;
extern PlayerEventDataDefaultTypeInternal _PlayerEventData_default_instance_;
class PlayerSellItem;
class PlayerSellItemDefaultTypeInternal;
extern PlayerSellItemDefaultTypeInternal _PlayerSellItem_default_instance_;
class ProtocolVerifyReq;
class ProtocolVerifyReqDefaultTypeInternal;
extern ProtocolVerifyReqDefaultTypeInternal _ProtocolVerifyReq_default_instance_;
class ProtocolVerifyRsp;
class ProtocolVerifyRspDefaultTypeInternal;
extern ProtocolVerifyRspDefaultTypeInternal _ProtocolVerifyRsp_default_instance_;
class RoomInfo;
class RoomInfoDefaultTypeInternal;
extern RoomInfoDefaultTypeInternal _RoomInfo_default_instance_;
class SyncInitData;
class SyncInitDataDefaultTypeInternal;
extern SyncInitDataDefaultTypeInternal _SyncInitData_default_instance_;
class UserSelectRole;
class UserSelectRoleDefaultTypeInternal;
extern UserSelectRoleDefaultTypeInternal _UserSelectRole_default_instance_;
class UserSelectSkill;
class UserSelectSkillDefaultTypeInternal;
extern UserSelectSkillDefaultTypeInternal _UserSelectSkill_default_instance_;
class UserSelectSkin;
class UserSelectSkinDefaultTypeInternal;
extern UserSelectSkinDefaultTypeInternal _UserSelectSkin_default_instance_;
class Vector2_;
class Vector2_DefaultTypeInternal;
extern Vector2_DefaultTypeInternal _Vector2__default_instance_;

enum MeteorMsg_MsgType {
  MeteorMsg_MsgType_ProtocolVerify = 10,
  MeteorMsg_MsgType_GetRoomReq = 100,
  MeteorMsg_MsgType_GetRoomRsp = 101,
  MeteorMsg_MsgType_CreateRoomReq = 102,
  MeteorMsg_MsgType_CreateRoomRsp = 103,
  MeteorMsg_MsgType_JoinRoomReq = 104,
  MeteorMsg_MsgType_JoinRoomRsp = 105,
  MeteorMsg_MsgType_ChatInRoomReq = 120,
  MeteorMsg_MsgType_ChatInRoomRsp = 121,
  MeteorMsg_MsgType_ChatInLobbyReq = 122,
  MeteorMsg_MsgType_ChatInLobbyRsp = 123,
  MeteorMsg_MsgType_EnterQueueReq = 124,
  MeteorMsg_MsgType_EnterQueueRsp = 125,
  MeteorMsg_MsgType_ExitQueueReq = 126,
  MeteorMsg_MsgType_ExitQueueRsp = 127,
  MeteorMsg_MsgType_QueueMsgWaitReady = 128,
  MeteorMsg_MsgType_QueueMsgCanceled = 129,
  MeteorMsg_MsgType_QueueMsgReadyReq = 130,
  MeteorMsg_MsgType_OnBattleBegin = 131,
  MeteorMsg_MsgType_OnBattleCancel = 132,
  MeteorMsg_MsgType_UserSelectRole = 133,
  MeteorMsg_MsgType_OnUserSelectRole = 134,
  MeteorMsg_MsgType_UserSelectSkill = 135,
  MeteorMsg_MsgType_OnUserSelectSkill = 136,
  MeteorMsg_MsgType_UserSelectSkin = 137,
  MeteorMsg_MsgType_OnUserSelectSkin = 138,
  MeteorMsg_MsgType_UserQuit = 139,
  MeteorMsg_MsgType_OnBattleEnterLevel = 140,
  MeteorMsg_MsgType_OnBattleLoading = 141,
  MeteorMsg_MsgType_OnBattleStart = 142,
  MeteorMsg_MsgType_OnBattleResult = 143,
  MeteorMsg_MsgType_OnBattleResultDetail = 144,
  MeteorMsg_MsgType_OnPlayerQuit = 146,
  MeteorMsg_MsgType_OnPlayerReStart = 147,
  MeteorMsg_MsgType_OnPlayerFetchInput = 148,
  MeteorMsg_MsgType_OnPlayerReConnect = 149,
  MeteorMsg_MsgType_AudioChat = 150,
  MeteorMsg_MsgType_SyncCommand = 888
};
bool MeteorMsg_MsgType_IsValid(int value);
const MeteorMsg_MsgType MeteorMsg_MsgType_MsgType_MIN = MeteorMsg_MsgType_ProtocolVerify;
const MeteorMsg_MsgType MeteorMsg_MsgType_MsgType_MAX = MeteorMsg_MsgType_SyncCommand;
const int MeteorMsg_MsgType_MsgType_ARRAYSIZE = MeteorMsg_MsgType_MsgType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MeteorMsg_MsgType_descriptor();
inline const ::std::string& MeteorMsg_MsgType_Name(MeteorMsg_MsgType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MeteorMsg_MsgType_descriptor(), value);
}
inline bool MeteorMsg_MsgType_Parse(
    const ::std::string& name, MeteorMsg_MsgType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MeteorMsg_MsgType>(
    MeteorMsg_MsgType_descriptor(), name, value);
}
enum MeteorMsg_Command {
  MeteorMsg_Command_SyncRandomSeed = 1,
  MeteorMsg_Command_KeyDown = 2,
  MeteorMsg_Command_KeyUp = 3,
  MeteorMsg_Command_SpawnPlayer = 4,
  MeteorMsg_Command_DestroyPlayer = 5,
  MeteorMsg_Command_JoyStickMove = 6,
  MeteorMsg_Command_MouseMove = 7,
  MeteorMsg_Command_EquipWeapon = 101,
  MeteorMsg_Command_DropWeapon = 102,
  MeteorMsg_Command_SellItem = 200,
  MeteorMsg_Command_BuyItem = 201
};
bool MeteorMsg_Command_IsValid(int value);
const MeteorMsg_Command MeteorMsg_Command_Command_MIN = MeteorMsg_Command_SyncRandomSeed;
const MeteorMsg_Command MeteorMsg_Command_Command_MAX = MeteorMsg_Command_BuyItem;
const int MeteorMsg_Command_Command_ARRAYSIZE = MeteorMsg_Command_Command_MAX + 1;

const ::google::protobuf::EnumDescriptor* MeteorMsg_Command_descriptor();
inline const ::std::string& MeteorMsg_Command_Name(MeteorMsg_Command value) {
  return ::google::protobuf::internal::NameOfEnum(
    MeteorMsg_Command_descriptor(), value);
}
inline bool MeteorMsg_Command_Parse(
    const ::std::string& name, MeteorMsg_Command* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MeteorMsg_Command>(
    MeteorMsg_Command_descriptor(), name, value);
}
enum RoomInfo_RoomRule {
  RoomInfo_RoomRule_MZ = 1,
  RoomInfo_RoomRule_ROB = 2,
  RoomInfo_RoomRule_Defence = 3,
  RoomInfo_RoomRule_KillTarget = 4,
  RoomInfo_RoomRule_Endless = 5,
  RoomInfo_RoomRule_Normal = 6,
  RoomInfo_RoomRule_Story = 7,
  RoomInfo_RoomRule_Moba = 8
};
bool RoomInfo_RoomRule_IsValid(int value);
const RoomInfo_RoomRule RoomInfo_RoomRule_RoomRule_MIN = RoomInfo_RoomRule_MZ;
const RoomInfo_RoomRule RoomInfo_RoomRule_RoomRule_MAX = RoomInfo_RoomRule_Moba;
const int RoomInfo_RoomRule_RoomRule_ARRAYSIZE = RoomInfo_RoomRule_RoomRule_MAX + 1;

const ::google::protobuf::EnumDescriptor* RoomInfo_RoomRule_descriptor();
inline const ::std::string& RoomInfo_RoomRule_Name(RoomInfo_RoomRule value) {
  return ::google::protobuf::internal::NameOfEnum(
    RoomInfo_RoomRule_descriptor(), value);
}
inline bool RoomInfo_RoomRule_Parse(
    const ::std::string& name, RoomInfo_RoomRule* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RoomInfo_RoomRule>(
    RoomInfo_RoomRule_descriptor(), name, value);
}
enum RoomInfo_RoomPattern {
  RoomInfo_RoomPattern__Normal = 1,
  RoomInfo_RoomPattern__Record = 2,
  RoomInfo_RoomPattern__Replay = 3
};
bool RoomInfo_RoomPattern_IsValid(int value);
const RoomInfo_RoomPattern RoomInfo_RoomPattern_RoomPattern_MIN = RoomInfo_RoomPattern__Normal;
const RoomInfo_RoomPattern RoomInfo_RoomPattern_RoomPattern_MAX = RoomInfo_RoomPattern__Replay;
const int RoomInfo_RoomPattern_RoomPattern_ARRAYSIZE = RoomInfo_RoomPattern_RoomPattern_MAX + 1;

const ::google::protobuf::EnumDescriptor* RoomInfo_RoomPattern_descriptor();
inline const ::std::string& RoomInfo_RoomPattern_Name(RoomInfo_RoomPattern value) {
  return ::google::protobuf::internal::NameOfEnum(
    RoomInfo_RoomPattern_descriptor(), value);
}
inline bool RoomInfo_RoomPattern_Parse(
    const ::std::string& name, RoomInfo_RoomPattern* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RoomInfo_RoomPattern>(
    RoomInfo_RoomPattern_descriptor(), name, value);
}
enum RoomInfo_MeteorVersion {
  RoomInfo_MeteorVersion_V107 = 1,
  RoomInfo_MeteorVersion_V907 = 2
};
bool RoomInfo_MeteorVersion_IsValid(int value);
const RoomInfo_MeteorVersion RoomInfo_MeteorVersion_MeteorVersion_MIN = RoomInfo_MeteorVersion_V107;
const RoomInfo_MeteorVersion RoomInfo_MeteorVersion_MeteorVersion_MAX = RoomInfo_MeteorVersion_V907;
const int RoomInfo_MeteorVersion_MeteorVersion_ARRAYSIZE = RoomInfo_MeteorVersion_MeteorVersion_MAX + 1;

const ::google::protobuf::EnumDescriptor* RoomInfo_MeteorVersion_descriptor();
inline const ::std::string& RoomInfo_MeteorVersion_Name(RoomInfo_MeteorVersion value) {
  return ::google::protobuf::internal::NameOfEnum(
    RoomInfo_MeteorVersion_descriptor(), value);
}
inline bool RoomInfo_MeteorVersion_Parse(
    const ::std::string& name, RoomInfo_MeteorVersion* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RoomInfo_MeteorVersion>(
    RoomInfo_MeteorVersion_descriptor(), name, value);
}
enum RoomInfo_ErrorCode {
  RoomInfo_ErrorCode_RoomNotExist = 1,
  RoomInfo_ErrorCode_RoomPlayerFull = 2,
  RoomInfo_ErrorCode_RoomNeedPassword = 3,
  RoomInfo_ErrorCode_RoomVersionErr = 4,
  RoomInfo_ErrorCode_UserInAnotherRoom = 5,
  RoomInfo_ErrorCode_RoomFull = 6
};
bool RoomInfo_ErrorCode_IsValid(int value);
const RoomInfo_ErrorCode RoomInfo_ErrorCode_ErrorCode_MIN = RoomInfo_ErrorCode_RoomNotExist;
const RoomInfo_ErrorCode RoomInfo_ErrorCode_ErrorCode_MAX = RoomInfo_ErrorCode_RoomFull;
const int RoomInfo_ErrorCode_ErrorCode_ARRAYSIZE = RoomInfo_ErrorCode_ErrorCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* RoomInfo_ErrorCode_descriptor();
inline const ::std::string& RoomInfo_ErrorCode_Name(RoomInfo_ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    RoomInfo_ErrorCode_descriptor(), value);
}
inline bool RoomInfo_ErrorCode_Parse(
    const ::std::string& name, RoomInfo_ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RoomInfo_ErrorCode>(
    RoomInfo_ErrorCode_descriptor(), name, value);
}
// ===================================================================

class MeteorMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MeteorMsg) */ {
 public:
  MeteorMsg();
  virtual ~MeteorMsg();

  MeteorMsg(const MeteorMsg& from);

  inline MeteorMsg& operator=(const MeteorMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MeteorMsg(MeteorMsg&& from) noexcept
    : MeteorMsg() {
    *this = ::std::move(from);
  }

  inline MeteorMsg& operator=(MeteorMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MeteorMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MeteorMsg* internal_default_instance() {
    return reinterpret_cast<const MeteorMsg*>(
               &_MeteorMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(MeteorMsg* other);
  friend void swap(MeteorMsg& a, MeteorMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MeteorMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  MeteorMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MeteorMsg& from);
  void MergeFrom(const MeteorMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MeteorMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MeteorMsg_MsgType MsgType;
  static const MsgType ProtocolVerify =
    MeteorMsg_MsgType_ProtocolVerify;
  static const MsgType GetRoomReq =
    MeteorMsg_MsgType_GetRoomReq;
  static const MsgType GetRoomRsp =
    MeteorMsg_MsgType_GetRoomRsp;
  static const MsgType CreateRoomReq =
    MeteorMsg_MsgType_CreateRoomReq;
  static const MsgType CreateRoomRsp =
    MeteorMsg_MsgType_CreateRoomRsp;
  static const MsgType JoinRoomReq =
    MeteorMsg_MsgType_JoinRoomReq;
  static const MsgType JoinRoomRsp =
    MeteorMsg_MsgType_JoinRoomRsp;
  static const MsgType ChatInRoomReq =
    MeteorMsg_MsgType_ChatInRoomReq;
  static const MsgType ChatInRoomRsp =
    MeteorMsg_MsgType_ChatInRoomRsp;
  static const MsgType ChatInLobbyReq =
    MeteorMsg_MsgType_ChatInLobbyReq;
  static const MsgType ChatInLobbyRsp =
    MeteorMsg_MsgType_ChatInLobbyRsp;
  static const MsgType EnterQueueReq =
    MeteorMsg_MsgType_EnterQueueReq;
  static const MsgType EnterQueueRsp =
    MeteorMsg_MsgType_EnterQueueRsp;
  static const MsgType ExitQueueReq =
    MeteorMsg_MsgType_ExitQueueReq;
  static const MsgType ExitQueueRsp =
    MeteorMsg_MsgType_ExitQueueRsp;
  static const MsgType QueueMsgWaitReady =
    MeteorMsg_MsgType_QueueMsgWaitReady;
  static const MsgType QueueMsgCanceled =
    MeteorMsg_MsgType_QueueMsgCanceled;
  static const MsgType QueueMsgReadyReq =
    MeteorMsg_MsgType_QueueMsgReadyReq;
  static const MsgType OnBattleBegin =
    MeteorMsg_MsgType_OnBattleBegin;
  static const MsgType OnBattleCancel =
    MeteorMsg_MsgType_OnBattleCancel;
  static const MsgType UserSelectRole =
    MeteorMsg_MsgType_UserSelectRole;
  static const MsgType OnUserSelectRole =
    MeteorMsg_MsgType_OnUserSelectRole;
  static const MsgType UserSelectSkill =
    MeteorMsg_MsgType_UserSelectSkill;
  static const MsgType OnUserSelectSkill =
    MeteorMsg_MsgType_OnUserSelectSkill;
  static const MsgType UserSelectSkin =
    MeteorMsg_MsgType_UserSelectSkin;
  static const MsgType OnUserSelectSkin =
    MeteorMsg_MsgType_OnUserSelectSkin;
  static const MsgType UserQuit =
    MeteorMsg_MsgType_UserQuit;
  static const MsgType OnBattleEnterLevel =
    MeteorMsg_MsgType_OnBattleEnterLevel;
  static const MsgType OnBattleLoading =
    MeteorMsg_MsgType_OnBattleLoading;
  static const MsgType OnBattleStart =
    MeteorMsg_MsgType_OnBattleStart;
  static const MsgType OnBattleResult =
    MeteorMsg_MsgType_OnBattleResult;
  static const MsgType OnBattleResultDetail =
    MeteorMsg_MsgType_OnBattleResultDetail;
  static const MsgType OnPlayerQuit =
    MeteorMsg_MsgType_OnPlayerQuit;
  static const MsgType OnPlayerReStart =
    MeteorMsg_MsgType_OnPlayerReStart;
  static const MsgType OnPlayerFetchInput =
    MeteorMsg_MsgType_OnPlayerFetchInput;
  static const MsgType OnPlayerReConnect =
    MeteorMsg_MsgType_OnPlayerReConnect;
  static const MsgType AudioChat =
    MeteorMsg_MsgType_AudioChat;
  static const MsgType SyncCommand =
    MeteorMsg_MsgType_SyncCommand;
  static inline bool MsgType_IsValid(int value) {
    return MeteorMsg_MsgType_IsValid(value);
  }
  static const MsgType MsgType_MIN =
    MeteorMsg_MsgType_MsgType_MIN;
  static const MsgType MsgType_MAX =
    MeteorMsg_MsgType_MsgType_MAX;
  static const int MsgType_ARRAYSIZE =
    MeteorMsg_MsgType_MsgType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MsgType_descriptor() {
    return MeteorMsg_MsgType_descriptor();
  }
  static inline const ::std::string& MsgType_Name(MsgType value) {
    return MeteorMsg_MsgType_Name(value);
  }
  static inline bool MsgType_Parse(const ::std::string& name,
      MsgType* value) {
    return MeteorMsg_MsgType_Parse(name, value);
  }

  typedef MeteorMsg_Command Command;
  static const Command SyncRandomSeed =
    MeteorMsg_Command_SyncRandomSeed;
  static const Command KeyDown =
    MeteorMsg_Command_KeyDown;
  static const Command KeyUp =
    MeteorMsg_Command_KeyUp;
  static const Command SpawnPlayer =
    MeteorMsg_Command_SpawnPlayer;
  static const Command DestroyPlayer =
    MeteorMsg_Command_DestroyPlayer;
  static const Command JoyStickMove =
    MeteorMsg_Command_JoyStickMove;
  static const Command MouseMove =
    MeteorMsg_Command_MouseMove;
  static const Command EquipWeapon =
    MeteorMsg_Command_EquipWeapon;
  static const Command DropWeapon =
    MeteorMsg_Command_DropWeapon;
  static const Command SellItem =
    MeteorMsg_Command_SellItem;
  static const Command BuyItem =
    MeteorMsg_Command_BuyItem;
  static inline bool Command_IsValid(int value) {
    return MeteorMsg_Command_IsValid(value);
  }
  static const Command Command_MIN =
    MeteorMsg_Command_Command_MIN;
  static const Command Command_MAX =
    MeteorMsg_Command_Command_MAX;
  static const int Command_ARRAYSIZE =
    MeteorMsg_Command_Command_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Command_descriptor() {
    return MeteorMsg_Command_descriptor();
  }
  static inline const ::std::string& Command_Name(Command value) {
    return MeteorMsg_Command_Name(value);
  }
  static inline bool Command_Parse(const ::std::string& name,
      Command* value) {
    return MeteorMsg_Command_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .MeteorMsg.MsgType cmd = 1;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 1;
  ::MeteorMsg_MsgType cmd() const;
  void set_cmd(::MeteorMsg_MsgType value);

  // @@protoc_insertion_point(class_scope:MeteorMsg)
 private:
  void set_has_cmd();
  void clear_has_cmd();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int cmd_;
  friend struct ::protobuf_protocol_2eproto::TableStruct;
  friend void ::protobuf_protocol_2eproto::InitDefaultsMeteorMsgImpl();
};
// -------------------------------------------------------------------

class KeyData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KeyData) */ {
 public:
  KeyData();
  virtual ~KeyData();

  KeyData(const KeyData& from);

  inline KeyData& operator=(const KeyData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KeyData(KeyData&& from) noexcept
    : KeyData() {
    *this = ::std::move(from);
  }

  inline KeyData& operator=(KeyData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KeyData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KeyData* internal_default_instance() {
    return reinterpret_cast<const KeyData*>(
               &_KeyData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(KeyData* other);
  friend void swap(KeyData& a, KeyData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KeyData* New() const PROTOBUF_FINAL { return New(NULL); }

  KeyData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KeyData& from);
  void MergeFrom(const KeyData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KeyData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::uint32 key() const;
  void set_key(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KeyData)
 private:
  void set_has_key();
  void clear_has_key();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 key_;
  friend struct ::protobuf_protocol_2eproto::TableStruct;
  friend void ::protobuf_protocol_2eproto::InitDefaultsKeyDataImpl();
};
// -------------------------------------------------------------------

class SyncInitData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SyncInitData) */ {
 public:
  SyncInitData();
  virtual ~SyncInitData();

  SyncInitData(const SyncInitData& from);

  inline SyncInitData& operator=(const SyncInitData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SyncInitData(SyncInitData&& from) noexcept
    : SyncInitData() {
    *this = ::std::move(from);
  }

  inline SyncInitData& operator=(SyncInitData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncInitData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SyncInitData* internal_default_instance() {
    return reinterpret_cast<const SyncInitData*>(
               &_SyncInitData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(SyncInitData* other);
  friend void swap(SyncInitData& a, SyncInitData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SyncInitData* New() const PROTOBUF_FINAL { return New(NULL); }

  SyncInitData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SyncInitData& from);
  void MergeFrom(const SyncInitData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SyncInitData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 randomSeed = 1;
  bool has_randomseed() const;
  void clear_randomseed();
  static const int kRandomSeedFieldNumber = 1;
  ::google::protobuf::uint32 randomseed() const;
  void set_randomseed(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SyncInitData)
 private:
  void set_has_randomseed();
  void clear_has_randomseed();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 randomseed_;
  friend struct ::protobuf_protocol_2eproto::TableStruct;
  friend void ::protobuf_protocol_2eproto::InitDefaultsSyncInitDataImpl();
};
// -------------------------------------------------------------------

class PlayerEventData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlayerEventData) */ {
 public:
  PlayerEventData();
  virtual ~PlayerEventData();

  PlayerEventData(const PlayerEventData& from);

  inline PlayerEventData& operator=(const PlayerEventData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerEventData(PlayerEventData&& from) noexcept
    : PlayerEventData() {
    *this = ::std::move(from);
  }

  inline PlayerEventData& operator=(PlayerEventData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerEventData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerEventData* internal_default_instance() {
    return reinterpret_cast<const PlayerEventData*>(
               &_PlayerEventData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(PlayerEventData* other);
  friend void swap(PlayerEventData& a, PlayerEventData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerEventData* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerEventData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerEventData& from);
  void MergeFrom(const PlayerEventData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerEventData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 5;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 5;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required uint32 playerId = 1;
  bool has_playerid() const;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 playerid() const;
  void set_playerid(::google::protobuf::uint32 value);

  // required uint32 camp = 2;
  bool has_camp() const;
  void clear_camp();
  static const int kCampFieldNumber = 2;
  ::google::protobuf::uint32 camp() const;
  void set_camp(::google::protobuf::uint32 value);

  // required uint32 model = 3;
  bool has_model() const;
  void clear_model();
  static const int kModelFieldNumber = 3;
  ::google::protobuf::uint32 model() const;
  void set_model(::google::protobuf::uint32 value);

  // required uint32 weapon = 4;
  bool has_weapon() const;
  void clear_weapon();
  static const int kWeaponFieldNumber = 4;
  ::google::protobuf::uint32 weapon() const;
  void set_weapon(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PlayerEventData)
 private:
  void set_has_playerid();
  void clear_has_playerid();
  void set_has_camp();
  void clear_has_camp();
  void set_has_model();
  void clear_has_model();
  void set_has_weapon();
  void clear_has_weapon();
  void set_has_name();
  void clear_has_name();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 camp_;
  ::google::protobuf::uint32 model_;
  ::google::protobuf::uint32 weapon_;
  friend struct ::protobuf_protocol_2eproto::TableStruct;
  friend void ::protobuf_protocol_2eproto::InitDefaultsPlayerEventDataImpl();
};
// -------------------------------------------------------------------

class EnterQueueRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EnterQueueRsp) */ {
 public:
  EnterQueueRsp();
  virtual ~EnterQueueRsp();

  EnterQueueRsp(const EnterQueueRsp& from);

  inline EnterQueueRsp& operator=(const EnterQueueRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnterQueueRsp(EnterQueueRsp&& from) noexcept
    : EnterQueueRsp() {
    *this = ::std::move(from);
  }

  inline EnterQueueRsp& operator=(EnterQueueRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterQueueRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EnterQueueRsp* internal_default_instance() {
    return reinterpret_cast<const EnterQueueRsp*>(
               &_EnterQueueRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(EnterQueueRsp* other);
  friend void swap(EnterQueueRsp& a, EnterQueueRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnterQueueRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  EnterQueueRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnterQueueRsp& from);
  void MergeFrom(const EnterQueueRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnterQueueRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // required uint32 playerId = 2;
  bool has_playerid() const;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 2;
  ::google::protobuf::uint32 playerid() const;
  void set_playerid(::google::protobuf::uint32 value);

  // required uint32 playerInQueue = 3;
  bool has_playerinqueue() const;
  void clear_playerinqueue();
  static const int kPlayerInQueueFieldNumber = 3;
  ::google::protobuf::uint32 playerinqueue() const;
  void set_playerinqueue(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:EnterQueueRsp)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_playerid();
  void clear_has_playerid();
  void set_has_playerinqueue();
  void clear_has_playerinqueue();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 playerinqueue_;
  friend struct ::protobuf_protocol_2eproto::TableStruct;
  friend void ::protobuf_protocol_2eproto::InitDefaultsEnterQueueRspImpl();
};
// -------------------------------------------------------------------

class OnBattleBegin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OnBattleBegin) */ {
 public:
  OnBattleBegin();
  virtual ~OnBattleBegin();

  OnBattleBegin(const OnBattleBegin& from);

  inline OnBattleBegin& operator=(const OnBattleBegin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OnBattleBegin(OnBattleBegin&& from) noexcept
    : OnBattleBegin() {
    *this = ::std::move(from);
  }

  inline OnBattleBegin& operator=(OnBattleBegin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OnBattleBegin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OnBattleBegin* internal_default_instance() {
    return reinterpret_cast<const OnBattleBegin*>(
               &_OnBattleBegin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(OnBattleBegin* other);
  friend void swap(OnBattleBegin& a, OnBattleBegin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OnBattleBegin* New() const PROTOBUF_FINAL { return New(NULL); }

  OnBattleBegin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OnBattleBegin& from);
  void MergeFrom(const OnBattleBegin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OnBattleBegin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 TeamMemberAId = 1;
  int teammemberaid_size() const;
  void clear_teammemberaid();
  static const int kTeamMemberAIdFieldNumber = 1;
  ::google::protobuf::uint32 teammemberaid(int index) const;
  void set_teammemberaid(int index, ::google::protobuf::uint32 value);
  void add_teammemberaid(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      teammemberaid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_teammemberaid();

  // repeated uint32 TeamMemberBId = 2;
  int teammemberbid_size() const;
  void clear_teammemberbid();
  static const int kTeamMemberBIdFieldNumber = 2;
  ::google::protobuf::uint32 teammemberbid(int index) const;
  void set_teammemberbid(int index, ::google::protobuf::uint32 value);
  void add_teammemberbid(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      teammemberbid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_teammemberbid();

  // repeated string TeamMemberA = 3;
  int teammembera_size() const;
  void clear_teammembera();
  static const int kTeamMemberAFieldNumber = 3;
  const ::std::string& teammembera(int index) const;
  ::std::string* mutable_teammembera(int index);
  void set_teammembera(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_teammembera(int index, ::std::string&& value);
  #endif
  void set_teammembera(int index, const char* value);
  void set_teammembera(int index, const char* value, size_t size);
  ::std::string* add_teammembera();
  void add_teammembera(const ::std::string& value);
  #if LANG_CXX11
  void add_teammembera(::std::string&& value);
  #endif
  void add_teammembera(const char* value);
  void add_teammembera(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& teammembera() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_teammembera();

  // repeated string TeamMemberB = 4;
  int teammemberb_size() const;
  void clear_teammemberb();
  static const int kTeamMemberBFieldNumber = 4;
  const ::std::string& teammemberb(int index) const;
  ::std::string* mutable_teammemberb(int index);
  void set_teammemberb(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_teammemberb(int index, ::std::string&& value);
  #endif
  void set_teammemberb(int index, const char* value);
  void set_teammemberb(int index, const char* value, size_t size);
  ::std::string* add_teammemberb();
  void add_teammemberb(const ::std::string& value);
  #if LANG_CXX11
  void add_teammemberb(::std::string&& value);
  #endif
  void add_teammemberb(const char* value);
  void add_teammemberb(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& teammemberb() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_teammemberb();

  // @@protoc_insertion_point(class_scope:OnBattleBegin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > teammemberaid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > teammemberbid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> teammembera_;
  ::google::protobuf::RepeatedPtrField< ::std::string> teammemberb_;
  friend struct ::protobuf_protocol_2eproto::TableStruct;
  friend void ::protobuf_protocol_2eproto::InitDefaultsOnBattleBeginImpl();
};
// -------------------------------------------------------------------

class UserSelectRole : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UserSelectRole) */ {
 public:
  UserSelectRole();
  virtual ~UserSelectRole();

  UserSelectRole(const UserSelectRole& from);

  inline UserSelectRole& operator=(const UserSelectRole& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserSelectRole(UserSelectRole&& from) noexcept
    : UserSelectRole() {
    *this = ::std::move(from);
  }

  inline UserSelectRole& operator=(UserSelectRole&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserSelectRole& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserSelectRole* internal_default_instance() {
    return reinterpret_cast<const UserSelectRole*>(
               &_UserSelectRole_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(UserSelectRole* other);
  friend void swap(UserSelectRole& a, UserSelectRole& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserSelectRole* New() const PROTOBUF_FINAL { return New(NULL); }

  UserSelectRole* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserSelectRole& from);
  void MergeFrom(const UserSelectRole& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserSelectRole* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 playerId = 1;
  bool has_playerid() const;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 playerid() const;
  void set_playerid(::google::protobuf::uint32 value);

  // required uint32 HeroId = 2;
  bool has_heroid() const;
  void clear_heroid();
  static const int kHeroIdFieldNumber = 2;
  ::google::protobuf::uint32 heroid() const;
  void set_heroid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UserSelectRole)
 private:
  void set_has_playerid();
  void clear_has_playerid();
  void set_has_heroid();
  void clear_has_heroid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 heroid_;
  friend struct ::protobuf_protocol_2eproto::TableStruct;
  friend void ::protobuf_protocol_2eproto::InitDefaultsUserSelectRoleImpl();
};
// -------------------------------------------------------------------

class UserSelectSkill : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UserSelectSkill) */ {
 public:
  UserSelectSkill();
  virtual ~UserSelectSkill();

  UserSelectSkill(const UserSelectSkill& from);

  inline UserSelectSkill& operator=(const UserSelectSkill& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserSelectSkill(UserSelectSkill&& from) noexcept
    : UserSelectSkill() {
    *this = ::std::move(from);
  }

  inline UserSelectSkill& operator=(UserSelectSkill&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserSelectSkill& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserSelectSkill* internal_default_instance() {
    return reinterpret_cast<const UserSelectSkill*>(
               &_UserSelectSkill_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(UserSelectSkill* other);
  friend void swap(UserSelectSkill& a, UserSelectSkill& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserSelectSkill* New() const PROTOBUF_FINAL { return New(NULL); }

  UserSelectSkill* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserSelectSkill& from);
  void MergeFrom(const UserSelectSkill& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserSelectSkill* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 playerId = 1;
  bool has_playerid() const;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 playerid() const;
  void set_playerid(::google::protobuf::uint32 value);

  // required uint32 SkillId = 2;
  bool has_skillid() const;
  void clear_skillid();
  static const int kSkillIdFieldNumber = 2;
  ::google::protobuf::uint32 skillid() const;
  void set_skillid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UserSelectSkill)
 private:
  void set_has_playerid();
  void clear_has_playerid();
  void set_has_skillid();
  void clear_has_skillid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 skillid_;
  friend struct ::protobuf_protocol_2eproto::TableStruct;
  friend void ::protobuf_protocol_2eproto::InitDefaultsUserSelectSkillImpl();
};
// -------------------------------------------------------------------

class UserSelectSkin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UserSelectSkin) */ {
 public:
  UserSelectSkin();
  virtual ~UserSelectSkin();

  UserSelectSkin(const UserSelectSkin& from);

  inline UserSelectSkin& operator=(const UserSelectSkin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserSelectSkin(UserSelectSkin&& from) noexcept
    : UserSelectSkin() {
    *this = ::std::move(from);
  }

  inline UserSelectSkin& operator=(UserSelectSkin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserSelectSkin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserSelectSkin* internal_default_instance() {
    return reinterpret_cast<const UserSelectSkin*>(
               &_UserSelectSkin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(UserSelectSkin* other);
  friend void swap(UserSelectSkin& a, UserSelectSkin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserSelectSkin* New() const PROTOBUF_FINAL { return New(NULL); }

  UserSelectSkin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserSelectSkin& from);
  void MergeFrom(const UserSelectSkin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserSelectSkin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 playerId = 1;
  bool has_playerid() const;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 playerid() const;
  void set_playerid(::google::protobuf::uint32 value);

  // required uint32 Skin = 2;
  bool has_skin() const;
  void clear_skin();
  static const int kSkinFieldNumber = 2;
  ::google::protobuf::uint32 skin() const;
  void set_skin(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UserSelectSkin)
 private:
  void set_has_playerid();
  void clear_has_playerid();
  void set_has_skin();
  void clear_has_skin();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 skin_;
  friend struct ::protobuf_protocol_2eproto::TableStruct;
  friend void ::protobuf_protocol_2eproto::InitDefaultsUserSelectSkinImpl();
};
// -------------------------------------------------------------------

class OnBattleCanceled : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OnBattleCanceled) */ {
 public:
  OnBattleCanceled();
  virtual ~OnBattleCanceled();

  OnBattleCanceled(const OnBattleCanceled& from);

  inline OnBattleCanceled& operator=(const OnBattleCanceled& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OnBattleCanceled(OnBattleCanceled&& from) noexcept
    : OnBattleCanceled() {
    *this = ::std::move(from);
  }

  inline OnBattleCanceled& operator=(OnBattleCanceled&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OnBattleCanceled& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OnBattleCanceled* internal_default_instance() {
    return reinterpret_cast<const OnBattleCanceled*>(
               &_OnBattleCanceled_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(OnBattleCanceled* other);
  friend void swap(OnBattleCanceled& a, OnBattleCanceled& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OnBattleCanceled* New() const PROTOBUF_FINAL { return New(NULL); }

  OnBattleCanceled* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OnBattleCanceled& from);
  void MergeFrom(const OnBattleCanceled& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OnBattleCanceled* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 reason = 1;
  bool has_reason() const;
  void clear_reason();
  static const int kReasonFieldNumber = 1;
  ::google::protobuf::uint32 reason() const;
  void set_reason(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:OnBattleCanceled)
 private:
  void set_has_reason();
  void clear_has_reason();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 reason_;
  friend struct ::protobuf_protocol_2eproto::TableStruct;
  friend void ::protobuf_protocol_2eproto::InitDefaultsOnBattleCanceledImpl();
};
// -------------------------------------------------------------------

class OnBattleLoading : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OnBattleLoading) */ {
 public:
  OnBattleLoading();
  virtual ~OnBattleLoading();

  OnBattleLoading(const OnBattleLoading& from);

  inline OnBattleLoading& operator=(const OnBattleLoading& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OnBattleLoading(OnBattleLoading&& from) noexcept
    : OnBattleLoading() {
    *this = ::std::move(from);
  }

  inline OnBattleLoading& operator=(OnBattleLoading&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OnBattleLoading& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OnBattleLoading* internal_default_instance() {
    return reinterpret_cast<const OnBattleLoading*>(
               &_OnBattleLoading_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(OnBattleLoading* other);
  friend void swap(OnBattleLoading& a, OnBattleLoading& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OnBattleLoading* New() const PROTOBUF_FINAL { return New(NULL); }

  OnBattleLoading* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OnBattleLoading& from);
  void MergeFrom(const OnBattleLoading& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OnBattleLoading* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 playerId = 1;
  int playerid_size() const;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 playerid(int index) const;
  void set_playerid(int index, ::google::protobuf::uint32 value);
  void add_playerid(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      playerid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_playerid();

  // repeated uint32 percent = 2;
  int percent_size() const;
  void clear_percent();
  static const int kPercentFieldNumber = 2;
  ::google::protobuf::uint32 percent(int index) const;
  void set_percent(int index, ::google::protobuf::uint32 value);
  void add_percent(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      percent() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_percent();

  // @@protoc_insertion_point(class_scope:OnBattleLoading)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > playerid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > percent_;
  friend struct ::protobuf_protocol_2eproto::TableStruct;
  friend void ::protobuf_protocol_2eproto::InitDefaultsOnBattleLoadingImpl();
};
// -------------------------------------------------------------------

class OnBattleResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OnBattleResult) */ {
 public:
  OnBattleResult();
  virtual ~OnBattleResult();

  OnBattleResult(const OnBattleResult& from);

  inline OnBattleResult& operator=(const OnBattleResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OnBattleResult(OnBattleResult&& from) noexcept
    : OnBattleResult() {
    *this = ::std::move(from);
  }

  inline OnBattleResult& operator=(OnBattleResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OnBattleResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OnBattleResult* internal_default_instance() {
    return reinterpret_cast<const OnBattleResult*>(
               &_OnBattleResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(OnBattleResult* other);
  friend void swap(OnBattleResult& a, OnBattleResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OnBattleResult* New() const PROTOBUF_FINAL { return New(NULL); }

  OnBattleResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OnBattleResult& from);
  void MergeFrom(const OnBattleResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OnBattleResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:OnBattleResult)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 result_;
  friend struct ::protobuf_protocol_2eproto::TableStruct;
  friend void ::protobuf_protocol_2eproto::InitDefaultsOnBattleResultImpl();
};
// -------------------------------------------------------------------

class PlayerSellItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlayerSellItem) */ {
 public:
  PlayerSellItem();
  virtual ~PlayerSellItem();

  PlayerSellItem(const PlayerSellItem& from);

  inline PlayerSellItem& operator=(const PlayerSellItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerSellItem(PlayerSellItem&& from) noexcept
    : PlayerSellItem() {
    *this = ::std::move(from);
  }

  inline PlayerSellItem& operator=(PlayerSellItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerSellItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerSellItem* internal_default_instance() {
    return reinterpret_cast<const PlayerSellItem*>(
               &_PlayerSellItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(PlayerSellItem* other);
  friend void swap(PlayerSellItem& a, PlayerSellItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerSellItem* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerSellItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerSellItem& from);
  void MergeFrom(const PlayerSellItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerSellItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 playerId = 1;
  bool has_playerid() const;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 playerid() const;
  void set_playerid(::google::protobuf::uint32 value);

  // required uint32 itemId = 2;
  bool has_itemid() const;
  void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  ::google::protobuf::uint32 itemid() const;
  void set_itemid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PlayerSellItem)
 private:
  void set_has_playerid();
  void clear_has_playerid();
  void set_has_itemid();
  void clear_has_itemid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 itemid_;
  friend struct ::protobuf_protocol_2eproto::TableStruct;
  friend void ::protobuf_protocol_2eproto::InitDefaultsPlayerSellItemImpl();
};
// -------------------------------------------------------------------

class PlayerBuyItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlayerBuyItem) */ {
 public:
  PlayerBuyItem();
  virtual ~PlayerBuyItem();

  PlayerBuyItem(const PlayerBuyItem& from);

  inline PlayerBuyItem& operator=(const PlayerBuyItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerBuyItem(PlayerBuyItem&& from) noexcept
    : PlayerBuyItem() {
    *this = ::std::move(from);
  }

  inline PlayerBuyItem& operator=(PlayerBuyItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerBuyItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerBuyItem* internal_default_instance() {
    return reinterpret_cast<const PlayerBuyItem*>(
               &_PlayerBuyItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(PlayerBuyItem* other);
  friend void swap(PlayerBuyItem& a, PlayerBuyItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerBuyItem* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerBuyItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerBuyItem& from);
  void MergeFrom(const PlayerBuyItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerBuyItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 playerId = 1;
  bool has_playerid() const;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 playerid() const;
  void set_playerid(::google::protobuf::uint32 value);

  // required uint32 itemId = 2;
  bool has_itemid() const;
  void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  ::google::protobuf::uint32 itemid() const;
  void set_itemid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PlayerBuyItem)
 private:
  void set_has_playerid();
  void clear_has_playerid();
  void set_has_itemid();
  void clear_has_itemid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 itemid_;
  friend struct ::protobuf_protocol_2eproto::TableStruct;
  friend void ::protobuf_protocol_2eproto::InitDefaultsPlayerBuyItemImpl();
};
// -------------------------------------------------------------------

class ProtocolVerifyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtocolVerifyReq) */ {
 public:
  ProtocolVerifyReq();
  virtual ~ProtocolVerifyReq();

  ProtocolVerifyReq(const ProtocolVerifyReq& from);

  inline ProtocolVerifyReq& operator=(const ProtocolVerifyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProtocolVerifyReq(ProtocolVerifyReq&& from) noexcept
    : ProtocolVerifyReq() {
    *this = ::std::move(from);
  }

  inline ProtocolVerifyReq& operator=(ProtocolVerifyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtocolVerifyReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtocolVerifyReq* internal_default_instance() {
    return reinterpret_cast<const ProtocolVerifyReq*>(
               &_ProtocolVerifyReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(ProtocolVerifyReq* other);
  friend void swap(ProtocolVerifyReq& a, ProtocolVerifyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProtocolVerifyReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ProtocolVerifyReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProtocolVerifyReq& from);
  void MergeFrom(const ProtocolVerifyReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProtocolVerifyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // required uint32 protocol = 1;
  bool has_protocol() const;
  void clear_protocol();
  static const int kProtocolFieldNumber = 1;
  ::google::protobuf::uint32 protocol() const;
  void set_protocol(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtocolVerifyReq)
 private:
  void set_has_protocol();
  void clear_has_protocol();
  void set_has_data();
  void clear_has_data();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::uint32 protocol_;
  friend struct ::protobuf_protocol_2eproto::TableStruct;
  friend void ::protobuf_protocol_2eproto::InitDefaultsProtocolVerifyReqImpl();
};
// -------------------------------------------------------------------

class ProtocolVerifyRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtocolVerifyRsp) */ {
 public:
  ProtocolVerifyRsp();
  virtual ~ProtocolVerifyRsp();

  ProtocolVerifyRsp(const ProtocolVerifyRsp& from);

  inline ProtocolVerifyRsp& operator=(const ProtocolVerifyRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProtocolVerifyRsp(ProtocolVerifyRsp&& from) noexcept
    : ProtocolVerifyRsp() {
    *this = ::std::move(from);
  }

  inline ProtocolVerifyRsp& operator=(ProtocolVerifyRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtocolVerifyRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtocolVerifyRsp* internal_default_instance() {
    return reinterpret_cast<const ProtocolVerifyRsp*>(
               &_ProtocolVerifyRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(ProtocolVerifyRsp* other);
  friend void swap(ProtocolVerifyRsp& a, ProtocolVerifyRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProtocolVerifyRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ProtocolVerifyRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProtocolVerifyRsp& from);
  void MergeFrom(const ProtocolVerifyRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProtocolVerifyRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string message = 2;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // required uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtocolVerifyRsp)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_message();
  void clear_has_message();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::uint32 result_;
  friend struct ::protobuf_protocol_2eproto::TableStruct;
  friend void ::protobuf_protocol_2eproto::InitDefaultsProtocolVerifyRspImpl();
};
// -------------------------------------------------------------------

class RoomInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RoomInfo) */ {
 public:
  RoomInfo();
  virtual ~RoomInfo();

  RoomInfo(const RoomInfo& from);

  inline RoomInfo& operator=(const RoomInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoomInfo(RoomInfo&& from) noexcept
    : RoomInfo() {
    *this = ::std::move(from);
  }

  inline RoomInfo& operator=(RoomInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoomInfo* internal_default_instance() {
    return reinterpret_cast<const RoomInfo*>(
               &_RoomInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(RoomInfo* other);
  friend void swap(RoomInfo& a, RoomInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoomInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  RoomInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoomInfo& from);
  void MergeFrom(const RoomInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoomInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef RoomInfo_RoomRule RoomRule;
  static const RoomRule MZ =
    RoomInfo_RoomRule_MZ;
  static const RoomRule ROB =
    RoomInfo_RoomRule_ROB;
  static const RoomRule Defence =
    RoomInfo_RoomRule_Defence;
  static const RoomRule KillTarget =
    RoomInfo_RoomRule_KillTarget;
  static const RoomRule Endless =
    RoomInfo_RoomRule_Endless;
  static const RoomRule Normal =
    RoomInfo_RoomRule_Normal;
  static const RoomRule Story =
    RoomInfo_RoomRule_Story;
  static const RoomRule Moba =
    RoomInfo_RoomRule_Moba;
  static inline bool RoomRule_IsValid(int value) {
    return RoomInfo_RoomRule_IsValid(value);
  }
  static const RoomRule RoomRule_MIN =
    RoomInfo_RoomRule_RoomRule_MIN;
  static const RoomRule RoomRule_MAX =
    RoomInfo_RoomRule_RoomRule_MAX;
  static const int RoomRule_ARRAYSIZE =
    RoomInfo_RoomRule_RoomRule_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RoomRule_descriptor() {
    return RoomInfo_RoomRule_descriptor();
  }
  static inline const ::std::string& RoomRule_Name(RoomRule value) {
    return RoomInfo_RoomRule_Name(value);
  }
  static inline bool RoomRule_Parse(const ::std::string& name,
      RoomRule* value) {
    return RoomInfo_RoomRule_Parse(name, value);
  }

  typedef RoomInfo_RoomPattern RoomPattern;
  static const RoomPattern _Normal =
    RoomInfo_RoomPattern__Normal;
  static const RoomPattern _Record =
    RoomInfo_RoomPattern__Record;
  static const RoomPattern _Replay =
    RoomInfo_RoomPattern__Replay;
  static inline bool RoomPattern_IsValid(int value) {
    return RoomInfo_RoomPattern_IsValid(value);
  }
  static const RoomPattern RoomPattern_MIN =
    RoomInfo_RoomPattern_RoomPattern_MIN;
  static const RoomPattern RoomPattern_MAX =
    RoomInfo_RoomPattern_RoomPattern_MAX;
  static const int RoomPattern_ARRAYSIZE =
    RoomInfo_RoomPattern_RoomPattern_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RoomPattern_descriptor() {
    return RoomInfo_RoomPattern_descriptor();
  }
  static inline const ::std::string& RoomPattern_Name(RoomPattern value) {
    return RoomInfo_RoomPattern_Name(value);
  }
  static inline bool RoomPattern_Parse(const ::std::string& name,
      RoomPattern* value) {
    return RoomInfo_RoomPattern_Parse(name, value);
  }

  typedef RoomInfo_MeteorVersion MeteorVersion;
  static const MeteorVersion V107 =
    RoomInfo_MeteorVersion_V107;
  static const MeteorVersion V907 =
    RoomInfo_MeteorVersion_V907;
  static inline bool MeteorVersion_IsValid(int value) {
    return RoomInfo_MeteorVersion_IsValid(value);
  }
  static const MeteorVersion MeteorVersion_MIN =
    RoomInfo_MeteorVersion_MeteorVersion_MIN;
  static const MeteorVersion MeteorVersion_MAX =
    RoomInfo_MeteorVersion_MeteorVersion_MAX;
  static const int MeteorVersion_ARRAYSIZE =
    RoomInfo_MeteorVersion_MeteorVersion_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MeteorVersion_descriptor() {
    return RoomInfo_MeteorVersion_descriptor();
  }
  static inline const ::std::string& MeteorVersion_Name(MeteorVersion value) {
    return RoomInfo_MeteorVersion_Name(value);
  }
  static inline bool MeteorVersion_Parse(const ::std::string& name,
      MeteorVersion* value) {
    return RoomInfo_MeteorVersion_Parse(name, value);
  }

  typedef RoomInfo_ErrorCode ErrorCode;
  static const ErrorCode RoomNotExist =
    RoomInfo_ErrorCode_RoomNotExist;
  static const ErrorCode RoomPlayerFull =
    RoomInfo_ErrorCode_RoomPlayerFull;
  static const ErrorCode RoomNeedPassword =
    RoomInfo_ErrorCode_RoomNeedPassword;
  static const ErrorCode RoomVersionErr =
    RoomInfo_ErrorCode_RoomVersionErr;
  static const ErrorCode UserInAnotherRoom =
    RoomInfo_ErrorCode_UserInAnotherRoom;
  static const ErrorCode RoomFull =
    RoomInfo_ErrorCode_RoomFull;
  static inline bool ErrorCode_IsValid(int value) {
    return RoomInfo_ErrorCode_IsValid(value);
  }
  static const ErrorCode ErrorCode_MIN =
    RoomInfo_ErrorCode_ErrorCode_MIN;
  static const ErrorCode ErrorCode_MAX =
    RoomInfo_ErrorCode_ErrorCode_MAX;
  static const int ErrorCode_ARRAYSIZE =
    RoomInfo_ErrorCode_ErrorCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ErrorCode_descriptor() {
    return RoomInfo_ErrorCode_descriptor();
  }
  static inline const ::std::string& ErrorCode_Name(ErrorCode value) {
    return RoomInfo_ErrorCode_Name(value);
  }
  static inline bool ErrorCode_Parse(const ::std::string& name,
      ErrorCode* value) {
    return RoomInfo_ErrorCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string roomName = 2;
  bool has_roomname() const;
  void clear_roomname();
  static const int kRoomNameFieldNumber = 2;
  const ::std::string& roomname() const;
  void set_roomname(const ::std::string& value);
  #if LANG_CXX11
  void set_roomname(::std::string&& value);
  #endif
  void set_roomname(const char* value);
  void set_roomname(const char* value, size_t size);
  ::std::string* mutable_roomname();
  ::std::string* release_roomname();
  void set_allocated_roomname(::std::string* roomname);

  // required uint32 roomId = 1;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint32 roomid() const;
  void set_roomid(::google::protobuf::uint32 value);

  // required uint32 levelIdx = 5;
  bool has_levelidx() const;
  void clear_levelidx();
  static const int kLevelIdxFieldNumber = 5;
  ::google::protobuf::uint32 levelidx() const;
  void set_levelidx(::google::protobuf::uint32 value);

  // required uint32 hpMax = 6;
  bool has_hpmax() const;
  void clear_hpmax();
  static const int kHpMaxFieldNumber = 6;
  ::google::protobuf::uint32 hpmax() const;
  void set_hpmax(::google::protobuf::uint32 value);

  // required uint32 password = 7;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 7;
  ::google::protobuf::uint32 password() const;
  void set_password(::google::protobuf::uint32 value);

  // required uint32 Group1 = 9;
  bool has_group1() const;
  void clear_group1();
  static const int kGroup1FieldNumber = 9;
  ::google::protobuf::uint32 group1() const;
  void set_group1(::google::protobuf::uint32 value);

  // required uint32 Group2 = 10;
  bool has_group2() const;
  void clear_group2();
  static const int kGroup2FieldNumber = 10;
  ::google::protobuf::uint32 group2() const;
  void set_group2(::google::protobuf::uint32 value);

  // required uint32 playerCount = 11;
  bool has_playercount() const;
  void clear_playercount();
  static const int kPlayerCountFieldNumber = 11;
  ::google::protobuf::uint32 playercount() const;
  void set_playercount(::google::protobuf::uint32 value);

  // required uint32 maxPlayer = 12;
  bool has_maxplayer() const;
  void clear_maxplayer();
  static const int kMaxPlayerFieldNumber = 12;
  ::google::protobuf::uint32 maxplayer() const;
  void set_maxplayer(::google::protobuf::uint32 value);

  // required .RoomInfo.MeteorVersion version = 8;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 8;
  ::RoomInfo_MeteorVersion version() const;
  void set_version(::RoomInfo_MeteorVersion value);

  // required .RoomInfo.RoomRule rule = 3;
  bool has_rule() const;
  void clear_rule();
  static const int kRuleFieldNumber = 3;
  ::RoomInfo_RoomRule rule() const;
  void set_rule(::RoomInfo_RoomRule value);

  // required .RoomInfo.RoomPattern pattern = 4;
  bool has_pattern() const;
  void clear_pattern();
  static const int kPatternFieldNumber = 4;
  ::RoomInfo_RoomPattern pattern() const;
  void set_pattern(::RoomInfo_RoomPattern value);

  // @@protoc_insertion_point(class_scope:RoomInfo)
 private:
  void set_has_roomid();
  void clear_has_roomid();
  void set_has_roomname();
  void clear_has_roomname();
  void set_has_rule();
  void clear_has_rule();
  void set_has_pattern();
  void clear_has_pattern();
  void set_has_levelidx();
  void clear_has_levelidx();
  void set_has_hpmax();
  void clear_has_hpmax();
  void set_has_password();
  void clear_has_password();
  void set_has_version();
  void clear_has_version();
  void set_has_group1();
  void clear_has_group1();
  void set_has_group2();
  void clear_has_group2();
  void set_has_playercount();
  void clear_has_playercount();
  void set_has_maxplayer();
  void clear_has_maxplayer();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr roomname_;
  ::google::protobuf::uint32 roomid_;
  ::google::protobuf::uint32 levelidx_;
  ::google::protobuf::uint32 hpmax_;
  ::google::protobuf::uint32 password_;
  ::google::protobuf::uint32 group1_;
  ::google::protobuf::uint32 group2_;
  ::google::protobuf::uint32 playercount_;
  ::google::protobuf::uint32 maxplayer_;
  int version_;
  int rule_;
  int pattern_;
  friend struct ::protobuf_protocol_2eproto::TableStruct;
  friend void ::protobuf_protocol_2eproto::InitDefaultsRoomInfoImpl();
};
// -------------------------------------------------------------------

class GetRoomRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GetRoomRsp) */ {
 public:
  GetRoomRsp();
  virtual ~GetRoomRsp();

  GetRoomRsp(const GetRoomRsp& from);

  inline GetRoomRsp& operator=(const GetRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetRoomRsp(GetRoomRsp&& from) noexcept
    : GetRoomRsp() {
    *this = ::std::move(from);
  }

  inline GetRoomRsp& operator=(GetRoomRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRoomRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetRoomRsp* internal_default_instance() {
    return reinterpret_cast<const GetRoomRsp*>(
               &_GetRoomRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(GetRoomRsp* other);
  friend void swap(GetRoomRsp& a, GetRoomRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetRoomRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetRoomRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetRoomRsp& from);
  void MergeFrom(const GetRoomRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetRoomRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .RoomInfo RoomInLobby = 1;
  int roominlobby_size() const;
  void clear_roominlobby();
  static const int kRoomInLobbyFieldNumber = 1;
  const ::RoomInfo& roominlobby(int index) const;
  ::RoomInfo* mutable_roominlobby(int index);
  ::RoomInfo* add_roominlobby();
  ::google::protobuf::RepeatedPtrField< ::RoomInfo >*
      mutable_roominlobby();
  const ::google::protobuf::RepeatedPtrField< ::RoomInfo >&
      roominlobby() const;

  // @@protoc_insertion_point(class_scope:GetRoomRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::RoomInfo > roominlobby_;
  friend struct ::protobuf_protocol_2eproto::TableStruct;
  friend void ::protobuf_protocol_2eproto::InitDefaultsGetRoomRspImpl();
};
// -------------------------------------------------------------------

class CreateRoomReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CreateRoomReq) */ {
 public:
  CreateRoomReq();
  virtual ~CreateRoomReq();

  CreateRoomReq(const CreateRoomReq& from);

  inline CreateRoomReq& operator=(const CreateRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateRoomReq(CreateRoomReq&& from) noexcept
    : CreateRoomReq() {
    *this = ::std::move(from);
  }

  inline CreateRoomReq& operator=(CreateRoomReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateRoomReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateRoomReq* internal_default_instance() {
    return reinterpret_cast<const CreateRoomReq*>(
               &_CreateRoomReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(CreateRoomReq* other);
  friend void swap(CreateRoomReq& a, CreateRoomReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateRoomReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateRoomReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateRoomReq& from);
  void MergeFrom(const CreateRoomReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateRoomReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 models = 11;
  int models_size() const;
  void clear_models();
  static const int kModelsFieldNumber = 11;
  ::google::protobuf::uint32 models(int index) const;
  void set_models(int index, ::google::protobuf::uint32 value);
  void add_models(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      models() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_models();

  // repeated uint32 weapons = 12;
  int weapons_size() const;
  void clear_weapons();
  static const int kWeaponsFieldNumber = 12;
  ::google::protobuf::uint32 weapons(int index) const;
  void set_weapons(int index, ::google::protobuf::uint32 value);
  void add_weapons(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      weapons() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_weapons();

  // required string roomName = 5;
  bool has_roomname() const;
  void clear_roomname();
  static const int kRoomNameFieldNumber = 5;
  const ::std::string& roomname() const;
  void set_roomname(const ::std::string& value);
  #if LANG_CXX11
  void set_roomname(::std::string&& value);
  #endif
  void set_roomname(const char* value);
  void set_roomname(const char* value, size_t size);
  ::std::string* mutable_roomname();
  ::std::string* release_roomname();
  void set_allocated_roomname(::std::string* roomname);

  // optional string secret = 9;
  bool has_secret() const;
  void clear_secret();
  static const int kSecretFieldNumber = 9;
  const ::std::string& secret() const;
  void set_secret(const ::std::string& value);
  #if LANG_CXX11
  void set_secret(::std::string&& value);
  #endif
  void set_secret(const char* value);
  void set_secret(const char* value, size_t size);
  ::std::string* mutable_secret();
  ::std::string* release_secret();
  void set_allocated_secret(::std::string* secret);

  // optional bytes replay_data = 10;
  bool has_replay_data() const;
  void clear_replay_data();
  static const int kReplayDataFieldNumber = 10;
  const ::std::string& replay_data() const;
  void set_replay_data(const ::std::string& value);
  #if LANG_CXX11
  void set_replay_data(::std::string&& value);
  #endif
  void set_replay_data(const char* value);
  void set_replay_data(const void* value, size_t size);
  ::std::string* mutable_replay_data();
  ::std::string* release_replay_data();
  void set_allocated_replay_data(::std::string* replay_data);

  // required uint32 maxPlayer = 2;
  bool has_maxplayer() const;
  void clear_maxplayer();
  static const int kMaxPlayerFieldNumber = 2;
  ::google::protobuf::uint32 maxplayer() const;
  void set_maxplayer(::google::protobuf::uint32 value);

  // required uint32 levelIdx = 3;
  bool has_levelidx() const;
  void clear_levelidx();
  static const int kLevelIdxFieldNumber = 3;
  ::google::protobuf::uint32 levelidx() const;
  void set_levelidx(::google::protobuf::uint32 value);

  // required uint32 hpMax = 6;
  bool has_hpmax() const;
  void clear_hpmax();
  static const int kHpMaxFieldNumber = 6;
  ::google::protobuf::uint32 hpmax() const;
  void set_hpmax(::google::protobuf::uint32 value);

  // required uint32 roundTime = 7;
  bool has_roundtime() const;
  void clear_roundtime();
  static const int kRoundTimeFieldNumber = 7;
  ::google::protobuf::uint32 roundtime() const;
  void set_roundtime(::google::protobuf::uint32 value);

  // required .RoomInfo.MeteorVersion version = 8;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 8;
  ::RoomInfo_MeteorVersion version() const;
  void set_version(::RoomInfo_MeteorVersion value);

  // required .RoomInfo.RoomPattern pattern = 1;
  bool has_pattern() const;
  void clear_pattern();
  static const int kPatternFieldNumber = 1;
  ::RoomInfo_RoomPattern pattern() const;
  void set_pattern(::RoomInfo_RoomPattern value);

  // required .RoomInfo.RoomRule rule = 4;
  bool has_rule() const;
  void clear_rule();
  static const int kRuleFieldNumber = 4;
  ::RoomInfo_RoomRule rule() const;
  void set_rule(::RoomInfo_RoomRule value);

  // @@protoc_insertion_point(class_scope:CreateRoomReq)
 private:
  void set_has_pattern();
  void clear_has_pattern();
  void set_has_maxplayer();
  void clear_has_maxplayer();
  void set_has_levelidx();
  void clear_has_levelidx();
  void set_has_rule();
  void clear_has_rule();
  void set_has_roomname();
  void clear_has_roomname();
  void set_has_hpmax();
  void clear_has_hpmax();
  void set_has_roundtime();
  void clear_has_roundtime();
  void set_has_version();
  void clear_has_version();
  void set_has_secret();
  void clear_has_secret();
  void set_has_replay_data();
  void clear_has_replay_data();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > models_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > weapons_;
  ::google::protobuf::internal::ArenaStringPtr roomname_;
  ::google::protobuf::internal::ArenaStringPtr secret_;
  ::google::protobuf::internal::ArenaStringPtr replay_data_;
  ::google::protobuf::uint32 maxplayer_;
  ::google::protobuf::uint32 levelidx_;
  ::google::protobuf::uint32 hpmax_;
  ::google::protobuf::uint32 roundtime_;
  int version_;
  int pattern_;
  int rule_;
  friend struct ::protobuf_protocol_2eproto::TableStruct;
  friend void ::protobuf_protocol_2eproto::InitDefaultsCreateRoomReqImpl();
};
// -------------------------------------------------------------------

class CreateRoomRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CreateRoomRsp) */ {
 public:
  CreateRoomRsp();
  virtual ~CreateRoomRsp();

  CreateRoomRsp(const CreateRoomRsp& from);

  inline CreateRoomRsp& operator=(const CreateRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateRoomRsp(CreateRoomRsp&& from) noexcept
    : CreateRoomRsp() {
    *this = ::std::move(from);
  }

  inline CreateRoomRsp& operator=(CreateRoomRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateRoomRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateRoomRsp* internal_default_instance() {
    return reinterpret_cast<const CreateRoomRsp*>(
               &_CreateRoomRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(CreateRoomRsp* other);
  friend void swap(CreateRoomRsp& a, CreateRoomRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateRoomRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateRoomRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateRoomRsp& from);
  void MergeFrom(const CreateRoomRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateRoomRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // required uint32 roomId = 2;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::uint32 roomid() const;
  void set_roomid(::google::protobuf::uint32 value);

  // required uint32 levelId = 3;
  bool has_levelid() const;
  void clear_levelid();
  static const int kLevelIdFieldNumber = 3;
  ::google::protobuf::uint32 levelid() const;
  void set_levelid(::google::protobuf::uint32 value);

  // required uint32 playerId = 4;
  bool has_playerid() const;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 4;
  ::google::protobuf::uint32 playerid() const;
  void set_playerid(::google::protobuf::uint32 value);

  // required uint32 port = 5;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 5;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CreateRoomRsp)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_roomid();
  void clear_has_roomid();
  void set_has_levelid();
  void clear_has_levelid();
  void set_has_playerid();
  void clear_has_playerid();
  void set_has_port();
  void clear_has_port();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 roomid_;
  ::google::protobuf::uint32 levelid_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 port_;
  friend struct ::protobuf_protocol_2eproto::TableStruct;
  friend void ::protobuf_protocol_2eproto::InitDefaultsCreateRoomRspImpl();
};
// -------------------------------------------------------------------

class JoinRoomReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:JoinRoomReq) */ {
 public:
  JoinRoomReq();
  virtual ~JoinRoomReq();

  JoinRoomReq(const JoinRoomReq& from);

  inline JoinRoomReq& operator=(const JoinRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JoinRoomReq(JoinRoomReq&& from) noexcept
    : JoinRoomReq() {
    *this = ::std::move(from);
  }

  inline JoinRoomReq& operator=(JoinRoomReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinRoomReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JoinRoomReq* internal_default_instance() {
    return reinterpret_cast<const JoinRoomReq*>(
               &_JoinRoomReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(JoinRoomReq* other);
  friend void swap(JoinRoomReq& a, JoinRoomReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JoinRoomReq* New() const PROTOBUF_FINAL { return New(NULL); }

  JoinRoomReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JoinRoomReq& from);
  void MergeFrom(const JoinRoomReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JoinRoomReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string password = 3;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 3;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // required uint32 roomId = 1;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint32 roomid() const;
  void set_roomid(::google::protobuf::uint32 value);

  // required .RoomInfo.MeteorVersion version = 2;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  ::RoomInfo_MeteorVersion version() const;
  void set_version(::RoomInfo_MeteorVersion value);

  // @@protoc_insertion_point(class_scope:JoinRoomReq)
 private:
  void set_has_roomid();
  void clear_has_roomid();
  void set_has_version();
  void clear_has_version();
  void set_has_password();
  void clear_has_password();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::uint32 roomid_;
  int version_;
  friend struct ::protobuf_protocol_2eproto::TableStruct;
  friend void ::protobuf_protocol_2eproto::InitDefaultsJoinRoomReqImpl();
};
// -------------------------------------------------------------------

class JoinRoomRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:JoinRoomRsp) */ {
 public:
  JoinRoomRsp();
  virtual ~JoinRoomRsp();

  JoinRoomRsp(const JoinRoomRsp& from);

  inline JoinRoomRsp& operator=(const JoinRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JoinRoomRsp(JoinRoomRsp&& from) noexcept
    : JoinRoomRsp() {
    *this = ::std::move(from);
  }

  inline JoinRoomRsp& operator=(JoinRoomRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinRoomRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JoinRoomRsp* internal_default_instance() {
    return reinterpret_cast<const JoinRoomRsp*>(
               &_JoinRoomRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(JoinRoomRsp* other);
  friend void swap(JoinRoomRsp& a, JoinRoomRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JoinRoomRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  JoinRoomRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JoinRoomRsp& from);
  void MergeFrom(const JoinRoomRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JoinRoomRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 models = 7;
  int models_size() const;
  void clear_models();
  static const int kModelsFieldNumber = 7;
  ::google::protobuf::uint32 models(int index) const;
  void set_models(int index, ::google::protobuf::uint32 value);
  void add_models(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      models() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_models();

  // repeated uint32 weapons = 8;
  int weapons_size() const;
  void clear_weapons();
  static const int kWeaponsFieldNumber = 8;
  ::google::protobuf::uint32 weapons(int index) const;
  void set_weapons(int index, ::google::protobuf::uint32 value);
  void add_weapons(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      weapons() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_weapons();

  // required uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // required uint32 reason = 2;
  bool has_reason() const;
  void clear_reason();
  static const int kReasonFieldNumber = 2;
  ::google::protobuf::uint32 reason() const;
  void set_reason(::google::protobuf::uint32 value);

  // required uint32 levelIdx = 3;
  bool has_levelidx() const;
  void clear_levelidx();
  static const int kLevelIdxFieldNumber = 3;
  ::google::protobuf::uint32 levelidx() const;
  void set_levelidx(::google::protobuf::uint32 value);

  // required uint32 roomId = 4;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 4;
  ::google::protobuf::uint32 roomid() const;
  void set_roomid(::google::protobuf::uint32 value);

  // required uint32 playerId = 5;
  bool has_playerid() const;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 5;
  ::google::protobuf::uint32 playerid() const;
  void set_playerid(::google::protobuf::uint32 value);

  // required uint32 port = 6;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 6;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:JoinRoomRsp)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_reason();
  void clear_has_reason();
  void set_has_levelidx();
  void clear_has_levelidx();
  void set_has_roomid();
  void clear_has_roomid();
  void set_has_playerid();
  void clear_has_playerid();
  void set_has_port();
  void clear_has_port();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > models_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > weapons_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 reason_;
  ::google::protobuf::uint32 levelidx_;
  ::google::protobuf::uint32 roomid_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 port_;
  friend struct ::protobuf_protocol_2eproto::TableStruct;
  friend void ::protobuf_protocol_2eproto::InitDefaultsJoinRoomRspImpl();
};
// -------------------------------------------------------------------

class Vector2_ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Vector2_) */ {
 public:
  Vector2_();
  virtual ~Vector2_();

  Vector2_(const Vector2_& from);

  inline Vector2_& operator=(const Vector2_& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Vector2_(Vector2_&& from) noexcept
    : Vector2_() {
    *this = ::std::move(from);
  }

  inline Vector2_& operator=(Vector2_&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Vector2_& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Vector2_* internal_default_instance() {
    return reinterpret_cast<const Vector2_*>(
               &_Vector2__default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(Vector2_* other);
  friend void swap(Vector2_& a, Vector2_& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Vector2_* New() const PROTOBUF_FINAL { return New(NULL); }

  Vector2_* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Vector2_& from);
  void MergeFrom(const Vector2_& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Vector2_* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // required int32 y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Vector2_)
 private:
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  friend struct ::protobuf_protocol_2eproto::TableStruct;
  friend void ::protobuf_protocol_2eproto::InitDefaultsVector2_Impl();
};
// -------------------------------------------------------------------

class FrameCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FrameCommand) */ {
 public:
  FrameCommand();
  virtual ~FrameCommand();

  FrameCommand(const FrameCommand& from);

  inline FrameCommand& operator=(const FrameCommand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FrameCommand(FrameCommand&& from) noexcept
    : FrameCommand() {
    *this = ::std::move(from);
  }

  inline FrameCommand& operator=(FrameCommand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameCommand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FrameCommand* internal_default_instance() {
    return reinterpret_cast<const FrameCommand*>(
               &_FrameCommand_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(FrameCommand* other);
  friend void swap(FrameCommand& a, FrameCommand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FrameCommand* New() const PROTOBUF_FINAL { return New(NULL); }

  FrameCommand* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FrameCommand& from);
  void MergeFrom(const FrameCommand& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FrameCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes data = 4;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 4;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // required uint32 LogicFrame = 1;
  bool has_logicframe() const;
  void clear_logicframe();
  static const int kLogicFrameFieldNumber = 1;
  ::google::protobuf::uint32 logicframe() const;
  void set_logicframe(::google::protobuf::uint32 value);

  // optional uint32 playerId = 2;
  bool has_playerid() const;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 2;
  ::google::protobuf::uint32 playerid() const;
  void set_playerid(::google::protobuf::uint32 value);

  // required .MeteorMsg.Command command = 3;
  bool has_command() const;
  void clear_command();
  static const int kCommandFieldNumber = 3;
  ::MeteorMsg_Command command() const;
  void set_command(::MeteorMsg_Command value);

  // @@protoc_insertion_point(class_scope:FrameCommand)
 private:
  void set_has_logicframe();
  void clear_has_logicframe();
  void set_has_playerid();
  void clear_has_playerid();
  void set_has_command();
  void clear_has_command();
  void set_has_data();
  void clear_has_data();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::uint32 logicframe_;
  ::google::protobuf::uint32 playerid_;
  int command_;
  friend struct ::protobuf_protocol_2eproto::TableStruct;
  friend void ::protobuf_protocol_2eproto::InitDefaultsFrameCommandImpl();
};
// -------------------------------------------------------------------

class GameFrames : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameFrames) */ {
 public:
  GameFrames();
  virtual ~GameFrames();

  GameFrames(const GameFrames& from);

  inline GameFrames& operator=(const GameFrames& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameFrames(GameFrames&& from) noexcept
    : GameFrames() {
    *this = ::std::move(from);
  }

  inline GameFrames& operator=(GameFrames&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameFrames& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameFrames* internal_default_instance() {
    return reinterpret_cast<const GameFrames*>(
               &_GameFrames_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(GameFrames* other);
  friend void swap(GameFrames& a, GameFrames& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameFrames* New() const PROTOBUF_FINAL { return New(NULL); }

  GameFrames* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GameFrames& from);
  void MergeFrom(const GameFrames& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GameFrames* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .FrameCommand commands = 1;
  int commands_size() const;
  void clear_commands();
  static const int kCommandsFieldNumber = 1;
  const ::FrameCommand& commands(int index) const;
  ::FrameCommand* mutable_commands(int index);
  ::FrameCommand* add_commands();
  ::google::protobuf::RepeatedPtrField< ::FrameCommand >*
      mutable_commands();
  const ::google::protobuf::RepeatedPtrField< ::FrameCommand >&
      commands() const;

  // @@protoc_insertion_point(class_scope:GameFrames)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::FrameCommand > commands_;
  friend struct ::protobuf_protocol_2eproto::TableStruct;
  friend void ::protobuf_protocol_2eproto::InitDefaultsGameFramesImpl();
};
// -------------------------------------------------------------------

class ChatMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ChatMsg) */ {
 public:
  ChatMsg();
  virtual ~ChatMsg();

  ChatMsg(const ChatMsg& from);

  inline ChatMsg& operator=(const ChatMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChatMsg(ChatMsg&& from) noexcept
    : ChatMsg() {
    *this = ::std::move(from);
  }

  inline ChatMsg& operator=(ChatMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChatMsg* internal_default_instance() {
    return reinterpret_cast<const ChatMsg*>(
               &_ChatMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(ChatMsg* other);
  friend void swap(ChatMsg& a, ChatMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChatMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatMsg& from);
  void MergeFrom(const ChatMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string chatMessage = 3;
  bool has_chatmessage() const;
  void clear_chatmessage();
  static const int kChatMessageFieldNumber = 3;
  const ::std::string& chatmessage() const;
  void set_chatmessage(const ::std::string& value);
  #if LANG_CXX11
  void set_chatmessage(::std::string&& value);
  #endif
  void set_chatmessage(const char* value);
  void set_chatmessage(const char* value, size_t size);
  ::std::string* mutable_chatmessage();
  ::std::string* release_chatmessage();
  void set_allocated_chatmessage(::std::string* chatmessage);

  // required uint32 playerId = 1;
  bool has_playerid() const;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 playerid() const;
  void set_playerid(::google::protobuf::uint32 value);

  // required uint32 channelType = 2;
  bool has_channeltype() const;
  void clear_channeltype();
  static const int kChannelTypeFieldNumber = 2;
  ::google::protobuf::uint32 channeltype() const;
  void set_channeltype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ChatMsg)
 private:
  void set_has_playerid();
  void clear_has_playerid();
  void set_has_channeltype();
  void clear_has_channeltype();
  void set_has_chatmessage();
  void clear_has_chatmessage();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr chatmessage_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 channeltype_;
  friend struct ::protobuf_protocol_2eproto::TableStruct;
  friend void ::protobuf_protocol_2eproto::InitDefaultsChatMsgImpl();
};
// -------------------------------------------------------------------

class AudioChatMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AudioChatMsg) */ {
 public:
  AudioChatMsg();
  virtual ~AudioChatMsg();

  AudioChatMsg(const AudioChatMsg& from);

  inline AudioChatMsg& operator=(const AudioChatMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AudioChatMsg(AudioChatMsg&& from) noexcept
    : AudioChatMsg() {
    *this = ::std::move(from);
  }

  inline AudioChatMsg& operator=(AudioChatMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AudioChatMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AudioChatMsg* internal_default_instance() {
    return reinterpret_cast<const AudioChatMsg*>(
               &_AudioChatMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(AudioChatMsg* other);
  friend void swap(AudioChatMsg& a, AudioChatMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AudioChatMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  AudioChatMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AudioChatMsg& from);
  void MergeFrom(const AudioChatMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AudioChatMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes audio_data = 3;
  bool has_audio_data() const;
  void clear_audio_data();
  static const int kAudioDataFieldNumber = 3;
  const ::std::string& audio_data() const;
  void set_audio_data(const ::std::string& value);
  #if LANG_CXX11
  void set_audio_data(::std::string&& value);
  #endif
  void set_audio_data(const char* value);
  void set_audio_data(const void* value, size_t size);
  ::std::string* mutable_audio_data();
  ::std::string* release_audio_data();
  void set_allocated_audio_data(::std::string* audio_data);

  // required uint32 playerId = 1;
  bool has_playerid() const;
  void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 playerid() const;
  void set_playerid(::google::protobuf::uint32 value);

  // required uint32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:AudioChatMsg)
 private:
  void set_has_playerid();
  void clear_has_playerid();
  void set_has_type();
  void clear_has_type();
  void set_has_audio_data();
  void clear_has_audio_data();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr audio_data_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 type_;
  friend struct ::protobuf_protocol_2eproto::TableStruct;
  friend void ::protobuf_protocol_2eproto::InitDefaultsAudioChatMsgImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MeteorMsg

// required .MeteorMsg.MsgType cmd = 1;
inline bool MeteorMsg::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MeteorMsg::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MeteorMsg::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MeteorMsg::clear_cmd() {
  cmd_ = 10;
  clear_has_cmd();
}
inline ::MeteorMsg_MsgType MeteorMsg::cmd() const {
  // @@protoc_insertion_point(field_get:MeteorMsg.cmd)
  return static_cast< ::MeteorMsg_MsgType >(cmd_);
}
inline void MeteorMsg::set_cmd(::MeteorMsg_MsgType value) {
  assert(::MeteorMsg_MsgType_IsValid(value));
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:MeteorMsg.cmd)
}

// -------------------------------------------------------------------

// KeyData

// required uint32 key = 1;
inline bool KeyData::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KeyData::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KeyData::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KeyData::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 KeyData::key() const {
  // @@protoc_insertion_point(field_get:KeyData.key)
  return key_;
}
inline void KeyData::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:KeyData.key)
}

// -------------------------------------------------------------------

// SyncInitData

// required uint32 randomSeed = 1;
inline bool SyncInitData::has_randomseed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncInitData::set_has_randomseed() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncInitData::clear_has_randomseed() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncInitData::clear_randomseed() {
  randomseed_ = 0u;
  clear_has_randomseed();
}
inline ::google::protobuf::uint32 SyncInitData::randomseed() const {
  // @@protoc_insertion_point(field_get:SyncInitData.randomSeed)
  return randomseed_;
}
inline void SyncInitData::set_randomseed(::google::protobuf::uint32 value) {
  set_has_randomseed();
  randomseed_ = value;
  // @@protoc_insertion_point(field_set:SyncInitData.randomSeed)
}

// -------------------------------------------------------------------

// PlayerEventData

// required uint32 playerId = 1;
inline bool PlayerEventData::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerEventData::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerEventData::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerEventData::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PlayerEventData::playerid() const {
  // @@protoc_insertion_point(field_get:PlayerEventData.playerId)
  return playerid_;
}
inline void PlayerEventData::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:PlayerEventData.playerId)
}

// required uint32 camp = 2;
inline bool PlayerEventData::has_camp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerEventData::set_has_camp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerEventData::clear_has_camp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerEventData::clear_camp() {
  camp_ = 0u;
  clear_has_camp();
}
inline ::google::protobuf::uint32 PlayerEventData::camp() const {
  // @@protoc_insertion_point(field_get:PlayerEventData.camp)
  return camp_;
}
inline void PlayerEventData::set_camp(::google::protobuf::uint32 value) {
  set_has_camp();
  camp_ = value;
  // @@protoc_insertion_point(field_set:PlayerEventData.camp)
}

// required uint32 model = 3;
inline bool PlayerEventData::has_model() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerEventData::set_has_model() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerEventData::clear_has_model() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerEventData::clear_model() {
  model_ = 0u;
  clear_has_model();
}
inline ::google::protobuf::uint32 PlayerEventData::model() const {
  // @@protoc_insertion_point(field_get:PlayerEventData.model)
  return model_;
}
inline void PlayerEventData::set_model(::google::protobuf::uint32 value) {
  set_has_model();
  model_ = value;
  // @@protoc_insertion_point(field_set:PlayerEventData.model)
}

// required uint32 weapon = 4;
inline bool PlayerEventData::has_weapon() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerEventData::set_has_weapon() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayerEventData::clear_has_weapon() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayerEventData::clear_weapon() {
  weapon_ = 0u;
  clear_has_weapon();
}
inline ::google::protobuf::uint32 PlayerEventData::weapon() const {
  // @@protoc_insertion_point(field_get:PlayerEventData.weapon)
  return weapon_;
}
inline void PlayerEventData::set_weapon(::google::protobuf::uint32 value) {
  set_has_weapon();
  weapon_ = value;
  // @@protoc_insertion_point(field_set:PlayerEventData.weapon)
}

// required string name = 5;
inline bool PlayerEventData::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerEventData::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerEventData::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerEventData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& PlayerEventData::name() const {
  // @@protoc_insertion_point(field_get:PlayerEventData.name)
  return name_.GetNoArena();
}
inline void PlayerEventData::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PlayerEventData.name)
}
#if LANG_CXX11
inline void PlayerEventData::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlayerEventData.name)
}
#endif
inline void PlayerEventData::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlayerEventData.name)
}
inline void PlayerEventData::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlayerEventData.name)
}
inline ::std::string* PlayerEventData::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:PlayerEventData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerEventData::release_name() {
  // @@protoc_insertion_point(field_release:PlayerEventData.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerEventData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:PlayerEventData.name)
}

// -------------------------------------------------------------------

// EnterQueueRsp

// required uint32 result = 1;
inline bool EnterQueueRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterQueueRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterQueueRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterQueueRsp::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 EnterQueueRsp::result() const {
  // @@protoc_insertion_point(field_get:EnterQueueRsp.result)
  return result_;
}
inline void EnterQueueRsp::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:EnterQueueRsp.result)
}

// required uint32 playerId = 2;
inline bool EnterQueueRsp::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterQueueRsp::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterQueueRsp::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterQueueRsp::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 EnterQueueRsp::playerid() const {
  // @@protoc_insertion_point(field_get:EnterQueueRsp.playerId)
  return playerid_;
}
inline void EnterQueueRsp::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:EnterQueueRsp.playerId)
}

// required uint32 playerInQueue = 3;
inline bool EnterQueueRsp::has_playerinqueue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnterQueueRsp::set_has_playerinqueue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnterQueueRsp::clear_has_playerinqueue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnterQueueRsp::clear_playerinqueue() {
  playerinqueue_ = 0u;
  clear_has_playerinqueue();
}
inline ::google::protobuf::uint32 EnterQueueRsp::playerinqueue() const {
  // @@protoc_insertion_point(field_get:EnterQueueRsp.playerInQueue)
  return playerinqueue_;
}
inline void EnterQueueRsp::set_playerinqueue(::google::protobuf::uint32 value) {
  set_has_playerinqueue();
  playerinqueue_ = value;
  // @@protoc_insertion_point(field_set:EnterQueueRsp.playerInQueue)
}

// -------------------------------------------------------------------

// OnBattleBegin

// repeated uint32 TeamMemberAId = 1;
inline int OnBattleBegin::teammemberaid_size() const {
  return teammemberaid_.size();
}
inline void OnBattleBegin::clear_teammemberaid() {
  teammemberaid_.Clear();
}
inline ::google::protobuf::uint32 OnBattleBegin::teammemberaid(int index) const {
  // @@protoc_insertion_point(field_get:OnBattleBegin.TeamMemberAId)
  return teammemberaid_.Get(index);
}
inline void OnBattleBegin::set_teammemberaid(int index, ::google::protobuf::uint32 value) {
  teammemberaid_.Set(index, value);
  // @@protoc_insertion_point(field_set:OnBattleBegin.TeamMemberAId)
}
inline void OnBattleBegin::add_teammemberaid(::google::protobuf::uint32 value) {
  teammemberaid_.Add(value);
  // @@protoc_insertion_point(field_add:OnBattleBegin.TeamMemberAId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
OnBattleBegin::teammemberaid() const {
  // @@protoc_insertion_point(field_list:OnBattleBegin.TeamMemberAId)
  return teammemberaid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
OnBattleBegin::mutable_teammemberaid() {
  // @@protoc_insertion_point(field_mutable_list:OnBattleBegin.TeamMemberAId)
  return &teammemberaid_;
}

// repeated uint32 TeamMemberBId = 2;
inline int OnBattleBegin::teammemberbid_size() const {
  return teammemberbid_.size();
}
inline void OnBattleBegin::clear_teammemberbid() {
  teammemberbid_.Clear();
}
inline ::google::protobuf::uint32 OnBattleBegin::teammemberbid(int index) const {
  // @@protoc_insertion_point(field_get:OnBattleBegin.TeamMemberBId)
  return teammemberbid_.Get(index);
}
inline void OnBattleBegin::set_teammemberbid(int index, ::google::protobuf::uint32 value) {
  teammemberbid_.Set(index, value);
  // @@protoc_insertion_point(field_set:OnBattleBegin.TeamMemberBId)
}
inline void OnBattleBegin::add_teammemberbid(::google::protobuf::uint32 value) {
  teammemberbid_.Add(value);
  // @@protoc_insertion_point(field_add:OnBattleBegin.TeamMemberBId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
OnBattleBegin::teammemberbid() const {
  // @@protoc_insertion_point(field_list:OnBattleBegin.TeamMemberBId)
  return teammemberbid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
OnBattleBegin::mutable_teammemberbid() {
  // @@protoc_insertion_point(field_mutable_list:OnBattleBegin.TeamMemberBId)
  return &teammemberbid_;
}

// repeated string TeamMemberA = 3;
inline int OnBattleBegin::teammembera_size() const {
  return teammembera_.size();
}
inline void OnBattleBegin::clear_teammembera() {
  teammembera_.Clear();
}
inline const ::std::string& OnBattleBegin::teammembera(int index) const {
  // @@protoc_insertion_point(field_get:OnBattleBegin.TeamMemberA)
  return teammembera_.Get(index);
}
inline ::std::string* OnBattleBegin::mutable_teammembera(int index) {
  // @@protoc_insertion_point(field_mutable:OnBattleBegin.TeamMemberA)
  return teammembera_.Mutable(index);
}
inline void OnBattleBegin::set_teammembera(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:OnBattleBegin.TeamMemberA)
  teammembera_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void OnBattleBegin::set_teammembera(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:OnBattleBegin.TeamMemberA)
  teammembera_.Mutable(index)->assign(std::move(value));
}
#endif
inline void OnBattleBegin::set_teammembera(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  teammembera_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:OnBattleBegin.TeamMemberA)
}
inline void OnBattleBegin::set_teammembera(int index, const char* value, size_t size) {
  teammembera_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:OnBattleBegin.TeamMemberA)
}
inline ::std::string* OnBattleBegin::add_teammembera() {
  // @@protoc_insertion_point(field_add_mutable:OnBattleBegin.TeamMemberA)
  return teammembera_.Add();
}
inline void OnBattleBegin::add_teammembera(const ::std::string& value) {
  teammembera_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:OnBattleBegin.TeamMemberA)
}
#if LANG_CXX11
inline void OnBattleBegin::add_teammembera(::std::string&& value) {
  teammembera_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:OnBattleBegin.TeamMemberA)
}
#endif
inline void OnBattleBegin::add_teammembera(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  teammembera_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:OnBattleBegin.TeamMemberA)
}
inline void OnBattleBegin::add_teammembera(const char* value, size_t size) {
  teammembera_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:OnBattleBegin.TeamMemberA)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
OnBattleBegin::teammembera() const {
  // @@protoc_insertion_point(field_list:OnBattleBegin.TeamMemberA)
  return teammembera_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
OnBattleBegin::mutable_teammembera() {
  // @@protoc_insertion_point(field_mutable_list:OnBattleBegin.TeamMemberA)
  return &teammembera_;
}

// repeated string TeamMemberB = 4;
inline int OnBattleBegin::teammemberb_size() const {
  return teammemberb_.size();
}
inline void OnBattleBegin::clear_teammemberb() {
  teammemberb_.Clear();
}
inline const ::std::string& OnBattleBegin::teammemberb(int index) const {
  // @@protoc_insertion_point(field_get:OnBattleBegin.TeamMemberB)
  return teammemberb_.Get(index);
}
inline ::std::string* OnBattleBegin::mutable_teammemberb(int index) {
  // @@protoc_insertion_point(field_mutable:OnBattleBegin.TeamMemberB)
  return teammemberb_.Mutable(index);
}
inline void OnBattleBegin::set_teammemberb(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:OnBattleBegin.TeamMemberB)
  teammemberb_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void OnBattleBegin::set_teammemberb(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:OnBattleBegin.TeamMemberB)
  teammemberb_.Mutable(index)->assign(std::move(value));
}
#endif
inline void OnBattleBegin::set_teammemberb(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  teammemberb_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:OnBattleBegin.TeamMemberB)
}
inline void OnBattleBegin::set_teammemberb(int index, const char* value, size_t size) {
  teammemberb_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:OnBattleBegin.TeamMemberB)
}
inline ::std::string* OnBattleBegin::add_teammemberb() {
  // @@protoc_insertion_point(field_add_mutable:OnBattleBegin.TeamMemberB)
  return teammemberb_.Add();
}
inline void OnBattleBegin::add_teammemberb(const ::std::string& value) {
  teammemberb_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:OnBattleBegin.TeamMemberB)
}
#if LANG_CXX11
inline void OnBattleBegin::add_teammemberb(::std::string&& value) {
  teammemberb_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:OnBattleBegin.TeamMemberB)
}
#endif
inline void OnBattleBegin::add_teammemberb(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  teammemberb_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:OnBattleBegin.TeamMemberB)
}
inline void OnBattleBegin::add_teammemberb(const char* value, size_t size) {
  teammemberb_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:OnBattleBegin.TeamMemberB)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
OnBattleBegin::teammemberb() const {
  // @@protoc_insertion_point(field_list:OnBattleBegin.TeamMemberB)
  return teammemberb_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
OnBattleBegin::mutable_teammemberb() {
  // @@protoc_insertion_point(field_mutable_list:OnBattleBegin.TeamMemberB)
  return &teammemberb_;
}

// -------------------------------------------------------------------

// UserSelectRole

// required uint32 playerId = 1;
inline bool UserSelectRole::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserSelectRole::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserSelectRole::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserSelectRole::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 UserSelectRole::playerid() const {
  // @@protoc_insertion_point(field_get:UserSelectRole.playerId)
  return playerid_;
}
inline void UserSelectRole::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:UserSelectRole.playerId)
}

// required uint32 HeroId = 2;
inline bool UserSelectRole::has_heroid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserSelectRole::set_has_heroid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserSelectRole::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserSelectRole::clear_heroid() {
  heroid_ = 0u;
  clear_has_heroid();
}
inline ::google::protobuf::uint32 UserSelectRole::heroid() const {
  // @@protoc_insertion_point(field_get:UserSelectRole.HeroId)
  return heroid_;
}
inline void UserSelectRole::set_heroid(::google::protobuf::uint32 value) {
  set_has_heroid();
  heroid_ = value;
  // @@protoc_insertion_point(field_set:UserSelectRole.HeroId)
}

// -------------------------------------------------------------------

// UserSelectSkill

// required uint32 playerId = 1;
inline bool UserSelectSkill::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserSelectSkill::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserSelectSkill::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserSelectSkill::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 UserSelectSkill::playerid() const {
  // @@protoc_insertion_point(field_get:UserSelectSkill.playerId)
  return playerid_;
}
inline void UserSelectSkill::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:UserSelectSkill.playerId)
}

// required uint32 SkillId = 2;
inline bool UserSelectSkill::has_skillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserSelectSkill::set_has_skillid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserSelectSkill::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserSelectSkill::clear_skillid() {
  skillid_ = 0u;
  clear_has_skillid();
}
inline ::google::protobuf::uint32 UserSelectSkill::skillid() const {
  // @@protoc_insertion_point(field_get:UserSelectSkill.SkillId)
  return skillid_;
}
inline void UserSelectSkill::set_skillid(::google::protobuf::uint32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:UserSelectSkill.SkillId)
}

// -------------------------------------------------------------------

// UserSelectSkin

// required uint32 playerId = 1;
inline bool UserSelectSkin::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserSelectSkin::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserSelectSkin::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserSelectSkin::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 UserSelectSkin::playerid() const {
  // @@protoc_insertion_point(field_get:UserSelectSkin.playerId)
  return playerid_;
}
inline void UserSelectSkin::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:UserSelectSkin.playerId)
}

// required uint32 Skin = 2;
inline bool UserSelectSkin::has_skin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserSelectSkin::set_has_skin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserSelectSkin::clear_has_skin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserSelectSkin::clear_skin() {
  skin_ = 0u;
  clear_has_skin();
}
inline ::google::protobuf::uint32 UserSelectSkin::skin() const {
  // @@protoc_insertion_point(field_get:UserSelectSkin.Skin)
  return skin_;
}
inline void UserSelectSkin::set_skin(::google::protobuf::uint32 value) {
  set_has_skin();
  skin_ = value;
  // @@protoc_insertion_point(field_set:UserSelectSkin.Skin)
}

// -------------------------------------------------------------------

// OnBattleCanceled

// required uint32 reason = 1;
inline bool OnBattleCanceled::has_reason() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OnBattleCanceled::set_has_reason() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OnBattleCanceled::clear_has_reason() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OnBattleCanceled::clear_reason() {
  reason_ = 0u;
  clear_has_reason();
}
inline ::google::protobuf::uint32 OnBattleCanceled::reason() const {
  // @@protoc_insertion_point(field_get:OnBattleCanceled.reason)
  return reason_;
}
inline void OnBattleCanceled::set_reason(::google::protobuf::uint32 value) {
  set_has_reason();
  reason_ = value;
  // @@protoc_insertion_point(field_set:OnBattleCanceled.reason)
}

// -------------------------------------------------------------------

// OnBattleLoading

// repeated uint32 playerId = 1;
inline int OnBattleLoading::playerid_size() const {
  return playerid_.size();
}
inline void OnBattleLoading::clear_playerid() {
  playerid_.Clear();
}
inline ::google::protobuf::uint32 OnBattleLoading::playerid(int index) const {
  // @@protoc_insertion_point(field_get:OnBattleLoading.playerId)
  return playerid_.Get(index);
}
inline void OnBattleLoading::set_playerid(int index, ::google::protobuf::uint32 value) {
  playerid_.Set(index, value);
  // @@protoc_insertion_point(field_set:OnBattleLoading.playerId)
}
inline void OnBattleLoading::add_playerid(::google::protobuf::uint32 value) {
  playerid_.Add(value);
  // @@protoc_insertion_point(field_add:OnBattleLoading.playerId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
OnBattleLoading::playerid() const {
  // @@protoc_insertion_point(field_list:OnBattleLoading.playerId)
  return playerid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
OnBattleLoading::mutable_playerid() {
  // @@protoc_insertion_point(field_mutable_list:OnBattleLoading.playerId)
  return &playerid_;
}

// repeated uint32 percent = 2;
inline int OnBattleLoading::percent_size() const {
  return percent_.size();
}
inline void OnBattleLoading::clear_percent() {
  percent_.Clear();
}
inline ::google::protobuf::uint32 OnBattleLoading::percent(int index) const {
  // @@protoc_insertion_point(field_get:OnBattleLoading.percent)
  return percent_.Get(index);
}
inline void OnBattleLoading::set_percent(int index, ::google::protobuf::uint32 value) {
  percent_.Set(index, value);
  // @@protoc_insertion_point(field_set:OnBattleLoading.percent)
}
inline void OnBattleLoading::add_percent(::google::protobuf::uint32 value) {
  percent_.Add(value);
  // @@protoc_insertion_point(field_add:OnBattleLoading.percent)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
OnBattleLoading::percent() const {
  // @@protoc_insertion_point(field_list:OnBattleLoading.percent)
  return percent_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
OnBattleLoading::mutable_percent() {
  // @@protoc_insertion_point(field_mutable_list:OnBattleLoading.percent)
  return &percent_;
}

// -------------------------------------------------------------------

// OnBattleResult

// required uint32 result = 1;
inline bool OnBattleResult::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OnBattleResult::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OnBattleResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OnBattleResult::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 OnBattleResult::result() const {
  // @@protoc_insertion_point(field_get:OnBattleResult.result)
  return result_;
}
inline void OnBattleResult::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:OnBattleResult.result)
}

// -------------------------------------------------------------------

// PlayerSellItem

// required uint32 playerId = 1;
inline bool PlayerSellItem::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerSellItem::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerSellItem::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerSellItem::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PlayerSellItem::playerid() const {
  // @@protoc_insertion_point(field_get:PlayerSellItem.playerId)
  return playerid_;
}
inline void PlayerSellItem::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:PlayerSellItem.playerId)
}

// required uint32 itemId = 2;
inline bool PlayerSellItem::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerSellItem::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerSellItem::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerSellItem::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 PlayerSellItem::itemid() const {
  // @@protoc_insertion_point(field_get:PlayerSellItem.itemId)
  return itemid_;
}
inline void PlayerSellItem::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:PlayerSellItem.itemId)
}

// -------------------------------------------------------------------

// PlayerBuyItem

// required uint32 playerId = 1;
inline bool PlayerBuyItem::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerBuyItem::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerBuyItem::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerBuyItem::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 PlayerBuyItem::playerid() const {
  // @@protoc_insertion_point(field_get:PlayerBuyItem.playerId)
  return playerid_;
}
inline void PlayerBuyItem::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:PlayerBuyItem.playerId)
}

// required uint32 itemId = 2;
inline bool PlayerBuyItem::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerBuyItem::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerBuyItem::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerBuyItem::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 PlayerBuyItem::itemid() const {
  // @@protoc_insertion_point(field_get:PlayerBuyItem.itemId)
  return itemid_;
}
inline void PlayerBuyItem::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:PlayerBuyItem.itemId)
}

// -------------------------------------------------------------------

// ProtocolVerifyReq

// required uint32 protocol = 1;
inline bool ProtocolVerifyReq::has_protocol() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtocolVerifyReq::set_has_protocol() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtocolVerifyReq::clear_has_protocol() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtocolVerifyReq::clear_protocol() {
  protocol_ = 0u;
  clear_has_protocol();
}
inline ::google::protobuf::uint32 ProtocolVerifyReq::protocol() const {
  // @@protoc_insertion_point(field_get:ProtocolVerifyReq.protocol)
  return protocol_;
}
inline void ProtocolVerifyReq::set_protocol(::google::protobuf::uint32 value) {
  set_has_protocol();
  protocol_ = value;
  // @@protoc_insertion_point(field_set:ProtocolVerifyReq.protocol)
}

// required string data = 2;
inline bool ProtocolVerifyReq::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtocolVerifyReq::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtocolVerifyReq::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtocolVerifyReq::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& ProtocolVerifyReq::data() const {
  // @@protoc_insertion_point(field_get:ProtocolVerifyReq.data)
  return data_.GetNoArena();
}
inline void ProtocolVerifyReq::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtocolVerifyReq.data)
}
#if LANG_CXX11
inline void ProtocolVerifyReq::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtocolVerifyReq.data)
}
#endif
inline void ProtocolVerifyReq::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtocolVerifyReq.data)
}
inline void ProtocolVerifyReq::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtocolVerifyReq.data)
}
inline ::std::string* ProtocolVerifyReq::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:ProtocolVerifyReq.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtocolVerifyReq::release_data() {
  // @@protoc_insertion_point(field_release:ProtocolVerifyReq.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtocolVerifyReq::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:ProtocolVerifyReq.data)
}

// -------------------------------------------------------------------

// ProtocolVerifyRsp

// required uint32 result = 1;
inline bool ProtocolVerifyRsp::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtocolVerifyRsp::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtocolVerifyRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtocolVerifyRsp::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 ProtocolVerifyRsp::result() const {
  // @@protoc_insertion_point(field_get:ProtocolVerifyRsp.result)
  return result_;
}
inline void ProtocolVerifyRsp::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:ProtocolVerifyRsp.result)
}

// required string message = 2;
inline bool ProtocolVerifyRsp::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtocolVerifyRsp::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtocolVerifyRsp::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtocolVerifyRsp::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& ProtocolVerifyRsp::message() const {
  // @@protoc_insertion_point(field_get:ProtocolVerifyRsp.message)
  return message_.GetNoArena();
}
inline void ProtocolVerifyRsp::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtocolVerifyRsp.message)
}
#if LANG_CXX11
inline void ProtocolVerifyRsp::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtocolVerifyRsp.message)
}
#endif
inline void ProtocolVerifyRsp::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtocolVerifyRsp.message)
}
inline void ProtocolVerifyRsp::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtocolVerifyRsp.message)
}
inline ::std::string* ProtocolVerifyRsp::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:ProtocolVerifyRsp.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtocolVerifyRsp::release_message() {
  // @@protoc_insertion_point(field_release:ProtocolVerifyRsp.message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtocolVerifyRsp::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:ProtocolVerifyRsp.message)
}

// -------------------------------------------------------------------

// RoomInfo

// required uint32 roomId = 1;
inline bool RoomInfo::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoomInfo::set_has_roomid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoomInfo::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoomInfo::clear_roomid() {
  roomid_ = 0u;
  clear_has_roomid();
}
inline ::google::protobuf::uint32 RoomInfo::roomid() const {
  // @@protoc_insertion_point(field_get:RoomInfo.roomId)
  return roomid_;
}
inline void RoomInfo::set_roomid(::google::protobuf::uint32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:RoomInfo.roomId)
}

// required string roomName = 2;
inline bool RoomInfo::has_roomname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomInfo::set_has_roomname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomInfo::clear_has_roomname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomInfo::clear_roomname() {
  roomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_roomname();
}
inline const ::std::string& RoomInfo::roomname() const {
  // @@protoc_insertion_point(field_get:RoomInfo.roomName)
  return roomname_.GetNoArena();
}
inline void RoomInfo::set_roomname(const ::std::string& value) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RoomInfo.roomName)
}
#if LANG_CXX11
inline void RoomInfo::set_roomname(::std::string&& value) {
  set_has_roomname();
  roomname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RoomInfo.roomName)
}
#endif
inline void RoomInfo::set_roomname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RoomInfo.roomName)
}
inline void RoomInfo::set_roomname(const char* value, size_t size) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RoomInfo.roomName)
}
inline ::std::string* RoomInfo::mutable_roomname() {
  set_has_roomname();
  // @@protoc_insertion_point(field_mutable:RoomInfo.roomName)
  return roomname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoomInfo::release_roomname() {
  // @@protoc_insertion_point(field_release:RoomInfo.roomName)
  clear_has_roomname();
  return roomname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomInfo::set_allocated_roomname(::std::string* roomname) {
  if (roomname != NULL) {
    set_has_roomname();
  } else {
    clear_has_roomname();
  }
  roomname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomname);
  // @@protoc_insertion_point(field_set_allocated:RoomInfo.roomName)
}

// required .RoomInfo.RoomRule rule = 3;
inline bool RoomInfo::has_rule() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RoomInfo::set_has_rule() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RoomInfo::clear_has_rule() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RoomInfo::clear_rule() {
  rule_ = 1;
  clear_has_rule();
}
inline ::RoomInfo_RoomRule RoomInfo::rule() const {
  // @@protoc_insertion_point(field_get:RoomInfo.rule)
  return static_cast< ::RoomInfo_RoomRule >(rule_);
}
inline void RoomInfo::set_rule(::RoomInfo_RoomRule value) {
  assert(::RoomInfo_RoomRule_IsValid(value));
  set_has_rule();
  rule_ = value;
  // @@protoc_insertion_point(field_set:RoomInfo.rule)
}

// required .RoomInfo.RoomPattern pattern = 4;
inline bool RoomInfo::has_pattern() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RoomInfo::set_has_pattern() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RoomInfo::clear_has_pattern() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RoomInfo::clear_pattern() {
  pattern_ = 1;
  clear_has_pattern();
}
inline ::RoomInfo_RoomPattern RoomInfo::pattern() const {
  // @@protoc_insertion_point(field_get:RoomInfo.pattern)
  return static_cast< ::RoomInfo_RoomPattern >(pattern_);
}
inline void RoomInfo::set_pattern(::RoomInfo_RoomPattern value) {
  assert(::RoomInfo_RoomPattern_IsValid(value));
  set_has_pattern();
  pattern_ = value;
  // @@protoc_insertion_point(field_set:RoomInfo.pattern)
}

// required uint32 levelIdx = 5;
inline bool RoomInfo::has_levelidx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoomInfo::set_has_levelidx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoomInfo::clear_has_levelidx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoomInfo::clear_levelidx() {
  levelidx_ = 0u;
  clear_has_levelidx();
}
inline ::google::protobuf::uint32 RoomInfo::levelidx() const {
  // @@protoc_insertion_point(field_get:RoomInfo.levelIdx)
  return levelidx_;
}
inline void RoomInfo::set_levelidx(::google::protobuf::uint32 value) {
  set_has_levelidx();
  levelidx_ = value;
  // @@protoc_insertion_point(field_set:RoomInfo.levelIdx)
}

// required uint32 hpMax = 6;
inline bool RoomInfo::has_hpmax() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoomInfo::set_has_hpmax() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoomInfo::clear_has_hpmax() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoomInfo::clear_hpmax() {
  hpmax_ = 0u;
  clear_has_hpmax();
}
inline ::google::protobuf::uint32 RoomInfo::hpmax() const {
  // @@protoc_insertion_point(field_get:RoomInfo.hpMax)
  return hpmax_;
}
inline void RoomInfo::set_hpmax(::google::protobuf::uint32 value) {
  set_has_hpmax();
  hpmax_ = value;
  // @@protoc_insertion_point(field_set:RoomInfo.hpMax)
}

// required uint32 password = 7;
inline bool RoomInfo::has_password() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoomInfo::set_has_password() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoomInfo::clear_has_password() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoomInfo::clear_password() {
  password_ = 0u;
  clear_has_password();
}
inline ::google::protobuf::uint32 RoomInfo::password() const {
  // @@protoc_insertion_point(field_get:RoomInfo.password)
  return password_;
}
inline void RoomInfo::set_password(::google::protobuf::uint32 value) {
  set_has_password();
  password_ = value;
  // @@protoc_insertion_point(field_set:RoomInfo.password)
}

// required .RoomInfo.MeteorVersion version = 8;
inline bool RoomInfo::has_version() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RoomInfo::set_has_version() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RoomInfo::clear_has_version() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RoomInfo::clear_version() {
  version_ = 1;
  clear_has_version();
}
inline ::RoomInfo_MeteorVersion RoomInfo::version() const {
  // @@protoc_insertion_point(field_get:RoomInfo.version)
  return static_cast< ::RoomInfo_MeteorVersion >(version_);
}
inline void RoomInfo::set_version(::RoomInfo_MeteorVersion value) {
  assert(::RoomInfo_MeteorVersion_IsValid(value));
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:RoomInfo.version)
}

// required uint32 Group1 = 9;
inline bool RoomInfo::has_group1() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoomInfo::set_has_group1() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoomInfo::clear_has_group1() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoomInfo::clear_group1() {
  group1_ = 0u;
  clear_has_group1();
}
inline ::google::protobuf::uint32 RoomInfo::group1() const {
  // @@protoc_insertion_point(field_get:RoomInfo.Group1)
  return group1_;
}
inline void RoomInfo::set_group1(::google::protobuf::uint32 value) {
  set_has_group1();
  group1_ = value;
  // @@protoc_insertion_point(field_set:RoomInfo.Group1)
}

// required uint32 Group2 = 10;
inline bool RoomInfo::has_group2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RoomInfo::set_has_group2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RoomInfo::clear_has_group2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RoomInfo::clear_group2() {
  group2_ = 0u;
  clear_has_group2();
}
inline ::google::protobuf::uint32 RoomInfo::group2() const {
  // @@protoc_insertion_point(field_get:RoomInfo.Group2)
  return group2_;
}
inline void RoomInfo::set_group2(::google::protobuf::uint32 value) {
  set_has_group2();
  group2_ = value;
  // @@protoc_insertion_point(field_set:RoomInfo.Group2)
}

// required uint32 playerCount = 11;
inline bool RoomInfo::has_playercount() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RoomInfo::set_has_playercount() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RoomInfo::clear_has_playercount() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RoomInfo::clear_playercount() {
  playercount_ = 0u;
  clear_has_playercount();
}
inline ::google::protobuf::uint32 RoomInfo::playercount() const {
  // @@protoc_insertion_point(field_get:RoomInfo.playerCount)
  return playercount_;
}
inline void RoomInfo::set_playercount(::google::protobuf::uint32 value) {
  set_has_playercount();
  playercount_ = value;
  // @@protoc_insertion_point(field_set:RoomInfo.playerCount)
}

// required uint32 maxPlayer = 12;
inline bool RoomInfo::has_maxplayer() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RoomInfo::set_has_maxplayer() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RoomInfo::clear_has_maxplayer() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RoomInfo::clear_maxplayer() {
  maxplayer_ = 0u;
  clear_has_maxplayer();
}
inline ::google::protobuf::uint32 RoomInfo::maxplayer() const {
  // @@protoc_insertion_point(field_get:RoomInfo.maxPlayer)
  return maxplayer_;
}
inline void RoomInfo::set_maxplayer(::google::protobuf::uint32 value) {
  set_has_maxplayer();
  maxplayer_ = value;
  // @@protoc_insertion_point(field_set:RoomInfo.maxPlayer)
}

// -------------------------------------------------------------------

// GetRoomRsp

// repeated .RoomInfo RoomInLobby = 1;
inline int GetRoomRsp::roominlobby_size() const {
  return roominlobby_.size();
}
inline void GetRoomRsp::clear_roominlobby() {
  roominlobby_.Clear();
}
inline const ::RoomInfo& GetRoomRsp::roominlobby(int index) const {
  // @@protoc_insertion_point(field_get:GetRoomRsp.RoomInLobby)
  return roominlobby_.Get(index);
}
inline ::RoomInfo* GetRoomRsp::mutable_roominlobby(int index) {
  // @@protoc_insertion_point(field_mutable:GetRoomRsp.RoomInLobby)
  return roominlobby_.Mutable(index);
}
inline ::RoomInfo* GetRoomRsp::add_roominlobby() {
  // @@protoc_insertion_point(field_add:GetRoomRsp.RoomInLobby)
  return roominlobby_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::RoomInfo >*
GetRoomRsp::mutable_roominlobby() {
  // @@protoc_insertion_point(field_mutable_list:GetRoomRsp.RoomInLobby)
  return &roominlobby_;
}
inline const ::google::protobuf::RepeatedPtrField< ::RoomInfo >&
GetRoomRsp::roominlobby() const {
  // @@protoc_insertion_point(field_list:GetRoomRsp.RoomInLobby)
  return roominlobby_;
}

// -------------------------------------------------------------------

// CreateRoomReq

// required .RoomInfo.RoomPattern pattern = 1;
inline bool CreateRoomReq::has_pattern() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CreateRoomReq::set_has_pattern() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CreateRoomReq::clear_has_pattern() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CreateRoomReq::clear_pattern() {
  pattern_ = 1;
  clear_has_pattern();
}
inline ::RoomInfo_RoomPattern CreateRoomReq::pattern() const {
  // @@protoc_insertion_point(field_get:CreateRoomReq.pattern)
  return static_cast< ::RoomInfo_RoomPattern >(pattern_);
}
inline void CreateRoomReq::set_pattern(::RoomInfo_RoomPattern value) {
  assert(::RoomInfo_RoomPattern_IsValid(value));
  set_has_pattern();
  pattern_ = value;
  // @@protoc_insertion_point(field_set:CreateRoomReq.pattern)
}

// required uint32 maxPlayer = 2;
inline bool CreateRoomReq::has_maxplayer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateRoomReq::set_has_maxplayer() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreateRoomReq::clear_has_maxplayer() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreateRoomReq::clear_maxplayer() {
  maxplayer_ = 0u;
  clear_has_maxplayer();
}
inline ::google::protobuf::uint32 CreateRoomReq::maxplayer() const {
  // @@protoc_insertion_point(field_get:CreateRoomReq.maxPlayer)
  return maxplayer_;
}
inline void CreateRoomReq::set_maxplayer(::google::protobuf::uint32 value) {
  set_has_maxplayer();
  maxplayer_ = value;
  // @@protoc_insertion_point(field_set:CreateRoomReq.maxPlayer)
}

// required uint32 levelIdx = 3;
inline bool CreateRoomReq::has_levelidx() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreateRoomReq::set_has_levelidx() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreateRoomReq::clear_has_levelidx() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreateRoomReq::clear_levelidx() {
  levelidx_ = 0u;
  clear_has_levelidx();
}
inline ::google::protobuf::uint32 CreateRoomReq::levelidx() const {
  // @@protoc_insertion_point(field_get:CreateRoomReq.levelIdx)
  return levelidx_;
}
inline void CreateRoomReq::set_levelidx(::google::protobuf::uint32 value) {
  set_has_levelidx();
  levelidx_ = value;
  // @@protoc_insertion_point(field_set:CreateRoomReq.levelIdx)
}

// required .RoomInfo.RoomRule rule = 4;
inline bool CreateRoomReq::has_rule() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CreateRoomReq::set_has_rule() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CreateRoomReq::clear_has_rule() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CreateRoomReq::clear_rule() {
  rule_ = 1;
  clear_has_rule();
}
inline ::RoomInfo_RoomRule CreateRoomReq::rule() const {
  // @@protoc_insertion_point(field_get:CreateRoomReq.rule)
  return static_cast< ::RoomInfo_RoomRule >(rule_);
}
inline void CreateRoomReq::set_rule(::RoomInfo_RoomRule value) {
  assert(::RoomInfo_RoomRule_IsValid(value));
  set_has_rule();
  rule_ = value;
  // @@protoc_insertion_point(field_set:CreateRoomReq.rule)
}

// required string roomName = 5;
inline bool CreateRoomReq::has_roomname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateRoomReq::set_has_roomname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateRoomReq::clear_has_roomname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateRoomReq::clear_roomname() {
  roomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_roomname();
}
inline const ::std::string& CreateRoomReq::roomname() const {
  // @@protoc_insertion_point(field_get:CreateRoomReq.roomName)
  return roomname_.GetNoArena();
}
inline void CreateRoomReq::set_roomname(const ::std::string& value) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CreateRoomReq.roomName)
}
#if LANG_CXX11
inline void CreateRoomReq::set_roomname(::std::string&& value) {
  set_has_roomname();
  roomname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CreateRoomReq.roomName)
}
#endif
inline void CreateRoomReq::set_roomname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CreateRoomReq.roomName)
}
inline void CreateRoomReq::set_roomname(const char* value, size_t size) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CreateRoomReq.roomName)
}
inline ::std::string* CreateRoomReq::mutable_roomname() {
  set_has_roomname();
  // @@protoc_insertion_point(field_mutable:CreateRoomReq.roomName)
  return roomname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateRoomReq::release_roomname() {
  // @@protoc_insertion_point(field_release:CreateRoomReq.roomName)
  clear_has_roomname();
  return roomname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateRoomReq::set_allocated_roomname(::std::string* roomname) {
  if (roomname != NULL) {
    set_has_roomname();
  } else {
    clear_has_roomname();
  }
  roomname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomname);
  // @@protoc_insertion_point(field_set_allocated:CreateRoomReq.roomName)
}

// required uint32 hpMax = 6;
inline bool CreateRoomReq::has_hpmax() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CreateRoomReq::set_has_hpmax() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CreateRoomReq::clear_has_hpmax() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CreateRoomReq::clear_hpmax() {
  hpmax_ = 0u;
  clear_has_hpmax();
}
inline ::google::protobuf::uint32 CreateRoomReq::hpmax() const {
  // @@protoc_insertion_point(field_get:CreateRoomReq.hpMax)
  return hpmax_;
}
inline void CreateRoomReq::set_hpmax(::google::protobuf::uint32 value) {
  set_has_hpmax();
  hpmax_ = value;
  // @@protoc_insertion_point(field_set:CreateRoomReq.hpMax)
}

// required uint32 roundTime = 7;
inline bool CreateRoomReq::has_roundtime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CreateRoomReq::set_has_roundtime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CreateRoomReq::clear_has_roundtime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CreateRoomReq::clear_roundtime() {
  roundtime_ = 0u;
  clear_has_roundtime();
}
inline ::google::protobuf::uint32 CreateRoomReq::roundtime() const {
  // @@protoc_insertion_point(field_get:CreateRoomReq.roundTime)
  return roundtime_;
}
inline void CreateRoomReq::set_roundtime(::google::protobuf::uint32 value) {
  set_has_roundtime();
  roundtime_ = value;
  // @@protoc_insertion_point(field_set:CreateRoomReq.roundTime)
}

// required .RoomInfo.MeteorVersion version = 8;
inline bool CreateRoomReq::has_version() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CreateRoomReq::set_has_version() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CreateRoomReq::clear_has_version() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CreateRoomReq::clear_version() {
  version_ = 1;
  clear_has_version();
}
inline ::RoomInfo_MeteorVersion CreateRoomReq::version() const {
  // @@protoc_insertion_point(field_get:CreateRoomReq.version)
  return static_cast< ::RoomInfo_MeteorVersion >(version_);
}
inline void CreateRoomReq::set_version(::RoomInfo_MeteorVersion value) {
  assert(::RoomInfo_MeteorVersion_IsValid(value));
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:CreateRoomReq.version)
}

// optional string secret = 9;
inline bool CreateRoomReq::has_secret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateRoomReq::set_has_secret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateRoomReq::clear_has_secret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateRoomReq::clear_secret() {
  secret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_secret();
}
inline const ::std::string& CreateRoomReq::secret() const {
  // @@protoc_insertion_point(field_get:CreateRoomReq.secret)
  return secret_.GetNoArena();
}
inline void CreateRoomReq::set_secret(const ::std::string& value) {
  set_has_secret();
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CreateRoomReq.secret)
}
#if LANG_CXX11
inline void CreateRoomReq::set_secret(::std::string&& value) {
  set_has_secret();
  secret_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CreateRoomReq.secret)
}
#endif
inline void CreateRoomReq::set_secret(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_secret();
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CreateRoomReq.secret)
}
inline void CreateRoomReq::set_secret(const char* value, size_t size) {
  set_has_secret();
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CreateRoomReq.secret)
}
inline ::std::string* CreateRoomReq::mutable_secret() {
  set_has_secret();
  // @@protoc_insertion_point(field_mutable:CreateRoomReq.secret)
  return secret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateRoomReq::release_secret() {
  // @@protoc_insertion_point(field_release:CreateRoomReq.secret)
  clear_has_secret();
  return secret_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateRoomReq::set_allocated_secret(::std::string* secret) {
  if (secret != NULL) {
    set_has_secret();
  } else {
    clear_has_secret();
  }
  secret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secret);
  // @@protoc_insertion_point(field_set_allocated:CreateRoomReq.secret)
}

// optional bytes replay_data = 10;
inline bool CreateRoomReq::has_replay_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateRoomReq::set_has_replay_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateRoomReq::clear_has_replay_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateRoomReq::clear_replay_data() {
  replay_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_replay_data();
}
inline const ::std::string& CreateRoomReq::replay_data() const {
  // @@protoc_insertion_point(field_get:CreateRoomReq.replay_data)
  return replay_data_.GetNoArena();
}
inline void CreateRoomReq::set_replay_data(const ::std::string& value) {
  set_has_replay_data();
  replay_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CreateRoomReq.replay_data)
}
#if LANG_CXX11
inline void CreateRoomReq::set_replay_data(::std::string&& value) {
  set_has_replay_data();
  replay_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CreateRoomReq.replay_data)
}
#endif
inline void CreateRoomReq::set_replay_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_replay_data();
  replay_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CreateRoomReq.replay_data)
}
inline void CreateRoomReq::set_replay_data(const void* value, size_t size) {
  set_has_replay_data();
  replay_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CreateRoomReq.replay_data)
}
inline ::std::string* CreateRoomReq::mutable_replay_data() {
  set_has_replay_data();
  // @@protoc_insertion_point(field_mutable:CreateRoomReq.replay_data)
  return replay_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateRoomReq::release_replay_data() {
  // @@protoc_insertion_point(field_release:CreateRoomReq.replay_data)
  clear_has_replay_data();
  return replay_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateRoomReq::set_allocated_replay_data(::std::string* replay_data) {
  if (replay_data != NULL) {
    set_has_replay_data();
  } else {
    clear_has_replay_data();
  }
  replay_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), replay_data);
  // @@protoc_insertion_point(field_set_allocated:CreateRoomReq.replay_data)
}

// repeated uint32 models = 11;
inline int CreateRoomReq::models_size() const {
  return models_.size();
}
inline void CreateRoomReq::clear_models() {
  models_.Clear();
}
inline ::google::protobuf::uint32 CreateRoomReq::models(int index) const {
  // @@protoc_insertion_point(field_get:CreateRoomReq.models)
  return models_.Get(index);
}
inline void CreateRoomReq::set_models(int index, ::google::protobuf::uint32 value) {
  models_.Set(index, value);
  // @@protoc_insertion_point(field_set:CreateRoomReq.models)
}
inline void CreateRoomReq::add_models(::google::protobuf::uint32 value) {
  models_.Add(value);
  // @@protoc_insertion_point(field_add:CreateRoomReq.models)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CreateRoomReq::models() const {
  // @@protoc_insertion_point(field_list:CreateRoomReq.models)
  return models_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CreateRoomReq::mutable_models() {
  // @@protoc_insertion_point(field_mutable_list:CreateRoomReq.models)
  return &models_;
}

// repeated uint32 weapons = 12;
inline int CreateRoomReq::weapons_size() const {
  return weapons_.size();
}
inline void CreateRoomReq::clear_weapons() {
  weapons_.Clear();
}
inline ::google::protobuf::uint32 CreateRoomReq::weapons(int index) const {
  // @@protoc_insertion_point(field_get:CreateRoomReq.weapons)
  return weapons_.Get(index);
}
inline void CreateRoomReq::set_weapons(int index, ::google::protobuf::uint32 value) {
  weapons_.Set(index, value);
  // @@protoc_insertion_point(field_set:CreateRoomReq.weapons)
}
inline void CreateRoomReq::add_weapons(::google::protobuf::uint32 value) {
  weapons_.Add(value);
  // @@protoc_insertion_point(field_add:CreateRoomReq.weapons)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CreateRoomReq::weapons() const {
  // @@protoc_insertion_point(field_list:CreateRoomReq.weapons)
  return weapons_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CreateRoomReq::mutable_weapons() {
  // @@protoc_insertion_point(field_mutable_list:CreateRoomReq.weapons)
  return &weapons_;
}

// -------------------------------------------------------------------

// CreateRoomRsp

// required uint32 result = 1;
inline bool CreateRoomRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateRoomRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateRoomRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateRoomRsp::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CreateRoomRsp::result() const {
  // @@protoc_insertion_point(field_get:CreateRoomRsp.result)
  return result_;
}
inline void CreateRoomRsp::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:CreateRoomRsp.result)
}

// required uint32 roomId = 2;
inline bool CreateRoomRsp::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateRoomRsp::set_has_roomid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateRoomRsp::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateRoomRsp::clear_roomid() {
  roomid_ = 0u;
  clear_has_roomid();
}
inline ::google::protobuf::uint32 CreateRoomRsp::roomid() const {
  // @@protoc_insertion_point(field_get:CreateRoomRsp.roomId)
  return roomid_;
}
inline void CreateRoomRsp::set_roomid(::google::protobuf::uint32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:CreateRoomRsp.roomId)
}

// required uint32 levelId = 3;
inline bool CreateRoomRsp::has_levelid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateRoomRsp::set_has_levelid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateRoomRsp::clear_has_levelid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateRoomRsp::clear_levelid() {
  levelid_ = 0u;
  clear_has_levelid();
}
inline ::google::protobuf::uint32 CreateRoomRsp::levelid() const {
  // @@protoc_insertion_point(field_get:CreateRoomRsp.levelId)
  return levelid_;
}
inline void CreateRoomRsp::set_levelid(::google::protobuf::uint32 value) {
  set_has_levelid();
  levelid_ = value;
  // @@protoc_insertion_point(field_set:CreateRoomRsp.levelId)
}

// required uint32 playerId = 4;
inline bool CreateRoomRsp::has_playerid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateRoomRsp::set_has_playerid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreateRoomRsp::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreateRoomRsp::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 CreateRoomRsp::playerid() const {
  // @@protoc_insertion_point(field_get:CreateRoomRsp.playerId)
  return playerid_;
}
inline void CreateRoomRsp::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:CreateRoomRsp.playerId)
}

// required uint32 port = 5;
inline bool CreateRoomRsp::has_port() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreateRoomRsp::set_has_port() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreateRoomRsp::clear_has_port() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreateRoomRsp::clear_port() {
  port_ = 0u;
  clear_has_port();
}
inline ::google::protobuf::uint32 CreateRoomRsp::port() const {
  // @@protoc_insertion_point(field_get:CreateRoomRsp.port)
  return port_;
}
inline void CreateRoomRsp::set_port(::google::protobuf::uint32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:CreateRoomRsp.port)
}

// -------------------------------------------------------------------

// JoinRoomReq

// required uint32 roomId = 1;
inline bool JoinRoomReq::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JoinRoomReq::set_has_roomid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JoinRoomReq::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JoinRoomReq::clear_roomid() {
  roomid_ = 0u;
  clear_has_roomid();
}
inline ::google::protobuf::uint32 JoinRoomReq::roomid() const {
  // @@protoc_insertion_point(field_get:JoinRoomReq.roomId)
  return roomid_;
}
inline void JoinRoomReq::set_roomid(::google::protobuf::uint32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:JoinRoomReq.roomId)
}

// required .RoomInfo.MeteorVersion version = 2;
inline bool JoinRoomReq::has_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JoinRoomReq::set_has_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JoinRoomReq::clear_has_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JoinRoomReq::clear_version() {
  version_ = 1;
  clear_has_version();
}
inline ::RoomInfo_MeteorVersion JoinRoomReq::version() const {
  // @@protoc_insertion_point(field_get:JoinRoomReq.version)
  return static_cast< ::RoomInfo_MeteorVersion >(version_);
}
inline void JoinRoomReq::set_version(::RoomInfo_MeteorVersion value) {
  assert(::RoomInfo_MeteorVersion_IsValid(value));
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:JoinRoomReq.version)
}

// optional string password = 3;
inline bool JoinRoomReq::has_password() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinRoomReq::set_has_password() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinRoomReq::clear_has_password() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinRoomReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& JoinRoomReq::password() const {
  // @@protoc_insertion_point(field_get:JoinRoomReq.password)
  return password_.GetNoArena();
}
inline void JoinRoomReq::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:JoinRoomReq.password)
}
#if LANG_CXX11
inline void JoinRoomReq::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:JoinRoomReq.password)
}
#endif
inline void JoinRoomReq::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:JoinRoomReq.password)
}
inline void JoinRoomReq::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:JoinRoomReq.password)
}
inline ::std::string* JoinRoomReq::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:JoinRoomReq.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinRoomReq::release_password() {
  // @@protoc_insertion_point(field_release:JoinRoomReq.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinRoomReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:JoinRoomReq.password)
}

// -------------------------------------------------------------------

// JoinRoomRsp

// required uint32 result = 1;
inline bool JoinRoomRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinRoomRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinRoomRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinRoomRsp::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 JoinRoomRsp::result() const {
  // @@protoc_insertion_point(field_get:JoinRoomRsp.result)
  return result_;
}
inline void JoinRoomRsp::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:JoinRoomRsp.result)
}

// required uint32 reason = 2;
inline bool JoinRoomRsp::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JoinRoomRsp::set_has_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JoinRoomRsp::clear_has_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JoinRoomRsp::clear_reason() {
  reason_ = 0u;
  clear_has_reason();
}
inline ::google::protobuf::uint32 JoinRoomRsp::reason() const {
  // @@protoc_insertion_point(field_get:JoinRoomRsp.reason)
  return reason_;
}
inline void JoinRoomRsp::set_reason(::google::protobuf::uint32 value) {
  set_has_reason();
  reason_ = value;
  // @@protoc_insertion_point(field_set:JoinRoomRsp.reason)
}

// required uint32 levelIdx = 3;
inline bool JoinRoomRsp::has_levelidx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JoinRoomRsp::set_has_levelidx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JoinRoomRsp::clear_has_levelidx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JoinRoomRsp::clear_levelidx() {
  levelidx_ = 0u;
  clear_has_levelidx();
}
inline ::google::protobuf::uint32 JoinRoomRsp::levelidx() const {
  // @@protoc_insertion_point(field_get:JoinRoomRsp.levelIdx)
  return levelidx_;
}
inline void JoinRoomRsp::set_levelidx(::google::protobuf::uint32 value) {
  set_has_levelidx();
  levelidx_ = value;
  // @@protoc_insertion_point(field_set:JoinRoomRsp.levelIdx)
}

// required uint32 roomId = 4;
inline bool JoinRoomRsp::has_roomid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JoinRoomRsp::set_has_roomid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void JoinRoomRsp::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void JoinRoomRsp::clear_roomid() {
  roomid_ = 0u;
  clear_has_roomid();
}
inline ::google::protobuf::uint32 JoinRoomRsp::roomid() const {
  // @@protoc_insertion_point(field_get:JoinRoomRsp.roomId)
  return roomid_;
}
inline void JoinRoomRsp::set_roomid(::google::protobuf::uint32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:JoinRoomRsp.roomId)
}

// required uint32 playerId = 5;
inline bool JoinRoomRsp::has_playerid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void JoinRoomRsp::set_has_playerid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void JoinRoomRsp::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void JoinRoomRsp::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 JoinRoomRsp::playerid() const {
  // @@protoc_insertion_point(field_get:JoinRoomRsp.playerId)
  return playerid_;
}
inline void JoinRoomRsp::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:JoinRoomRsp.playerId)
}

// required uint32 port = 6;
inline bool JoinRoomRsp::has_port() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void JoinRoomRsp::set_has_port() {
  _has_bits_[0] |= 0x00000020u;
}
inline void JoinRoomRsp::clear_has_port() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void JoinRoomRsp::clear_port() {
  port_ = 0u;
  clear_has_port();
}
inline ::google::protobuf::uint32 JoinRoomRsp::port() const {
  // @@protoc_insertion_point(field_get:JoinRoomRsp.port)
  return port_;
}
inline void JoinRoomRsp::set_port(::google::protobuf::uint32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:JoinRoomRsp.port)
}

// repeated uint32 models = 7;
inline int JoinRoomRsp::models_size() const {
  return models_.size();
}
inline void JoinRoomRsp::clear_models() {
  models_.Clear();
}
inline ::google::protobuf::uint32 JoinRoomRsp::models(int index) const {
  // @@protoc_insertion_point(field_get:JoinRoomRsp.models)
  return models_.Get(index);
}
inline void JoinRoomRsp::set_models(int index, ::google::protobuf::uint32 value) {
  models_.Set(index, value);
  // @@protoc_insertion_point(field_set:JoinRoomRsp.models)
}
inline void JoinRoomRsp::add_models(::google::protobuf::uint32 value) {
  models_.Add(value);
  // @@protoc_insertion_point(field_add:JoinRoomRsp.models)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
JoinRoomRsp::models() const {
  // @@protoc_insertion_point(field_list:JoinRoomRsp.models)
  return models_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
JoinRoomRsp::mutable_models() {
  // @@protoc_insertion_point(field_mutable_list:JoinRoomRsp.models)
  return &models_;
}

// repeated uint32 weapons = 8;
inline int JoinRoomRsp::weapons_size() const {
  return weapons_.size();
}
inline void JoinRoomRsp::clear_weapons() {
  weapons_.Clear();
}
inline ::google::protobuf::uint32 JoinRoomRsp::weapons(int index) const {
  // @@protoc_insertion_point(field_get:JoinRoomRsp.weapons)
  return weapons_.Get(index);
}
inline void JoinRoomRsp::set_weapons(int index, ::google::protobuf::uint32 value) {
  weapons_.Set(index, value);
  // @@protoc_insertion_point(field_set:JoinRoomRsp.weapons)
}
inline void JoinRoomRsp::add_weapons(::google::protobuf::uint32 value) {
  weapons_.Add(value);
  // @@protoc_insertion_point(field_add:JoinRoomRsp.weapons)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
JoinRoomRsp::weapons() const {
  // @@protoc_insertion_point(field_list:JoinRoomRsp.weapons)
  return weapons_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
JoinRoomRsp::mutable_weapons() {
  // @@protoc_insertion_point(field_mutable_list:JoinRoomRsp.weapons)
  return &weapons_;
}

// -------------------------------------------------------------------

// Vector2_

// required int32 x = 1;
inline bool Vector2_::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Vector2_::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Vector2_::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Vector2_::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 Vector2_::x() const {
  // @@protoc_insertion_point(field_get:Vector2_.x)
  return x_;
}
inline void Vector2_::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:Vector2_.x)
}

// required int32 y = 2;
inline bool Vector2_::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Vector2_::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Vector2_::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Vector2_::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 Vector2_::y() const {
  // @@protoc_insertion_point(field_get:Vector2_.y)
  return y_;
}
inline void Vector2_::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:Vector2_.y)
}

// -------------------------------------------------------------------

// FrameCommand

// required uint32 LogicFrame = 1;
inline bool FrameCommand::has_logicframe() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FrameCommand::set_has_logicframe() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FrameCommand::clear_has_logicframe() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FrameCommand::clear_logicframe() {
  logicframe_ = 0u;
  clear_has_logicframe();
}
inline ::google::protobuf::uint32 FrameCommand::logicframe() const {
  // @@protoc_insertion_point(field_get:FrameCommand.LogicFrame)
  return logicframe_;
}
inline void FrameCommand::set_logicframe(::google::protobuf::uint32 value) {
  set_has_logicframe();
  logicframe_ = value;
  // @@protoc_insertion_point(field_set:FrameCommand.LogicFrame)
}

// optional uint32 playerId = 2;
inline bool FrameCommand::has_playerid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FrameCommand::set_has_playerid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FrameCommand::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FrameCommand::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 FrameCommand::playerid() const {
  // @@protoc_insertion_point(field_get:FrameCommand.playerId)
  return playerid_;
}
inline void FrameCommand::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:FrameCommand.playerId)
}

// required .MeteorMsg.Command command = 3;
inline bool FrameCommand::has_command() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FrameCommand::set_has_command() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FrameCommand::clear_has_command() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FrameCommand::clear_command() {
  command_ = 1;
  clear_has_command();
}
inline ::MeteorMsg_Command FrameCommand::command() const {
  // @@protoc_insertion_point(field_get:FrameCommand.command)
  return static_cast< ::MeteorMsg_Command >(command_);
}
inline void FrameCommand::set_command(::MeteorMsg_Command value) {
  assert(::MeteorMsg_Command_IsValid(value));
  set_has_command();
  command_ = value;
  // @@protoc_insertion_point(field_set:FrameCommand.command)
}

// required bytes data = 4;
inline bool FrameCommand::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrameCommand::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrameCommand::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrameCommand::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& FrameCommand::data() const {
  // @@protoc_insertion_point(field_get:FrameCommand.data)
  return data_.GetNoArena();
}
inline void FrameCommand::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FrameCommand.data)
}
#if LANG_CXX11
inline void FrameCommand::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FrameCommand.data)
}
#endif
inline void FrameCommand::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FrameCommand.data)
}
inline void FrameCommand::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FrameCommand.data)
}
inline ::std::string* FrameCommand::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:FrameCommand.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FrameCommand::release_data() {
  // @@protoc_insertion_point(field_release:FrameCommand.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FrameCommand::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:FrameCommand.data)
}

// -------------------------------------------------------------------

// GameFrames

// repeated .FrameCommand commands = 1;
inline int GameFrames::commands_size() const {
  return commands_.size();
}
inline void GameFrames::clear_commands() {
  commands_.Clear();
}
inline const ::FrameCommand& GameFrames::commands(int index) const {
  // @@protoc_insertion_point(field_get:GameFrames.commands)
  return commands_.Get(index);
}
inline ::FrameCommand* GameFrames::mutable_commands(int index) {
  // @@protoc_insertion_point(field_mutable:GameFrames.commands)
  return commands_.Mutable(index);
}
inline ::FrameCommand* GameFrames::add_commands() {
  // @@protoc_insertion_point(field_add:GameFrames.commands)
  return commands_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::FrameCommand >*
GameFrames::mutable_commands() {
  // @@protoc_insertion_point(field_mutable_list:GameFrames.commands)
  return &commands_;
}
inline const ::google::protobuf::RepeatedPtrField< ::FrameCommand >&
GameFrames::commands() const {
  // @@protoc_insertion_point(field_list:GameFrames.commands)
  return commands_;
}

// -------------------------------------------------------------------

// ChatMsg

// required uint32 playerId = 1;
inline bool ChatMsg::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChatMsg::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChatMsg::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChatMsg::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 ChatMsg::playerid() const {
  // @@protoc_insertion_point(field_get:ChatMsg.playerId)
  return playerid_;
}
inline void ChatMsg::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:ChatMsg.playerId)
}

// required uint32 channelType = 2;
inline bool ChatMsg::has_channeltype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChatMsg::set_has_channeltype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChatMsg::clear_has_channeltype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChatMsg::clear_channeltype() {
  channeltype_ = 0u;
  clear_has_channeltype();
}
inline ::google::protobuf::uint32 ChatMsg::channeltype() const {
  // @@protoc_insertion_point(field_get:ChatMsg.channelType)
  return channeltype_;
}
inline void ChatMsg::set_channeltype(::google::protobuf::uint32 value) {
  set_has_channeltype();
  channeltype_ = value;
  // @@protoc_insertion_point(field_set:ChatMsg.channelType)
}

// required string chatMessage = 3;
inline bool ChatMsg::has_chatmessage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatMsg::set_has_chatmessage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatMsg::clear_has_chatmessage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatMsg::clear_chatmessage() {
  chatmessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chatmessage();
}
inline const ::std::string& ChatMsg::chatmessage() const {
  // @@protoc_insertion_point(field_get:ChatMsg.chatMessage)
  return chatmessage_.GetNoArena();
}
inline void ChatMsg::set_chatmessage(const ::std::string& value) {
  set_has_chatmessage();
  chatmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChatMsg.chatMessage)
}
#if LANG_CXX11
inline void ChatMsg::set_chatmessage(::std::string&& value) {
  set_has_chatmessage();
  chatmessage_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ChatMsg.chatMessage)
}
#endif
inline void ChatMsg::set_chatmessage(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chatmessage();
  chatmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChatMsg.chatMessage)
}
inline void ChatMsg::set_chatmessage(const char* value, size_t size) {
  set_has_chatmessage();
  chatmessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChatMsg.chatMessage)
}
inline ::std::string* ChatMsg::mutable_chatmessage() {
  set_has_chatmessage();
  // @@protoc_insertion_point(field_mutable:ChatMsg.chatMessage)
  return chatmessage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatMsg::release_chatmessage() {
  // @@protoc_insertion_point(field_release:ChatMsg.chatMessage)
  clear_has_chatmessage();
  return chatmessage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatMsg::set_allocated_chatmessage(::std::string* chatmessage) {
  if (chatmessage != NULL) {
    set_has_chatmessage();
  } else {
    clear_has_chatmessage();
  }
  chatmessage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chatmessage);
  // @@protoc_insertion_point(field_set_allocated:ChatMsg.chatMessage)
}

// -------------------------------------------------------------------

// AudioChatMsg

// required uint32 playerId = 1;
inline bool AudioChatMsg::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AudioChatMsg::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AudioChatMsg::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AudioChatMsg::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 AudioChatMsg::playerid() const {
  // @@protoc_insertion_point(field_get:AudioChatMsg.playerId)
  return playerid_;
}
inline void AudioChatMsg::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:AudioChatMsg.playerId)
}

// required uint32 type = 2;
inline bool AudioChatMsg::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AudioChatMsg::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AudioChatMsg::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AudioChatMsg::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 AudioChatMsg::type() const {
  // @@protoc_insertion_point(field_get:AudioChatMsg.type)
  return type_;
}
inline void AudioChatMsg::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:AudioChatMsg.type)
}

// required bytes audio_data = 3;
inline bool AudioChatMsg::has_audio_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AudioChatMsg::set_has_audio_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AudioChatMsg::clear_has_audio_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AudioChatMsg::clear_audio_data() {
  audio_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_audio_data();
}
inline const ::std::string& AudioChatMsg::audio_data() const {
  // @@protoc_insertion_point(field_get:AudioChatMsg.audio_data)
  return audio_data_.GetNoArena();
}
inline void AudioChatMsg::set_audio_data(const ::std::string& value) {
  set_has_audio_data();
  audio_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AudioChatMsg.audio_data)
}
#if LANG_CXX11
inline void AudioChatMsg::set_audio_data(::std::string&& value) {
  set_has_audio_data();
  audio_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AudioChatMsg.audio_data)
}
#endif
inline void AudioChatMsg::set_audio_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_audio_data();
  audio_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AudioChatMsg.audio_data)
}
inline void AudioChatMsg::set_audio_data(const void* value, size_t size) {
  set_has_audio_data();
  audio_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AudioChatMsg.audio_data)
}
inline ::std::string* AudioChatMsg::mutable_audio_data() {
  set_has_audio_data();
  // @@protoc_insertion_point(field_mutable:AudioChatMsg.audio_data)
  return audio_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AudioChatMsg::release_audio_data() {
  // @@protoc_insertion_point(field_release:AudioChatMsg.audio_data)
  clear_has_audio_data();
  return audio_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AudioChatMsg::set_allocated_audio_data(::std::string* audio_data) {
  if (audio_data != NULL) {
    set_has_audio_data();
  } else {
    clear_has_audio_data();
  }
  audio_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), audio_data);
  // @@protoc_insertion_point(field_set_allocated:AudioChatMsg.audio_data)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::MeteorMsg_MsgType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MeteorMsg_MsgType>() {
  return ::MeteorMsg_MsgType_descriptor();
}
template <> struct is_proto_enum< ::MeteorMsg_Command> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MeteorMsg_Command>() {
  return ::MeteorMsg_Command_descriptor();
}
template <> struct is_proto_enum< ::RoomInfo_RoomRule> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::RoomInfo_RoomRule>() {
  return ::RoomInfo_RoomRule_descriptor();
}
template <> struct is_proto_enum< ::RoomInfo_RoomPattern> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::RoomInfo_RoomPattern>() {
  return ::RoomInfo_RoomPattern_descriptor();
}
template <> struct is_proto_enum< ::RoomInfo_MeteorVersion> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::RoomInfo_MeteorVersion>() {
  return ::RoomInfo_MeteorVersion_descriptor();
}
template <> struct is_proto_enum< ::RoomInfo_ErrorCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::RoomInfo_ErrorCode>() {
  return ::RoomInfo_ErrorCode_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_protocol_2eproto__INCLUDED
