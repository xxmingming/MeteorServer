// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protosrc/protocol.proto

#include "protosrc/protocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class MeteorMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MeteorMsg>
      _instance;
} _MeteorMsg_default_instance_;
class RoomInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoomInfo>
      _instance;
} _RoomInfo_default_instance_;
class OnLeaveRoomRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OnLeaveRoomRsp>
      _instance;
} _OnLeaveRoomRsp_default_instance_;
class GetRoomRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetRoomRsp>
      _instance;
} _GetRoomRsp_default_instance_;
class CreateRoomReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateRoomReq>
      _instance;
} _CreateRoomReq_default_instance_;
class CreateRoomRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateRoomRsp>
      _instance;
} _CreateRoomRsp_default_instance_;
class JoinRoomReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JoinRoomReq>
      _instance;
} _JoinRoomReq_default_instance_;
class JoinRoomRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JoinRoomRsp>
      _instance;
} _JoinRoomRsp_default_instance_;
class EnterLevelReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnterLevelReq>
      _instance;
} _EnterLevelReq_default_instance_;
class EnterLevelRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnterLevelRsp>
      _instance;
} _EnterLevelRsp_default_instance_;
class OnEnterRoomRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OnEnterRoomRsp>
      _instance;
} _OnEnterRoomRsp_default_instance_;
class OnEnterLevelRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OnEnterLevelRsp>
      _instance;
} _OnEnterLevelRsp_default_instance_;
class Vector2_DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vector2_>
      _instance;
} _Vector2__default_instance_;
class Vector3_DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vector3_>
      _instance;
} _Vector3__default_instance_;
class Quaternion_DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Quaternion_>
      _instance;
} _Quaternion__default_instance_;
class SceneInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SceneInfo>
      _instance;
} _SceneInfo_default_instance_;
class SceneItem_DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SceneItem_>
      _instance;
} _SceneItem__default_instance_;
class Player_DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Player_>
      _instance;
} _Player__default_instance_;
class InputReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InputReq>
      _instance;
} _InputReq_default_instance_;
class Input_DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Input_>
      _instance;
} _Input__default_instance_;
class KeyFrameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeyFrame>
      _instance;
} _KeyFrame_default_instance_;
namespace protobuf_protosrc_2fprotocol_2eproto {
void InitDefaultsMeteorMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_MeteorMsg_default_instance_;
    new (ptr) ::MeteorMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MeteorMsg::InitAsDefaultInstance();
}

void InitDefaultsMeteorMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMeteorMsgImpl);
}

void InitDefaultsRoomInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_RoomInfo_default_instance_;
    new (ptr) ::RoomInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RoomInfo::InitAsDefaultInstance();
}

void InitDefaultsRoomInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRoomInfoImpl);
}

void InitDefaultsOnLeaveRoomRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_OnLeaveRoomRsp_default_instance_;
    new (ptr) ::OnLeaveRoomRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OnLeaveRoomRsp::InitAsDefaultInstance();
}

void InitDefaultsOnLeaveRoomRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOnLeaveRoomRspImpl);
}

void InitDefaultsGetRoomRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_protosrc_2fprotocol_2eproto::InitDefaultsRoomInfo();
  {
    void* ptr = &::_GetRoomRsp_default_instance_;
    new (ptr) ::GetRoomRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GetRoomRsp::InitAsDefaultInstance();
}

void InitDefaultsGetRoomRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetRoomRspImpl);
}

void InitDefaultsCreateRoomReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CreateRoomReq_default_instance_;
    new (ptr) ::CreateRoomReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CreateRoomReq::InitAsDefaultInstance();
}

void InitDefaultsCreateRoomReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateRoomReqImpl);
}

void InitDefaultsCreateRoomRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_CreateRoomRsp_default_instance_;
    new (ptr) ::CreateRoomRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CreateRoomRsp::InitAsDefaultInstance();
}

void InitDefaultsCreateRoomRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateRoomRspImpl);
}

void InitDefaultsJoinRoomReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_JoinRoomReq_default_instance_;
    new (ptr) ::JoinRoomReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::JoinRoomReq::InitAsDefaultInstance();
}

void InitDefaultsJoinRoomReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJoinRoomReqImpl);
}

void InitDefaultsJoinRoomRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_JoinRoomRsp_default_instance_;
    new (ptr) ::JoinRoomRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::JoinRoomRsp::InitAsDefaultInstance();
}

void InitDefaultsJoinRoomRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJoinRoomRspImpl);
}

void InitDefaultsEnterLevelReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_EnterLevelReq_default_instance_;
    new (ptr) ::EnterLevelReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::EnterLevelReq::InitAsDefaultInstance();
}

void InitDefaultsEnterLevelReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEnterLevelReqImpl);
}

void InitDefaultsEnterLevelRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_protosrc_2fprotocol_2eproto::InitDefaultsSceneInfo();
  {
    void* ptr = &::_EnterLevelRsp_default_instance_;
    new (ptr) ::EnterLevelRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::EnterLevelRsp::InitAsDefaultInstance();
}

void InitDefaultsEnterLevelRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEnterLevelRspImpl);
}

void InitDefaultsOnEnterRoomRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_OnEnterRoomRsp_default_instance_;
    new (ptr) ::OnEnterRoomRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OnEnterRoomRsp::InitAsDefaultInstance();
}

void InitDefaultsOnEnterRoomRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOnEnterRoomRspImpl);
}

void InitDefaultsOnEnterLevelRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_protosrc_2fprotocol_2eproto::InitDefaultsPlayer_();
  {
    void* ptr = &::_OnEnterLevelRsp_default_instance_;
    new (ptr) ::OnEnterLevelRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::OnEnterLevelRsp::InitAsDefaultInstance();
}

void InitDefaultsOnEnterLevelRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOnEnterLevelRspImpl);
}

void InitDefaultsVector2_Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Vector2__default_instance_;
    new (ptr) ::Vector2_();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Vector2_::InitAsDefaultInstance();
}

void InitDefaultsVector2_() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVector2_Impl);
}

void InitDefaultsVector3_Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Vector3__default_instance_;
    new (ptr) ::Vector3_();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Vector3_::InitAsDefaultInstance();
}

void InitDefaultsVector3_() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVector3_Impl);
}

void InitDefaultsQuaternion_Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Quaternion__default_instance_;
    new (ptr) ::Quaternion_();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Quaternion_::InitAsDefaultInstance();
}

void InitDefaultsQuaternion_() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQuaternion_Impl);
}

void InitDefaultsSceneInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_protosrc_2fprotocol_2eproto::InitDefaultsSceneItem_();
  protobuf_protosrc_2fprotocol_2eproto::InitDefaultsPlayer_();
  {
    void* ptr = &::_SceneInfo_default_instance_;
    new (ptr) ::SceneInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SceneInfo::InitAsDefaultInstance();
}

void InitDefaultsSceneInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSceneInfoImpl);
}

void InitDefaultsSceneItem_Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_protosrc_2fprotocol_2eproto::InitDefaultsVector3_();
  protobuf_protosrc_2fprotocol_2eproto::InitDefaultsQuaternion_();
  {
    void* ptr = &::_SceneItem__default_instance_;
    new (ptr) ::SceneItem_();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SceneItem_::InitAsDefaultInstance();
}

void InitDefaultsSceneItem_() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSceneItem_Impl);
}

void InitDefaultsPlayer_Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_protosrc_2fprotocol_2eproto::InitDefaultsVector3_();
  protobuf_protosrc_2fprotocol_2eproto::InitDefaultsQuaternion_();
  {
    void* ptr = &::_Player__default_instance_;
    new (ptr) ::Player_();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Player_::InitAsDefaultInstance();
}

void InitDefaultsPlayer_() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayer_Impl);
}

void InitDefaultsInputReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_protosrc_2fprotocol_2eproto::InitDefaultsInput_();
  {
    void* ptr = &::_InputReq_default_instance_;
    new (ptr) ::InputReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::InputReq::InitAsDefaultInstance();
}

void InitDefaultsInputReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsInputReqImpl);
}

void InitDefaultsInput_Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_protosrc_2fprotocol_2eproto::InitDefaultsVector2_();
  {
    void* ptr = &::_Input__default_instance_;
    new (ptr) ::Input_();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Input_::InitAsDefaultInstance();
}

void InitDefaultsInput_() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsInput_Impl);
}

void InitDefaultsKeyFrameImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_protosrc_2fprotocol_2eproto::InitDefaultsInput_();
  protobuf_protosrc_2fprotocol_2eproto::InitDefaultsPlayer_();
  {
    void* ptr = &::_KeyFrame_default_instance_;
    new (ptr) ::KeyFrame();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KeyFrame::InitAsDefaultInstance();
}

void InitDefaultsKeyFrame() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsKeyFrameImpl);
}

::google::protobuf::Metadata file_level_metadata[21];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MeteorMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MeteorMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MeteorMsg, cmd_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoomInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoomInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoomInfo, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoomInfo, roomname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoomInfo, rule_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoomInfo, levelidx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoomInfo, group1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoomInfo, group2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoomInfo, playercount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoomInfo, maxplayer_),
  1,
  0,
  7,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OnLeaveRoomRsp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OnLeaveRoomRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OnLeaveRoomRsp, playerid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetRoomRsp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetRoomRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GetRoomRsp, roominlobby_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateRoomReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateRoomReq, maxplayer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateRoomReq, levelidx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateRoomReq, rule_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateRoomReq, roomname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateRoomReq, hpmax_),
  1,
  2,
  3,
  0,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateRoomRsp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateRoomRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateRoomRsp, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateRoomRsp, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateRoomRsp, levelid_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::JoinRoomReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::JoinRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::JoinRoomReq, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::JoinRoomReq, usernick_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::JoinRoomRsp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::JoinRoomRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::JoinRoomRsp, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::JoinRoomRsp, reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::JoinRoomRsp, levelidx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::JoinRoomRsp, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::JoinRoomRsp, playerid_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterLevelReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterLevelReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterLevelReq, camp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterLevelReq, model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterLevelReq, weapon_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterLevelRsp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterLevelRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EnterLevelRsp, scene_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OnEnterRoomRsp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OnEnterRoomRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OnEnterRoomRsp, playernick_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OnEnterLevelRsp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OnEnterLevelRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::OnEnterLevelRsp, player_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Vector2_, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Vector2_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Vector2_, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Vector2_, y_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Vector3_, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Vector3_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Vector3_, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Vector3_, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Vector3_, z_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Quaternion_, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Quaternion_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Quaternion_, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Quaternion_, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Quaternion_, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Quaternion_, w_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SceneInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SceneInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SceneInfo, items_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SceneInfo, players_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SceneItem_, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SceneItem_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SceneItem_, model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SceneItem_, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SceneItem_, rotation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SceneItem_, frame_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Player_, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Player_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Player_, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Player_, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Player_, weapon1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Player_, weapon2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Player_, weapon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Player_, weapon_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Player_, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Player_, rotation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Player_, model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Player_, anisource_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Player_, frame_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Player_, hpmax_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Player_, hp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Player_, angry_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Player_, camp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Player_, spawnpoint_),
  3,
  0,
  4,
  5,
  6,
  7,
  1,
  2,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::InputReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::InputReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::InputReq, input_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Input_, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Input_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Input_, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Input_, joystick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Input_, mousedelta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Input_, w_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Input_, s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Input_, a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Input_, d_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Input_, jump_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Input_, break__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Input_, attack_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Input_, e_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Input_, r_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Input_, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Input_, space_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Input_, c_),
  14,
  12,
  13,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyFrame, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyFrame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyFrame, frameindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyFrame, inputs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KeyFrame, players_),
  0,
  ~0u,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::MeteorMsg)},
  { 7, 20, sizeof(::RoomInfo)},
  { 28, 34, sizeof(::OnLeaveRoomRsp)},
  { 35, 41, sizeof(::GetRoomRsp)},
  { 42, 52, sizeof(::CreateRoomReq)},
  { 57, 65, sizeof(::CreateRoomRsp)},
  { 68, 75, sizeof(::JoinRoomReq)},
  { 77, 87, sizeof(::JoinRoomRsp)},
  { 92, 100, sizeof(::EnterLevelReq)},
  { 103, 109, sizeof(::EnterLevelRsp)},
  { 110, 116, sizeof(::OnEnterRoomRsp)},
  { 117, 123, sizeof(::OnEnterLevelRsp)},
  { 124, 131, sizeof(::Vector2_)},
  { 133, 141, sizeof(::Vector3_)},
  { 144, 153, sizeof(::Quaternion_)},
  { 157, 164, sizeof(::SceneInfo)},
  { 166, 175, sizeof(::SceneItem_)},
  { 179, 200, sizeof(::Player_)},
  { 216, 222, sizeof(::InputReq)},
  { 223, 243, sizeof(::Input_)},
  { 258, 266, sizeof(::KeyFrame)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MeteorMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RoomInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_OnLeaveRoomRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GetRoomRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CreateRoomReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CreateRoomRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_JoinRoomReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_JoinRoomRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_EnterLevelReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_EnterLevelRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_OnEnterRoomRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_OnEnterLevelRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Vector2__default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Vector3__default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Quaternion__default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SceneInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SceneItem__default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Player__default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_InputReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Input__default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_KeyFrame_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "protosrc/protocol.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 21);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027protosrc/protocol.proto\"\324\002\n\tMeteorMsg\022"
      "\037\n\003cmd\030\001 \002(\0162\022.MeteorMsg.MsgType\"\245\002\n\007Msg"
      "Type\022\016\n\nGetRoomReq\020d\022\016\n\nGetRoomRsp\020e\022\021\n\r"
      "CreateRoomReq\020f\022\021\n\rCreateRoomRsp\020g\022\017\n\013Jo"
      "inRoomReq\020h\022\017\n\013JoinRoomRsp\020i\022\021\n\rOnJoinRo"
      "omRsp\020j\022\021\n\rEnterLevelReq\020k\022\021\n\rEnterLevel"
      "Rsp\020l\022\023\n\017OnEnterLevelRsp\020m\022\020\n\014LeaveRoomR"
      "eq\020n\022\022\n\016OnLeaveRoomRsp\020o\022\014\n\010InputReq\020p\022\r"
      "\n\tSyncInput\020q\022\017\n\013KeyFrameReq\020r\022\020\n\014SyncKe"
      "yFrame\020s\"\251\002\n\010RoomInfo\022\016\n\006roomId\030\001 \002(\r\022\020\n"
      "\010roomName\030\002 \002(\t\022 \n\004rule\030\003 \002(\0162\022.RoomInfo"
      ".RoomRule\022\020\n\010levelIdx\030\004 \002(\r\022\016\n\006Group1\030\005 "
      "\002(\r\022\016\n\006Group2\030\006 \002(\r\022\023\n\013playerCount\030\007 \002(\r"
      "\022\021\n\tmaxPlayer\030\010 \002(\r\"%\n\013RoomPattern\022\n\n\006No"
      "rmal\020\001\022\n\n\006Replay\020\002\"X\n\010RoomRule\022\020\n\014Single"
      "Player\020\001\022\013\n\007AllDead\020\002\022\022\n\016LeaderMustDead\020"
      "\003\022\017\n\013DefenceBase\020\004\022\010\n\004Loot\020\005\"\"\n\016OnLeaveR"
      "oomRsp\022\020\n\010playerId\030\002 \002(\r\",\n\nGetRoomRsp\022\036"
      "\n\013RoomInLobby\030\002 \003(\0132\t.RoomInfo\"c\n\rCreate"
      "RoomReq\022\021\n\tmaxPlayer\030\002 \002(\r\022\020\n\010levelIdx\030\003"
      " \002(\r\022\014\n\004rule\030\004 \002(\r\022\020\n\010roomName\030\005 \002(\t\022\r\n\005"
      "hpMax\030\006 \002(\r\"@\n\rCreateRoomRsp\022\016\n\006result\030\002"
      " \002(\r\022\016\n\006roomId\030\003 \002(\r\022\017\n\007levelId\030\004 \002(\r\"/\n"
      "\013JoinRoomReq\022\016\n\006roomId\030\002 \002(\r\022\020\n\010userNick"
      "\030\003 \002(\t\"a\n\013JoinRoomRsp\022\016\n\006result\030\002 \002(\r\022\016\n"
      "\006reason\030\003 \002(\r\022\020\n\010levelIdx\030\004 \002(\r\022\016\n\006roomI"
      "d\030\005 \002(\r\022\020\n\010playerId\030\006 \002(\r\"<\n\rEnterLevelR"
      "eq\022\014\n\004camp\030\002 \002(\r\022\r\n\005model\030\003 \002(\r\022\016\n\006weapo"
      "n\030\004 \002(\r\"*\n\rEnterLevelRsp\022\031\n\005scene\030\002 \001(\0132"
      "\n.SceneInfo\"$\n\016OnEnterRoomRsp\022\022\n\nplayerN"
      "ick\030\002 \002(\t\"+\n\017OnEnterLevelRsp\022\030\n\006player\030\002"
      " \002(\0132\010.Player_\" \n\010Vector2_\022\t\n\001x\030\001 \002(\005\022\t\n"
      "\001y\030\002 \002(\005\"+\n\010Vector3_\022\t\n\001x\030\001 \002(\005\022\t\n\001y\030\002 \002"
      "(\005\022\t\n\001z\030\003 \002(\005\"9\n\013Quaternion_\022\t\n\001x\030\001 \002(\005\022"
      "\t\n\001y\030\002 \002(\005\022\t\n\001z\030\003 \002(\005\022\t\n\001w\030\004 \002(\005\"B\n\tScen"
      "eInfo\022\032\n\005items\030\001 \003(\0132\013.SceneItem_\022\031\n\007pla"
      "yers\030\002 \003(\0132\010.Player_\"b\n\nSceneItem_\022\r\n\005mo"
      "del\030\001 \002(\t\022\026\n\003pos\030\002 \002(\0132\t.Vector3_\022\036\n\010rot"
      "ation\030\003 \002(\0132\014.Quaternion_\022\r\n\005frame\030\004 \002(\005"
      "\"\236\002\n\007Player_\022\n\n\002id\030\001 \002(\r\022\014\n\004name\030\002 \002(\t\022\017"
      "\n\007weapon1\030\003 \002(\r\022\017\n\007weapon2\030\004 \002(\r\022\016\n\006weap"
      "on\030\005 \002(\r\022\022\n\nweapon_pos\030\006 \002(\r\022\026\n\003pos\030\007 \002("
      "\0132\t.Vector3_\022\036\n\010rotation\030\010 \002(\0132\014.Quatern"
      "ion_\022\r\n\005model\030\t \002(\005\022\021\n\taniSource\030\n \002(\005\022\r"
      "\n\005frame\030\013 \002(\005\022\r\n\005hpMax\030\014 \002(\005\022\n\n\002hp\030\r \002(\005"
      "\022\r\n\005angry\030\016 \002(\005\022\014\n\004Camp\030\017 \002(\005\022\022\n\nSpawnPo"
      "int\030\020 \002(\005\"\"\n\010InputReq\022\026\n\005input\030\001 \003(\0132\007.I"
      "nput_\"\352\001\n\006Input_\022\020\n\010playerId\030\001 \002(\r\022\033\n\010Jo"
      "yStick\030\002 \002(\0132\t.Vector2_\022\035\n\nMouseDelta\030\003 "
      "\002(\0132\t.Vector2_\022\t\n\001w\030\004 \002(\014\022\t\n\001s\030\005 \002(\014\022\t\n\001"
      "a\030\006 \002(\014\022\t\n\001d\030\007 \002(\014\022\014\n\004jump\030\010 \002(\014\022\r\n\005brea"
      "k\030\t \002(\014\022\016\n\006attack\030\n \002(\014\022\t\n\001e\030\013 \002(\014\022\t\n\001r\030"
      "\014 \002(\014\022\t\n\001y\030\r \002(\014\022\r\n\005space\030\016 \002(\014\022\t\n\001c\030\017 \002"
      "(\014\"R\n\010KeyFrame\022\022\n\nframeIndex\030\001 \002(\r\022\027\n\006In"
      "puts\030\002 \003(\0132\007.Input_\022\031\n\007Players\030\003 \003(\0132\010.P"
      "layer_"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2206);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protosrc/protocol.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_protosrc_2fprotocol_2eproto
const ::google::protobuf::EnumDescriptor* MeteorMsg_MsgType_descriptor() {
  protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protosrc_2fprotocol_2eproto::file_level_enum_descriptors[0];
}
bool MeteorMsg_MsgType_IsValid(int value) {
  switch (value) {
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MeteorMsg_MsgType MeteorMsg::GetRoomReq;
const MeteorMsg_MsgType MeteorMsg::GetRoomRsp;
const MeteorMsg_MsgType MeteorMsg::CreateRoomReq;
const MeteorMsg_MsgType MeteorMsg::CreateRoomRsp;
const MeteorMsg_MsgType MeteorMsg::JoinRoomReq;
const MeteorMsg_MsgType MeteorMsg::JoinRoomRsp;
const MeteorMsg_MsgType MeteorMsg::OnJoinRoomRsp;
const MeteorMsg_MsgType MeteorMsg::EnterLevelReq;
const MeteorMsg_MsgType MeteorMsg::EnterLevelRsp;
const MeteorMsg_MsgType MeteorMsg::OnEnterLevelRsp;
const MeteorMsg_MsgType MeteorMsg::LeaveRoomReq;
const MeteorMsg_MsgType MeteorMsg::OnLeaveRoomRsp;
const MeteorMsg_MsgType MeteorMsg::InputReq;
const MeteorMsg_MsgType MeteorMsg::SyncInput;
const MeteorMsg_MsgType MeteorMsg::KeyFrameReq;
const MeteorMsg_MsgType MeteorMsg::SyncKeyFrame;
const MeteorMsg_MsgType MeteorMsg::MsgType_MIN;
const MeteorMsg_MsgType MeteorMsg::MsgType_MAX;
const int MeteorMsg::MsgType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* RoomInfo_RoomPattern_descriptor() {
  protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protosrc_2fprotocol_2eproto::file_level_enum_descriptors[1];
}
bool RoomInfo_RoomPattern_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RoomInfo_RoomPattern RoomInfo::Normal;
const RoomInfo_RoomPattern RoomInfo::Replay;
const RoomInfo_RoomPattern RoomInfo::RoomPattern_MIN;
const RoomInfo_RoomPattern RoomInfo::RoomPattern_MAX;
const int RoomInfo::RoomPattern_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* RoomInfo_RoomRule_descriptor() {
  protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protosrc_2fprotocol_2eproto::file_level_enum_descriptors[2];
}
bool RoomInfo_RoomRule_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RoomInfo_RoomRule RoomInfo::SinglePlayer;
const RoomInfo_RoomRule RoomInfo::AllDead;
const RoomInfo_RoomRule RoomInfo::LeaderMustDead;
const RoomInfo_RoomRule RoomInfo::DefenceBase;
const RoomInfo_RoomRule RoomInfo::Loot;
const RoomInfo_RoomRule RoomInfo::RoomRule_MIN;
const RoomInfo_RoomRule RoomInfo::RoomRule_MAX;
const int RoomInfo::RoomRule_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void MeteorMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MeteorMsg::kCmdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MeteorMsg::MeteorMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsMeteorMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MeteorMsg)
}
MeteorMsg::MeteorMsg(const MeteorMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cmd_ = from.cmd_;
  // @@protoc_insertion_point(copy_constructor:MeteorMsg)
}

void MeteorMsg::SharedCtor() {
  _cached_size_ = 0;
  cmd_ = 100;
}

MeteorMsg::~MeteorMsg() {
  // @@protoc_insertion_point(destructor:MeteorMsg)
  SharedDtor();
}

void MeteorMsg::SharedDtor() {
}

void MeteorMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MeteorMsg::descriptor() {
  ::protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MeteorMsg& MeteorMsg::default_instance() {
  ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsMeteorMsg();
  return *internal_default_instance();
}

MeteorMsg* MeteorMsg::New(::google::protobuf::Arena* arena) const {
  MeteorMsg* n = new MeteorMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MeteorMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:MeteorMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cmd_ = 100;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MeteorMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MeteorMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MeteorMsg.MsgType cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MeteorMsg_MsgType_IsValid(value)) {
            set_cmd(static_cast< ::MeteorMsg_MsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MeteorMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MeteorMsg)
  return false;
#undef DO_
}

void MeteorMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MeteorMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .MeteorMsg.MsgType cmd = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MeteorMsg)
}

::google::protobuf::uint8* MeteorMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MeteorMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .MeteorMsg.MsgType cmd = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MeteorMsg)
  return target;
}

size_t MeteorMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MeteorMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .MeteorMsg.MsgType cmd = 1;
  if (has_cmd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MeteorMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MeteorMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const MeteorMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MeteorMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MeteorMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MeteorMsg)
    MergeFrom(*source);
  }
}

void MeteorMsg::MergeFrom(const MeteorMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MeteorMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_cmd()) {
    set_cmd(from.cmd());
  }
}

void MeteorMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MeteorMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MeteorMsg::CopyFrom(const MeteorMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MeteorMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MeteorMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void MeteorMsg::Swap(MeteorMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MeteorMsg::InternalSwap(MeteorMsg* other) {
  using std::swap;
  swap(cmd_, other->cmd_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MeteorMsg::GetMetadata() const {
  protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RoomInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomInfo::kRoomIdFieldNumber;
const int RoomInfo::kRoomNameFieldNumber;
const int RoomInfo::kRuleFieldNumber;
const int RoomInfo::kLevelIdxFieldNumber;
const int RoomInfo::kGroup1FieldNumber;
const int RoomInfo::kGroup2FieldNumber;
const int RoomInfo::kPlayerCountFieldNumber;
const int RoomInfo::kMaxPlayerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomInfo::RoomInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsRoomInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoomInfo)
}
RoomInfo::RoomInfo(const RoomInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_roomname()) {
    roomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomname_);
  }
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&rule_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(rule_));
  // @@protoc_insertion_point(copy_constructor:RoomInfo)
}

void RoomInfo::SharedCtor() {
  _cached_size_ = 0;
  roomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxplayer_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(maxplayer_));
  rule_ = 1;
}

RoomInfo::~RoomInfo() {
  // @@protoc_insertion_point(destructor:RoomInfo)
  SharedDtor();
}

void RoomInfo::SharedDtor() {
  roomname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RoomInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomInfo::descriptor() {
  ::protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoomInfo& RoomInfo::default_instance() {
  ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsRoomInfo();
  return *internal_default_instance();
}

RoomInfo* RoomInfo::New(::google::protobuf::Arena* arena) const {
  RoomInfo* n = new RoomInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:RoomInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!roomname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*roomname_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 254u) {
    ::memset(&roomid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&maxplayer_) -
        reinterpret_cast<char*>(&roomid_)) + sizeof(maxplayer_));
    rule_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RoomInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoomInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 roomId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_roomid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string roomName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->roomname().data(), static_cast<int>(this->roomname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "RoomInfo.roomName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .RoomInfo.RoomRule rule = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::RoomInfo_RoomRule_IsValid(value)) {
            set_rule(static_cast< ::RoomInfo_RoomRule >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 levelIdx = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_levelidx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &levelidx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Group1 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_group1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Group2 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_group2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 playerCount = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_playercount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &playercount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 maxPlayer = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_maxplayer();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxplayer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoomInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoomInfo)
  return false;
#undef DO_
}

void RoomInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoomInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 roomId = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->roomid(), output);
  }

  // required string roomName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roomname().data(), static_cast<int>(this->roomname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "RoomInfo.roomName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->roomname(), output);
  }

  // required .RoomInfo.RoomRule rule = 3;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->rule(), output);
  }

  // required uint32 levelIdx = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->levelidx(), output);
  }

  // required uint32 Group1 = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->group1(), output);
  }

  // required uint32 Group2 = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->group2(), output);
  }

  // required uint32 playerCount = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->playercount(), output);
  }

  // required uint32 maxPlayer = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->maxplayer(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RoomInfo)
}

::google::protobuf::uint8* RoomInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoomInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 roomId = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->roomid(), target);
  }

  // required string roomName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roomname().data(), static_cast<int>(this->roomname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "RoomInfo.roomName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->roomname(), target);
  }

  // required .RoomInfo.RoomRule rule = 3;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->rule(), target);
  }

  // required uint32 levelIdx = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->levelidx(), target);
  }

  // required uint32 Group1 = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->group1(), target);
  }

  // required uint32 Group2 = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->group2(), target);
  }

  // required uint32 playerCount = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->playercount(), target);
  }

  // required uint32 maxPlayer = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->maxplayer(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RoomInfo)
  return target;
}

size_t RoomInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:RoomInfo)
  size_t total_size = 0;

  if (has_roomname()) {
    // required string roomName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomname());
  }

  if (has_roomid()) {
    // required uint32 roomId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roomid());
  }

  if (has_levelidx()) {
    // required uint32 levelIdx = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->levelidx());
  }

  if (has_group1()) {
    // required uint32 Group1 = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group1());
  }

  if (has_group2()) {
    // required uint32 Group2 = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group2());
  }

  if (has_playercount()) {
    // required uint32 playerCount = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->playercount());
  }

  if (has_maxplayer()) {
    // required uint32 maxPlayer = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxplayer());
  }

  if (has_rule()) {
    // required .RoomInfo.RoomRule rule = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->rule());
  }

  return total_size;
}
size_t RoomInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoomInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000000ff) ^ 0x000000ff) == 0) {  // All required fields are present.
    // required string roomName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomname());

    // required uint32 roomId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roomid());

    // required uint32 levelIdx = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->levelidx());

    // required uint32 Group1 = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group1());

    // required uint32 Group2 = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group2());

    // required uint32 playerCount = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->playercount());

    // required uint32 maxPlayer = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxplayer());

    // required .RoomInfo.RoomRule rule = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->rule());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoomInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RoomInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoomInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoomInfo)
    MergeFrom(*source);
  }
}

void RoomInfo::MergeFrom(const RoomInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoomInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_roomname();
      roomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomname_);
    }
    if (cached_has_bits & 0x00000002u) {
      roomid_ = from.roomid_;
    }
    if (cached_has_bits & 0x00000004u) {
      levelidx_ = from.levelidx_;
    }
    if (cached_has_bits & 0x00000008u) {
      group1_ = from.group1_;
    }
    if (cached_has_bits & 0x00000010u) {
      group2_ = from.group2_;
    }
    if (cached_has_bits & 0x00000020u) {
      playercount_ = from.playercount_;
    }
    if (cached_has_bits & 0x00000040u) {
      maxplayer_ = from.maxplayer_;
    }
    if (cached_has_bits & 0x00000080u) {
      rule_ = from.rule_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RoomInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoomInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomInfo::CopyFrom(const RoomInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoomInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;
  return true;
}

void RoomInfo::Swap(RoomInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomInfo::InternalSwap(RoomInfo* other) {
  using std::swap;
  roomname_.Swap(&other->roomname_);
  swap(roomid_, other->roomid_);
  swap(levelidx_, other->levelidx_);
  swap(group1_, other->group1_);
  swap(group2_, other->group2_);
  swap(playercount_, other->playercount_);
  swap(maxplayer_, other->maxplayer_);
  swap(rule_, other->rule_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomInfo::GetMetadata() const {
  protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OnLeaveRoomRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OnLeaveRoomRsp::kPlayerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OnLeaveRoomRsp::OnLeaveRoomRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsOnLeaveRoomRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:OnLeaveRoomRsp)
}
OnLeaveRoomRsp::OnLeaveRoomRsp(const OnLeaveRoomRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:OnLeaveRoomRsp)
}

void OnLeaveRoomRsp::SharedCtor() {
  _cached_size_ = 0;
  playerid_ = 0u;
}

OnLeaveRoomRsp::~OnLeaveRoomRsp() {
  // @@protoc_insertion_point(destructor:OnLeaveRoomRsp)
  SharedDtor();
}

void OnLeaveRoomRsp::SharedDtor() {
}

void OnLeaveRoomRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OnLeaveRoomRsp::descriptor() {
  ::protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OnLeaveRoomRsp& OnLeaveRoomRsp::default_instance() {
  ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsOnLeaveRoomRsp();
  return *internal_default_instance();
}

OnLeaveRoomRsp* OnLeaveRoomRsp::New(::google::protobuf::Arena* arena) const {
  OnLeaveRoomRsp* n = new OnLeaveRoomRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OnLeaveRoomRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:OnLeaveRoomRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OnLeaveRoomRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OnLeaveRoomRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 playerId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_playerid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OnLeaveRoomRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OnLeaveRoomRsp)
  return false;
#undef DO_
}

void OnLeaveRoomRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OnLeaveRoomRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 playerId = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->playerid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OnLeaveRoomRsp)
}

::google::protobuf::uint8* OnLeaveRoomRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OnLeaveRoomRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 playerId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->playerid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OnLeaveRoomRsp)
  return target;
}

size_t OnLeaveRoomRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OnLeaveRoomRsp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 playerId = 2;
  if (has_playerid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->playerid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OnLeaveRoomRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OnLeaveRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const OnLeaveRoomRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OnLeaveRoomRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OnLeaveRoomRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OnLeaveRoomRsp)
    MergeFrom(*source);
  }
}

void OnLeaveRoomRsp::MergeFrom(const OnLeaveRoomRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OnLeaveRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_playerid()) {
    set_playerid(from.playerid());
  }
}

void OnLeaveRoomRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OnLeaveRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnLeaveRoomRsp::CopyFrom(const OnLeaveRoomRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OnLeaveRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnLeaveRoomRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void OnLeaveRoomRsp::Swap(OnLeaveRoomRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OnLeaveRoomRsp::InternalSwap(OnLeaveRoomRsp* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OnLeaveRoomRsp::GetMetadata() const {
  protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetRoomRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRoomRsp::kRoomInLobbyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRoomRsp::GetRoomRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsGetRoomRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetRoomRsp)
}
GetRoomRsp::GetRoomRsp(const GetRoomRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      roominlobby_(from.roominlobby_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GetRoomRsp)
}

void GetRoomRsp::SharedCtor() {
  _cached_size_ = 0;
}

GetRoomRsp::~GetRoomRsp() {
  // @@protoc_insertion_point(destructor:GetRoomRsp)
  SharedDtor();
}

void GetRoomRsp::SharedDtor() {
}

void GetRoomRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRoomRsp::descriptor() {
  ::protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetRoomRsp& GetRoomRsp::default_instance() {
  ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsGetRoomRsp();
  return *internal_default_instance();
}

GetRoomRsp* GetRoomRsp::New(::google::protobuf::Arena* arena) const {
  GetRoomRsp* n = new GetRoomRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetRoomRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:GetRoomRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roominlobby_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetRoomRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetRoomRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .RoomInfo RoomInLobby = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_roominlobby()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetRoomRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetRoomRsp)
  return false;
#undef DO_
}

void GetRoomRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetRoomRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .RoomInfo RoomInLobby = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roominlobby_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->roominlobby(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetRoomRsp)
}

::google::protobuf::uint8* GetRoomRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GetRoomRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .RoomInfo RoomInLobby = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roominlobby_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->roominlobby(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetRoomRsp)
  return target;
}

size_t GetRoomRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetRoomRsp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .RoomInfo RoomInLobby = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->roominlobby_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->roominlobby(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetRoomRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRoomRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRoomRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetRoomRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetRoomRsp)
    MergeFrom(*source);
  }
}

void GetRoomRsp::MergeFrom(const GetRoomRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roominlobby_.MergeFrom(from.roominlobby_);
}

void GetRoomRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRoomRsp::CopyFrom(const GetRoomRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoomRsp::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->roominlobby())) return false;
  return true;
}

void GetRoomRsp::Swap(GetRoomRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRoomRsp::InternalSwap(GetRoomRsp* other) {
  using std::swap;
  roominlobby_.InternalSwap(&other->roominlobby_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetRoomRsp::GetMetadata() const {
  protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateRoomReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateRoomReq::kMaxPlayerFieldNumber;
const int CreateRoomReq::kLevelIdxFieldNumber;
const int CreateRoomReq::kRuleFieldNumber;
const int CreateRoomReq::kRoomNameFieldNumber;
const int CreateRoomReq::kHpMaxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateRoomReq::CreateRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsCreateRoomReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateRoomReq)
}
CreateRoomReq::CreateRoomReq(const CreateRoomReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_roomname()) {
    roomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomname_);
  }
  ::memcpy(&maxplayer_, &from.maxplayer_,
    static_cast<size_t>(reinterpret_cast<char*>(&hpmax_) -
    reinterpret_cast<char*>(&maxplayer_)) + sizeof(hpmax_));
  // @@protoc_insertion_point(copy_constructor:CreateRoomReq)
}

void CreateRoomReq::SharedCtor() {
  _cached_size_ = 0;
  roomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&maxplayer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hpmax_) -
      reinterpret_cast<char*>(&maxplayer_)) + sizeof(hpmax_));
}

CreateRoomReq::~CreateRoomReq() {
  // @@protoc_insertion_point(destructor:CreateRoomReq)
  SharedDtor();
}

void CreateRoomReq::SharedDtor() {
  roomname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateRoomReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateRoomReq::descriptor() {
  ::protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateRoomReq& CreateRoomReq::default_instance() {
  ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsCreateRoomReq();
  return *internal_default_instance();
}

CreateRoomReq* CreateRoomReq::New(::google::protobuf::Arena* arena) const {
  CreateRoomReq* n = new CreateRoomReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!roomname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*roomname_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 30u) {
    ::memset(&maxplayer_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&hpmax_) -
        reinterpret_cast<char*>(&maxplayer_)) + sizeof(hpmax_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateRoomReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 maxPlayer = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_maxplayer();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxplayer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 levelIdx = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_levelidx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &levelidx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 rule = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_rule();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rule_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string roomName = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->roomname().data(), static_cast<int>(this->roomname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CreateRoomReq.roomName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 hpMax = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_hpmax();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hpmax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateRoomReq)
  return false;
#undef DO_
}

void CreateRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 maxPlayer = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->maxplayer(), output);
  }

  // required uint32 levelIdx = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->levelidx(), output);
  }

  // required uint32 rule = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->rule(), output);
  }

  // required string roomName = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roomname().data(), static_cast<int>(this->roomname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CreateRoomReq.roomName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->roomname(), output);
  }

  // required uint32 hpMax = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->hpmax(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CreateRoomReq)
}

::google::protobuf::uint8* CreateRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CreateRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 maxPlayer = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->maxplayer(), target);
  }

  // required uint32 levelIdx = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->levelidx(), target);
  }

  // required uint32 rule = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->rule(), target);
  }

  // required string roomName = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roomname().data(), static_cast<int>(this->roomname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CreateRoomReq.roomName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->roomname(), target);
  }

  // required uint32 hpMax = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->hpmax(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CreateRoomReq)
  return target;
}

size_t CreateRoomReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CreateRoomReq)
  size_t total_size = 0;

  if (has_roomname()) {
    // required string roomName = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomname());
  }

  if (has_maxplayer()) {
    // required uint32 maxPlayer = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxplayer());
  }

  if (has_levelidx()) {
    // required uint32 levelIdx = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->levelidx());
  }

  if (has_rule()) {
    // required uint32 rule = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rule());
  }

  if (has_hpmax()) {
    // required uint32 hpMax = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hpmax());
  }

  return total_size;
}
size_t CreateRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CreateRoomReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required string roomName = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomname());

    // required uint32 maxPlayer = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxplayer());

    // required uint32 levelIdx = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->levelidx());

    // required uint32 rule = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rule());

    // required uint32 hpMax = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hpmax());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRoomReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateRoomReq)
    MergeFrom(*source);
  }
}

void CreateRoomReq::MergeFrom(const CreateRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_roomname();
      roomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomname_);
    }
    if (cached_has_bits & 0x00000002u) {
      maxplayer_ = from.maxplayer_;
    }
    if (cached_has_bits & 0x00000004u) {
      levelidx_ = from.levelidx_;
    }
    if (cached_has_bits & 0x00000008u) {
      rule_ = from.rule_;
    }
    if (cached_has_bits & 0x00000010u) {
      hpmax_ = from.hpmax_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CreateRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRoomReq::CopyFrom(const CreateRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRoomReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void CreateRoomReq::Swap(CreateRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateRoomReq::InternalSwap(CreateRoomReq* other) {
  using std::swap;
  roomname_.Swap(&other->roomname_);
  swap(maxplayer_, other->maxplayer_);
  swap(levelidx_, other->levelidx_);
  swap(rule_, other->rule_);
  swap(hpmax_, other->hpmax_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateRoomReq::GetMetadata() const {
  protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateRoomRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateRoomRsp::kResultFieldNumber;
const int CreateRoomRsp::kRoomIdFieldNumber;
const int CreateRoomRsp::kLevelIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateRoomRsp::CreateRoomRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsCreateRoomRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateRoomRsp)
}
CreateRoomRsp::CreateRoomRsp(const CreateRoomRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&levelid_) -
    reinterpret_cast<char*>(&result_)) + sizeof(levelid_));
  // @@protoc_insertion_point(copy_constructor:CreateRoomRsp)
}

void CreateRoomRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&levelid_) -
      reinterpret_cast<char*>(&result_)) + sizeof(levelid_));
}

CreateRoomRsp::~CreateRoomRsp() {
  // @@protoc_insertion_point(destructor:CreateRoomRsp)
  SharedDtor();
}

void CreateRoomRsp::SharedDtor() {
}

void CreateRoomRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateRoomRsp::descriptor() {
  ::protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateRoomRsp& CreateRoomRsp::default_instance() {
  ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsCreateRoomRsp();
  return *internal_default_instance();
}

CreateRoomRsp* CreateRoomRsp::New(::google::protobuf::Arena* arena) const {
  CreateRoomRsp* n = new CreateRoomRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateRoomRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateRoomRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&levelid_) -
        reinterpret_cast<char*>(&result_)) + sizeof(levelid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateRoomRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateRoomRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 roomId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_roomid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 levelId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_levelid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &levelid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateRoomRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateRoomRsp)
  return false;
#undef DO_
}

void CreateRoomRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateRoomRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 result = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->result(), output);
  }

  // required uint32 roomId = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->roomid(), output);
  }

  // required uint32 levelId = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->levelid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CreateRoomRsp)
}

::google::protobuf::uint8* CreateRoomRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CreateRoomRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 result = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->result(), target);
  }

  // required uint32 roomId = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->roomid(), target);
  }

  // required uint32 levelId = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->levelid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CreateRoomRsp)
  return target;
}

size_t CreateRoomRsp::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:CreateRoomRsp)
  size_t total_size = 0;

  if (has_result()) {
    // required uint32 result = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  if (has_roomid()) {
    // required uint32 roomId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roomid());
  }

  if (has_levelid()) {
    // required uint32 levelId = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->levelid());
  }

  return total_size;
}
size_t CreateRoomRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CreateRoomRsp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint32 result = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());

    // required uint32 roomId = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roomid());

    // required uint32 levelId = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->levelid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateRoomRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRoomRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateRoomRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateRoomRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateRoomRsp)
    MergeFrom(*source);
  }
}

void CreateRoomRsp::MergeFrom(const CreateRoomRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      roomid_ = from.roomid_;
    }
    if (cached_has_bits & 0x00000004u) {
      levelid_ = from.levelid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CreateRoomRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRoomRsp::CopyFrom(const CreateRoomRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRoomRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void CreateRoomRsp::Swap(CreateRoomRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateRoomRsp::InternalSwap(CreateRoomRsp* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(roomid_, other->roomid_);
  swap(levelid_, other->levelid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateRoomRsp::GetMetadata() const {
  protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JoinRoomReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JoinRoomReq::kRoomIdFieldNumber;
const int JoinRoomReq::kUserNickFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JoinRoomReq::JoinRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsJoinRoomReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:JoinRoomReq)
}
JoinRoomReq::JoinRoomReq(const JoinRoomReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  usernick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_usernick()) {
    usernick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.usernick_);
  }
  roomid_ = from.roomid_;
  // @@protoc_insertion_point(copy_constructor:JoinRoomReq)
}

void JoinRoomReq::SharedCtor() {
  _cached_size_ = 0;
  usernick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roomid_ = 0u;
}

JoinRoomReq::~JoinRoomReq() {
  // @@protoc_insertion_point(destructor:JoinRoomReq)
  SharedDtor();
}

void JoinRoomReq::SharedDtor() {
  usernick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void JoinRoomReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JoinRoomReq::descriptor() {
  ::protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JoinRoomReq& JoinRoomReq::default_instance() {
  ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsJoinRoomReq();
  return *internal_default_instance();
}

JoinRoomReq* JoinRoomReq::New(::google::protobuf::Arena* arena) const {
  JoinRoomReq* n = new JoinRoomReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JoinRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:JoinRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!usernick_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*usernick_.UnsafeRawStringPointer())->clear();
  }
  roomid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool JoinRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:JoinRoomReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 roomId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_roomid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string userNick = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usernick()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->usernick().data(), static_cast<int>(this->usernick().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "JoinRoomReq.userNick");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:JoinRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:JoinRoomReq)
  return false;
#undef DO_
}

void JoinRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:JoinRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 roomId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->roomid(), output);
  }

  // required string userNick = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usernick().data(), static_cast<int>(this->usernick().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "JoinRoomReq.userNick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->usernick(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:JoinRoomReq)
}

::google::protobuf::uint8* JoinRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:JoinRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 roomId = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->roomid(), target);
  }

  // required string userNick = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->usernick().data(), static_cast<int>(this->usernick().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "JoinRoomReq.userNick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->usernick(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JoinRoomReq)
  return target;
}

size_t JoinRoomReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:JoinRoomReq)
  size_t total_size = 0;

  if (has_usernick()) {
    // required string userNick = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->usernick());
  }

  if (has_roomid()) {
    // required uint32 roomId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roomid());
  }

  return total_size;
}
size_t JoinRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JoinRoomReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string userNick = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->usernick());

    // required uint32 roomId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roomid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JoinRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:JoinRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const JoinRoomReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JoinRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:JoinRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:JoinRoomReq)
    MergeFrom(*source);
  }
}

void JoinRoomReq::MergeFrom(const JoinRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:JoinRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_usernick();
      usernick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.usernick_);
    }
    if (cached_has_bits & 0x00000002u) {
      roomid_ = from.roomid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void JoinRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:JoinRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoinRoomReq::CopyFrom(const JoinRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JoinRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinRoomReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void JoinRoomReq::Swap(JoinRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JoinRoomReq::InternalSwap(JoinRoomReq* other) {
  using std::swap;
  usernick_.Swap(&other->usernick_);
  swap(roomid_, other->roomid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JoinRoomReq::GetMetadata() const {
  protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JoinRoomRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JoinRoomRsp::kResultFieldNumber;
const int JoinRoomRsp::kReasonFieldNumber;
const int JoinRoomRsp::kLevelIdxFieldNumber;
const int JoinRoomRsp::kRoomIdFieldNumber;
const int JoinRoomRsp::kPlayerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JoinRoomRsp::JoinRoomRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsJoinRoomRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:JoinRoomRsp)
}
JoinRoomRsp::JoinRoomRsp(const JoinRoomRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&result_)) + sizeof(playerid_));
  // @@protoc_insertion_point(copy_constructor:JoinRoomRsp)
}

void JoinRoomRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&result_)) + sizeof(playerid_));
}

JoinRoomRsp::~JoinRoomRsp() {
  // @@protoc_insertion_point(destructor:JoinRoomRsp)
  SharedDtor();
}

void JoinRoomRsp::SharedDtor() {
}

void JoinRoomRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JoinRoomRsp::descriptor() {
  ::protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JoinRoomRsp& JoinRoomRsp::default_instance() {
  ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsJoinRoomRsp();
  return *internal_default_instance();
}

JoinRoomRsp* JoinRoomRsp::New(::google::protobuf::Arena* arena) const {
  JoinRoomRsp* n = new JoinRoomRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JoinRoomRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:JoinRoomRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&playerid_) -
        reinterpret_cast<char*>(&result_)) + sizeof(playerid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool JoinRoomRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:JoinRoomRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 reason = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_reason();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reason_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 levelIdx = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_levelidx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &levelidx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 roomId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_roomid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 playerId = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_playerid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:JoinRoomRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:JoinRoomRsp)
  return false;
#undef DO_
}

void JoinRoomRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:JoinRoomRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 result = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->result(), output);
  }

  // required uint32 reason = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->reason(), output);
  }

  // required uint32 levelIdx = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->levelidx(), output);
  }

  // required uint32 roomId = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->roomid(), output);
  }

  // required uint32 playerId = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->playerid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:JoinRoomRsp)
}

::google::protobuf::uint8* JoinRoomRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:JoinRoomRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 result = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->result(), target);
  }

  // required uint32 reason = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->reason(), target);
  }

  // required uint32 levelIdx = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->levelidx(), target);
  }

  // required uint32 roomId = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->roomid(), target);
  }

  // required uint32 playerId = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->playerid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:JoinRoomRsp)
  return target;
}

size_t JoinRoomRsp::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:JoinRoomRsp)
  size_t total_size = 0;

  if (has_result()) {
    // required uint32 result = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  if (has_reason()) {
    // required uint32 reason = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reason());
  }

  if (has_levelidx()) {
    // required uint32 levelIdx = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->levelidx());
  }

  if (has_roomid()) {
    // required uint32 roomId = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roomid());
  }

  if (has_playerid()) {
    // required uint32 playerId = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->playerid());
  }

  return total_size;
}
size_t JoinRoomRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:JoinRoomRsp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required uint32 result = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());

    // required uint32 reason = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reason());

    // required uint32 levelIdx = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->levelidx());

    // required uint32 roomId = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roomid());

    // required uint32 playerId = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->playerid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JoinRoomRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:JoinRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const JoinRoomRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JoinRoomRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:JoinRoomRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:JoinRoomRsp)
    MergeFrom(*source);
  }
}

void JoinRoomRsp::MergeFrom(const JoinRoomRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:JoinRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      reason_ = from.reason_;
    }
    if (cached_has_bits & 0x00000004u) {
      levelidx_ = from.levelidx_;
    }
    if (cached_has_bits & 0x00000008u) {
      roomid_ = from.roomid_;
    }
    if (cached_has_bits & 0x00000010u) {
      playerid_ = from.playerid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void JoinRoomRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:JoinRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoinRoomRsp::CopyFrom(const JoinRoomRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:JoinRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinRoomRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void JoinRoomRsp::Swap(JoinRoomRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JoinRoomRsp::InternalSwap(JoinRoomRsp* other) {
  using std::swap;
  swap(result_, other->result_);
  swap(reason_, other->reason_);
  swap(levelidx_, other->levelidx_);
  swap(roomid_, other->roomid_);
  swap(playerid_, other->playerid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JoinRoomRsp::GetMetadata() const {
  protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EnterLevelReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterLevelReq::kCampFieldNumber;
const int EnterLevelReq::kModelFieldNumber;
const int EnterLevelReq::kWeaponFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterLevelReq::EnterLevelReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsEnterLevelReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:EnterLevelReq)
}
EnterLevelReq::EnterLevelReq(const EnterLevelReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&camp_, &from.camp_,
    static_cast<size_t>(reinterpret_cast<char*>(&weapon_) -
    reinterpret_cast<char*>(&camp_)) + sizeof(weapon_));
  // @@protoc_insertion_point(copy_constructor:EnterLevelReq)
}

void EnterLevelReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&camp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&weapon_) -
      reinterpret_cast<char*>(&camp_)) + sizeof(weapon_));
}

EnterLevelReq::~EnterLevelReq() {
  // @@protoc_insertion_point(destructor:EnterLevelReq)
  SharedDtor();
}

void EnterLevelReq::SharedDtor() {
}

void EnterLevelReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterLevelReq::descriptor() {
  ::protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterLevelReq& EnterLevelReq::default_instance() {
  ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsEnterLevelReq();
  return *internal_default_instance();
}

EnterLevelReq* EnterLevelReq::New(::google::protobuf::Arena* arena) const {
  EnterLevelReq* n = new EnterLevelReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterLevelReq::Clear() {
// @@protoc_insertion_point(message_clear_start:EnterLevelReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&camp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&weapon_) -
        reinterpret_cast<char*>(&camp_)) + sizeof(weapon_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnterLevelReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EnterLevelReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 camp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_camp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &camp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 model = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_model();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &model_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 weapon = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_weapon();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &weapon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EnterLevelReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EnterLevelReq)
  return false;
#undef DO_
}

void EnterLevelReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EnterLevelReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 camp = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->camp(), output);
  }

  // required uint32 model = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->model(), output);
  }

  // required uint32 weapon = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->weapon(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:EnterLevelReq)
}

::google::protobuf::uint8* EnterLevelReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:EnterLevelReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 camp = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->camp(), target);
  }

  // required uint32 model = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->model(), target);
  }

  // required uint32 weapon = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->weapon(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EnterLevelReq)
  return target;
}

size_t EnterLevelReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:EnterLevelReq)
  size_t total_size = 0;

  if (has_camp()) {
    // required uint32 camp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->camp());
  }

  if (has_model()) {
    // required uint32 model = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->model());
  }

  if (has_weapon()) {
    // required uint32 weapon = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->weapon());
  }

  return total_size;
}
size_t EnterLevelReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EnterLevelReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint32 camp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->camp());

    // required uint32 model = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->model());

    // required uint32 weapon = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->weapon());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterLevelReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EnterLevelReq)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterLevelReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterLevelReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EnterLevelReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EnterLevelReq)
    MergeFrom(*source);
  }
}

void EnterLevelReq::MergeFrom(const EnterLevelReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EnterLevelReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      camp_ = from.camp_;
    }
    if (cached_has_bits & 0x00000002u) {
      model_ = from.model_;
    }
    if (cached_has_bits & 0x00000004u) {
      weapon_ = from.weapon_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EnterLevelReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EnterLevelReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterLevelReq::CopyFrom(const EnterLevelReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EnterLevelReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterLevelReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void EnterLevelReq::Swap(EnterLevelReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterLevelReq::InternalSwap(EnterLevelReq* other) {
  using std::swap;
  swap(camp_, other->camp_);
  swap(model_, other->model_);
  swap(weapon_, other->weapon_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterLevelReq::GetMetadata() const {
  protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EnterLevelRsp::InitAsDefaultInstance() {
  ::_EnterLevelRsp_default_instance_._instance.get_mutable()->scene_ = const_cast< ::SceneInfo*>(
      ::SceneInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterLevelRsp::kSceneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterLevelRsp::EnterLevelRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsEnterLevelRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:EnterLevelRsp)
}
EnterLevelRsp::EnterLevelRsp(const EnterLevelRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_scene()) {
    scene_ = new ::SceneInfo(*from.scene_);
  } else {
    scene_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:EnterLevelRsp)
}

void EnterLevelRsp::SharedCtor() {
  _cached_size_ = 0;
  scene_ = NULL;
}

EnterLevelRsp::~EnterLevelRsp() {
  // @@protoc_insertion_point(destructor:EnterLevelRsp)
  SharedDtor();
}

void EnterLevelRsp::SharedDtor() {
  if (this != internal_default_instance()) delete scene_;
}

void EnterLevelRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterLevelRsp::descriptor() {
  ::protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterLevelRsp& EnterLevelRsp::default_instance() {
  ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsEnterLevelRsp();
  return *internal_default_instance();
}

EnterLevelRsp* EnterLevelRsp::New(::google::protobuf::Arena* arena) const {
  EnterLevelRsp* n = new EnterLevelRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterLevelRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:EnterLevelRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(scene_ != NULL);
    scene_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnterLevelRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EnterLevelRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SceneInfo scene = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scene()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EnterLevelRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EnterLevelRsp)
  return false;
#undef DO_
}

void EnterLevelRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EnterLevelRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .SceneInfo scene = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->scene_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:EnterLevelRsp)
}

::google::protobuf::uint8* EnterLevelRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:EnterLevelRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .SceneInfo scene = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->scene_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EnterLevelRsp)
  return target;
}

size_t EnterLevelRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EnterLevelRsp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .SceneInfo scene = 2;
  if (has_scene()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->scene_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterLevelRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EnterLevelRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterLevelRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterLevelRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EnterLevelRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EnterLevelRsp)
    MergeFrom(*source);
  }
}

void EnterLevelRsp::MergeFrom(const EnterLevelRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EnterLevelRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_scene()) {
    mutable_scene()->::SceneInfo::MergeFrom(from.scene());
  }
}

void EnterLevelRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EnterLevelRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterLevelRsp::CopyFrom(const EnterLevelRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EnterLevelRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterLevelRsp::IsInitialized() const {
  if (has_scene()) {
    if (!this->scene_->IsInitialized()) return false;
  }
  return true;
}

void EnterLevelRsp::Swap(EnterLevelRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterLevelRsp::InternalSwap(EnterLevelRsp* other) {
  using std::swap;
  swap(scene_, other->scene_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterLevelRsp::GetMetadata() const {
  protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OnEnterRoomRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OnEnterRoomRsp::kPlayerNickFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OnEnterRoomRsp::OnEnterRoomRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsOnEnterRoomRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:OnEnterRoomRsp)
}
OnEnterRoomRsp::OnEnterRoomRsp(const OnEnterRoomRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playernick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_playernick()) {
    playernick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playernick_);
  }
  // @@protoc_insertion_point(copy_constructor:OnEnterRoomRsp)
}

void OnEnterRoomRsp::SharedCtor() {
  _cached_size_ = 0;
  playernick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

OnEnterRoomRsp::~OnEnterRoomRsp() {
  // @@protoc_insertion_point(destructor:OnEnterRoomRsp)
  SharedDtor();
}

void OnEnterRoomRsp::SharedDtor() {
  playernick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OnEnterRoomRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OnEnterRoomRsp::descriptor() {
  ::protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OnEnterRoomRsp& OnEnterRoomRsp::default_instance() {
  ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsOnEnterRoomRsp();
  return *internal_default_instance();
}

OnEnterRoomRsp* OnEnterRoomRsp::New(::google::protobuf::Arena* arena) const {
  OnEnterRoomRsp* n = new OnEnterRoomRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OnEnterRoomRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:OnEnterRoomRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!playernick_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*playernick_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OnEnterRoomRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OnEnterRoomRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string playerNick = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playernick()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->playernick().data(), static_cast<int>(this->playernick().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OnEnterRoomRsp.playerNick");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OnEnterRoomRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OnEnterRoomRsp)
  return false;
#undef DO_
}

void OnEnterRoomRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OnEnterRoomRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string playerNick = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playernick().data(), static_cast<int>(this->playernick().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OnEnterRoomRsp.playerNick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->playernick(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OnEnterRoomRsp)
}

::google::protobuf::uint8* OnEnterRoomRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OnEnterRoomRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string playerNick = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playernick().data(), static_cast<int>(this->playernick().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OnEnterRoomRsp.playerNick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->playernick(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OnEnterRoomRsp)
  return target;
}

size_t OnEnterRoomRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OnEnterRoomRsp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string playerNick = 2;
  if (has_playernick()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->playernick());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OnEnterRoomRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OnEnterRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const OnEnterRoomRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OnEnterRoomRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OnEnterRoomRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OnEnterRoomRsp)
    MergeFrom(*source);
  }
}

void OnEnterRoomRsp::MergeFrom(const OnEnterRoomRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OnEnterRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_playernick()) {
    set_has_playernick();
    playernick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playernick_);
  }
}

void OnEnterRoomRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OnEnterRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnEnterRoomRsp::CopyFrom(const OnEnterRoomRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OnEnterRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnEnterRoomRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void OnEnterRoomRsp::Swap(OnEnterRoomRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OnEnterRoomRsp::InternalSwap(OnEnterRoomRsp* other) {
  using std::swap;
  playernick_.Swap(&other->playernick_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OnEnterRoomRsp::GetMetadata() const {
  protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OnEnterLevelRsp::InitAsDefaultInstance() {
  ::_OnEnterLevelRsp_default_instance_._instance.get_mutable()->player_ = const_cast< ::Player_*>(
      ::Player_::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OnEnterLevelRsp::kPlayerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OnEnterLevelRsp::OnEnterLevelRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsOnEnterLevelRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:OnEnterLevelRsp)
}
OnEnterLevelRsp::OnEnterLevelRsp(const OnEnterLevelRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_player()) {
    player_ = new ::Player_(*from.player_);
  } else {
    player_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:OnEnterLevelRsp)
}

void OnEnterLevelRsp::SharedCtor() {
  _cached_size_ = 0;
  player_ = NULL;
}

OnEnterLevelRsp::~OnEnterLevelRsp() {
  // @@protoc_insertion_point(destructor:OnEnterLevelRsp)
  SharedDtor();
}

void OnEnterLevelRsp::SharedDtor() {
  if (this != internal_default_instance()) delete player_;
}

void OnEnterLevelRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OnEnterLevelRsp::descriptor() {
  ::protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OnEnterLevelRsp& OnEnterLevelRsp::default_instance() {
  ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsOnEnterLevelRsp();
  return *internal_default_instance();
}

OnEnterLevelRsp* OnEnterLevelRsp::New(::google::protobuf::Arena* arena) const {
  OnEnterLevelRsp* n = new OnEnterLevelRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OnEnterLevelRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:OnEnterLevelRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(player_ != NULL);
    player_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OnEnterLevelRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OnEnterLevelRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Player_ player = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OnEnterLevelRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OnEnterLevelRsp)
  return false;
#undef DO_
}

void OnEnterLevelRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OnEnterLevelRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Player_ player = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->player_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OnEnterLevelRsp)
}

::google::protobuf::uint8* OnEnterLevelRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OnEnterLevelRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Player_ player = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->player_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OnEnterLevelRsp)
  return target;
}

size_t OnEnterLevelRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OnEnterLevelRsp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .Player_ player = 2;
  if (has_player()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->player_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OnEnterLevelRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OnEnterLevelRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const OnEnterLevelRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OnEnterLevelRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OnEnterLevelRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OnEnterLevelRsp)
    MergeFrom(*source);
  }
}

void OnEnterLevelRsp::MergeFrom(const OnEnterLevelRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OnEnterLevelRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_player()) {
    mutable_player()->::Player_::MergeFrom(from.player());
  }
}

void OnEnterLevelRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OnEnterLevelRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnEnterLevelRsp::CopyFrom(const OnEnterLevelRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OnEnterLevelRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnEnterLevelRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_player()) {
    if (!this->player_->IsInitialized()) return false;
  }
  return true;
}

void OnEnterLevelRsp::Swap(OnEnterLevelRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OnEnterLevelRsp::InternalSwap(OnEnterLevelRsp* other) {
  using std::swap;
  swap(player_, other->player_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OnEnterLevelRsp::GetMetadata() const {
  protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vector2_::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector2_::kXFieldNumber;
const int Vector2_::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector2_::Vector2_()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsVector2_();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Vector2_)
}
Vector2_::Vector2_(const Vector2_& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:Vector2_)
}

void Vector2_::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

Vector2_::~Vector2_() {
  // @@protoc_insertion_point(destructor:Vector2_)
  SharedDtor();
}

void Vector2_::SharedDtor() {
}

void Vector2_::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vector2_::descriptor() {
  ::protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vector2_& Vector2_::default_instance() {
  ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsVector2_();
  return *internal_default_instance();
}

Vector2_* Vector2_::New(::google::protobuf::Arena* arena) const {
  Vector2_* n = new Vector2_;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vector2_::Clear() {
// @@protoc_insertion_point(message_clear_start:Vector2_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&x_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Vector2_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Vector2_)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Vector2_)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Vector2_)
  return false;
#undef DO_
}

void Vector2_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Vector2_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // required int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Vector2_)
}

::google::protobuf::uint8* Vector2_::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Vector2_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // required int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Vector2_)
  return target;
}

size_t Vector2_::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Vector2_)
  size_t total_size = 0;

  if (has_x()) {
    // required int32 x = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  if (has_y()) {
    // required int32 y = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  return total_size;
}
size_t Vector2_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Vector2_)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 x = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());

    // required int32 y = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Vector2_::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Vector2_)
  GOOGLE_DCHECK_NE(&from, this);
  const Vector2_* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vector2_>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Vector2_)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Vector2_)
    MergeFrom(*source);
  }
}

void Vector2_::MergeFrom(const Vector2_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Vector2_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Vector2_::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Vector2_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vector2_::CopyFrom(const Vector2_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Vector2_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vector2_::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Vector2_::Swap(Vector2_* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector2_::InternalSwap(Vector2_* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Vector2_::GetMetadata() const {
  protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vector3_::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector3_::kXFieldNumber;
const int Vector3_::kYFieldNumber;
const int Vector3_::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector3_::Vector3_()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsVector3_();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Vector3_)
}
Vector3_::Vector3_(const Vector3_& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:Vector3_)
}

void Vector3_::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

Vector3_::~Vector3_() {
  // @@protoc_insertion_point(destructor:Vector3_)
  SharedDtor();
}

void Vector3_::SharedDtor() {
}

void Vector3_::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vector3_::descriptor() {
  ::protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vector3_& Vector3_::default_instance() {
  ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsVector3_();
  return *internal_default_instance();
}

Vector3_* Vector3_::New(::google::protobuf::Arena* arena) const {
  Vector3_* n = new Vector3_;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vector3_::Clear() {
// @@protoc_insertion_point(message_clear_start:Vector3_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&z_) -
        reinterpret_cast<char*>(&x_)) + sizeof(z_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Vector3_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Vector3_)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Vector3_)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Vector3_)
  return false;
#undef DO_
}

void Vector3_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Vector3_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // required int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  // required int32 z = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Vector3_)
}

::google::protobuf::uint8* Vector3_::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Vector3_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // required int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  // required int32 z = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Vector3_)
  return target;
}

size_t Vector3_::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Vector3_)
  size_t total_size = 0;

  if (has_x()) {
    // required int32 x = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  if (has_y()) {
    // required int32 y = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  if (has_z()) {
    // required int32 z = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->z());
  }

  return total_size;
}
size_t Vector3_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Vector3_)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 x = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());

    // required int32 y = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());

    // required int32 z = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->z());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Vector3_::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Vector3_)
  GOOGLE_DCHECK_NE(&from, this);
  const Vector3_* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vector3_>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Vector3_)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Vector3_)
    MergeFrom(*source);
  }
}

void Vector3_::MergeFrom(const Vector3_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Vector3_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      z_ = from.z_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Vector3_::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Vector3_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vector3_::CopyFrom(const Vector3_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Vector3_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vector3_::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void Vector3_::Swap(Vector3_* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector3_::InternalSwap(Vector3_* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Vector3_::GetMetadata() const {
  protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Quaternion_::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Quaternion_::kXFieldNumber;
const int Quaternion_::kYFieldNumber;
const int Quaternion_::kZFieldNumber;
const int Quaternion_::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Quaternion_::Quaternion_()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsQuaternion_();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Quaternion_)
}
Quaternion_::Quaternion_(const Quaternion_& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&w_) -
    reinterpret_cast<char*>(&x_)) + sizeof(w_));
  // @@protoc_insertion_point(copy_constructor:Quaternion_)
}

void Quaternion_::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&w_) -
      reinterpret_cast<char*>(&x_)) + sizeof(w_));
}

Quaternion_::~Quaternion_() {
  // @@protoc_insertion_point(destructor:Quaternion_)
  SharedDtor();
}

void Quaternion_::SharedDtor() {
}

void Quaternion_::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Quaternion_::descriptor() {
  ::protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Quaternion_& Quaternion_::default_instance() {
  ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsQuaternion_();
  return *internal_default_instance();
}

Quaternion_* Quaternion_::New(::google::protobuf::Arena* arena) const {
  Quaternion_* n = new Quaternion_;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Quaternion_::Clear() {
// @@protoc_insertion_point(message_clear_start:Quaternion_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&w_) -
        reinterpret_cast<char*>(&x_)) + sizeof(w_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Quaternion_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Quaternion_)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 w = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_w();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &w_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Quaternion_)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Quaternion_)
  return false;
#undef DO_
}

void Quaternion_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Quaternion_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // required int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  // required int32 z = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->z(), output);
  }

  // required int32 w = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->w(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Quaternion_)
}

::google::protobuf::uint8* Quaternion_::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Quaternion_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // required int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  // required int32 z = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->z(), target);
  }

  // required int32 w = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->w(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Quaternion_)
  return target;
}

size_t Quaternion_::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Quaternion_)
  size_t total_size = 0;

  if (has_x()) {
    // required int32 x = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  if (has_y()) {
    // required int32 y = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  if (has_z()) {
    // required int32 z = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->z());
  }

  if (has_w()) {
    // required int32 w = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->w());
  }

  return total_size;
}
size_t Quaternion_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Quaternion_)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 x = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());

    // required int32 y = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());

    // required int32 z = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->z());

    // required int32 w = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->w());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Quaternion_::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Quaternion_)
  GOOGLE_DCHECK_NE(&from, this);
  const Quaternion_* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Quaternion_>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Quaternion_)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Quaternion_)
    MergeFrom(*source);
  }
}

void Quaternion_::MergeFrom(const Quaternion_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Quaternion_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      z_ = from.z_;
    }
    if (cached_has_bits & 0x00000008u) {
      w_ = from.w_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Quaternion_::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Quaternion_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Quaternion_::CopyFrom(const Quaternion_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Quaternion_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Quaternion_::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void Quaternion_::Swap(Quaternion_* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Quaternion_::InternalSwap(Quaternion_* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(w_, other->w_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Quaternion_::GetMetadata() const {
  protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SceneInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneInfo::kItemsFieldNumber;
const int SceneInfo::kPlayersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneInfo::SceneInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsSceneInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SceneInfo)
}
SceneInfo::SceneInfo(const SceneInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      items_(from.items_),
      players_(from.players_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SceneInfo)
}

void SceneInfo::SharedCtor() {
  _cached_size_ = 0;
}

SceneInfo::~SceneInfo() {
  // @@protoc_insertion_point(destructor:SceneInfo)
  SharedDtor();
}

void SceneInfo::SharedDtor() {
}

void SceneInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneInfo::descriptor() {
  ::protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneInfo& SceneInfo::default_instance() {
  ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsSceneInfo();
  return *internal_default_instance();
}

SceneInfo* SceneInfo::New(::google::protobuf::Arena* arena) const {
  SceneInfo* n = new SceneInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:SceneInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  players_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SceneInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SceneInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .SceneItem_ items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Player_ players = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_players()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SceneInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SceneInfo)
  return false;
#undef DO_
}

void SceneInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SceneInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .SceneItem_ items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(static_cast<int>(i)), output);
  }

  // repeated .Player_ players = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->players(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SceneInfo)
}

::google::protobuf::uint8* SceneInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SceneInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .SceneItem_ items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->items(static_cast<int>(i)), deterministic, target);
  }

  // repeated .Player_ players = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->players(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SceneInfo)
  return target;
}

size_t SceneInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SceneInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .SceneItem_ items = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->items(static_cast<int>(i)));
    }
  }

  // repeated .Player_ players = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->players_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->players(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SceneInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SceneInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SceneInfo)
    MergeFrom(*source);
  }
}

void SceneInfo::MergeFrom(const SceneInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SceneInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  players_.MergeFrom(from.players_);
}

void SceneInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SceneInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneInfo::CopyFrom(const SceneInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SceneInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneInfo::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->items())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->players())) return false;
  return true;
}

void SceneInfo::Swap(SceneInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneInfo::InternalSwap(SceneInfo* other) {
  using std::swap;
  items_.InternalSwap(&other->items_);
  players_.InternalSwap(&other->players_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneInfo::GetMetadata() const {
  protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SceneItem_::InitAsDefaultInstance() {
  ::_SceneItem__default_instance_._instance.get_mutable()->pos_ = const_cast< ::Vector3_*>(
      ::Vector3_::internal_default_instance());
  ::_SceneItem__default_instance_._instance.get_mutable()->rotation_ = const_cast< ::Quaternion_*>(
      ::Quaternion_::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneItem_::kModelFieldNumber;
const int SceneItem_::kPosFieldNumber;
const int SceneItem_::kRotationFieldNumber;
const int SceneItem_::kFrameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneItem_::SceneItem_()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsSceneItem_();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SceneItem_)
}
SceneItem_::SceneItem_(const SceneItem_& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_model()) {
    model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_);
  }
  if (from.has_pos()) {
    pos_ = new ::Vector3_(*from.pos_);
  } else {
    pos_ = NULL;
  }
  if (from.has_rotation()) {
    rotation_ = new ::Quaternion_(*from.rotation_);
  } else {
    rotation_ = NULL;
  }
  frame_ = from.frame_;
  // @@protoc_insertion_point(copy_constructor:SceneItem_)
}

void SceneItem_::SharedCtor() {
  _cached_size_ = 0;
  model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&frame_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(frame_));
}

SceneItem_::~SceneItem_() {
  // @@protoc_insertion_point(destructor:SceneItem_)
  SharedDtor();
}

void SceneItem_::SharedDtor() {
  model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete pos_;
  if (this != internal_default_instance()) delete rotation_;
}

void SceneItem_::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneItem_::descriptor() {
  ::protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneItem_& SceneItem_::default_instance() {
  ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsSceneItem_();
  return *internal_default_instance();
}

SceneItem_* SceneItem_::New(::google::protobuf::Arena* arena) const {
  SceneItem_* n = new SceneItem_;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneItem_::Clear() {
// @@protoc_insertion_point(message_clear_start:SceneItem_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!model_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*model_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(pos_ != NULL);
      pos_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(rotation_ != NULL);
      rotation_->Clear();
    }
  }
  frame_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SceneItem_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SceneItem_)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string model = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_model()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->model().data(), static_cast<int>(this->model().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "SceneItem_.model");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .Vector3_ pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .Quaternion_ rotation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 frame = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_frame();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frame_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SceneItem_)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SceneItem_)
  return false;
#undef DO_
}

void SceneItem_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SceneItem_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string model = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->model().data(), static_cast<int>(this->model().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SceneItem_.model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->model(), output);
  }

  // required .Vector3_ pos = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->pos_, output);
  }

  // required .Quaternion_ rotation = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->rotation_, output);
  }

  // required int32 frame = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->frame(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SceneItem_)
}

::google::protobuf::uint8* SceneItem_::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SceneItem_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string model = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->model().data(), static_cast<int>(this->model().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "SceneItem_.model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->model(), target);
  }

  // required .Vector3_ pos = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->pos_, deterministic, target);
  }

  // required .Quaternion_ rotation = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->rotation_, deterministic, target);
  }

  // required int32 frame = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->frame(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SceneItem_)
  return target;
}

size_t SceneItem_::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:SceneItem_)
  size_t total_size = 0;

  if (has_model()) {
    // required string model = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->model());
  }

  if (has_pos()) {
    // required .Vector3_ pos = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pos_);
  }

  if (has_rotation()) {
    // required .Quaternion_ rotation = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->rotation_);
  }

  if (has_frame()) {
    // required int32 frame = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->frame());
  }

  return total_size;
}
size_t SceneItem_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SceneItem_)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string model = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->model());

    // required .Vector3_ pos = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pos_);

    // required .Quaternion_ rotation = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->rotation_);

    // required int32 frame = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->frame());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneItem_::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SceneItem_)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneItem_* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneItem_>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SceneItem_)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SceneItem_)
    MergeFrom(*source);
  }
}

void SceneItem_::MergeFrom(const SceneItem_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SceneItem_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_model();
      model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_pos()->::Vector3_::MergeFrom(from.pos());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_rotation()->::Quaternion_::MergeFrom(from.rotation());
    }
    if (cached_has_bits & 0x00000008u) {
      frame_ = from.frame_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SceneItem_::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SceneItem_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneItem_::CopyFrom(const SceneItem_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SceneItem_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneItem_::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  if (has_pos()) {
    if (!this->pos_->IsInitialized()) return false;
  }
  if (has_rotation()) {
    if (!this->rotation_->IsInitialized()) return false;
  }
  return true;
}

void SceneItem_::Swap(SceneItem_* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneItem_::InternalSwap(SceneItem_* other) {
  using std::swap;
  model_.Swap(&other->model_);
  swap(pos_, other->pos_);
  swap(rotation_, other->rotation_);
  swap(frame_, other->frame_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneItem_::GetMetadata() const {
  protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Player_::InitAsDefaultInstance() {
  ::_Player__default_instance_._instance.get_mutable()->pos_ = const_cast< ::Vector3_*>(
      ::Vector3_::internal_default_instance());
  ::_Player__default_instance_._instance.get_mutable()->rotation_ = const_cast< ::Quaternion_*>(
      ::Quaternion_::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Player_::kIdFieldNumber;
const int Player_::kNameFieldNumber;
const int Player_::kWeapon1FieldNumber;
const int Player_::kWeapon2FieldNumber;
const int Player_::kWeaponFieldNumber;
const int Player_::kWeaponPosFieldNumber;
const int Player_::kPosFieldNumber;
const int Player_::kRotationFieldNumber;
const int Player_::kModelFieldNumber;
const int Player_::kAniSourceFieldNumber;
const int Player_::kFrameFieldNumber;
const int Player_::kHpMaxFieldNumber;
const int Player_::kHpFieldNumber;
const int Player_::kAngryFieldNumber;
const int Player_::kCampFieldNumber;
const int Player_::kSpawnPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Player_::Player_()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsPlayer_();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Player_)
}
Player_::Player_(const Player_& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_pos()) {
    pos_ = new ::Vector3_(*from.pos_);
  } else {
    pos_ = NULL;
  }
  if (from.has_rotation()) {
    rotation_ = new ::Quaternion_(*from.rotation_);
  } else {
    rotation_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&spawnpoint_) -
    reinterpret_cast<char*>(&id_)) + sizeof(spawnpoint_));
  // @@protoc_insertion_point(copy_constructor:Player_)
}

void Player_::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&spawnpoint_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(spawnpoint_));
}

Player_::~Player_() {
  // @@protoc_insertion_point(destructor:Player_)
  SharedDtor();
}

void Player_::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete pos_;
  if (this != internal_default_instance()) delete rotation_;
}

void Player_::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Player_::descriptor() {
  ::protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Player_& Player_::default_instance() {
  ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsPlayer_();
  return *internal_default_instance();
}

Player_* Player_::New(::google::protobuf::Arena* arena) const {
  Player_* n = new Player_;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Player_::Clear() {
// @@protoc_insertion_point(message_clear_start:Player_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(pos_ != NULL);
      pos_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(rotation_ != NULL);
      rotation_->Clear();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&weapon_pos_) -
        reinterpret_cast<char*>(&id_)) + sizeof(weapon_pos_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&model_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&spawnpoint_) -
        reinterpret_cast<char*>(&model_)) + sizeof(spawnpoint_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Player_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Player_)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Player_.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 weapon1 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_weapon1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &weapon1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 weapon2 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_weapon2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &weapon2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 weapon = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_weapon();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &weapon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 weapon_pos = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_weapon_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &weapon_pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .Vector3_ pos = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .Quaternion_ rotation = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 model = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_model();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &model_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 aniSource = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_anisource();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &anisource_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 frame = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_frame();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frame_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 hpMax = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_hpmax();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hpmax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 hp = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_hp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 angry = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_angry();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &angry_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 Camp = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_camp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &camp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 SpawnPoint = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_spawnpoint();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &spawnpoint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Player_)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Player_)
  return false;
#undef DO_
}

void Player_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Player_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Player_.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // required uint32 weapon1 = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->weapon1(), output);
  }

  // required uint32 weapon2 = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->weapon2(), output);
  }

  // required uint32 weapon = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->weapon(), output);
  }

  // required uint32 weapon_pos = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->weapon_pos(), output);
  }

  // required .Vector3_ pos = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->pos_, output);
  }

  // required .Quaternion_ rotation = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->rotation_, output);
  }

  // required int32 model = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->model(), output);
  }

  // required int32 aniSource = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->anisource(), output);
  }

  // required int32 frame = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->frame(), output);
  }

  // required int32 hpMax = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->hpmax(), output);
  }

  // required int32 hp = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->hp(), output);
  }

  // required int32 angry = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->angry(), output);
  }

  // required int32 Camp = 15;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->camp(), output);
  }

  // required int32 SpawnPoint = 16;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->spawnpoint(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Player_)
}

::google::protobuf::uint8* Player_::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Player_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Player_.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // required uint32 weapon1 = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->weapon1(), target);
  }

  // required uint32 weapon2 = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->weapon2(), target);
  }

  // required uint32 weapon = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->weapon(), target);
  }

  // required uint32 weapon_pos = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->weapon_pos(), target);
  }

  // required .Vector3_ pos = 7;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->pos_, deterministic, target);
  }

  // required .Quaternion_ rotation = 8;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->rotation_, deterministic, target);
  }

  // required int32 model = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->model(), target);
  }

  // required int32 aniSource = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->anisource(), target);
  }

  // required int32 frame = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->frame(), target);
  }

  // required int32 hpMax = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->hpmax(), target);
  }

  // required int32 hp = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->hp(), target);
  }

  // required int32 angry = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->angry(), target);
  }

  // required int32 Camp = 15;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->camp(), target);
  }

  // required int32 SpawnPoint = 16;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->spawnpoint(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Player_)
  return target;
}

size_t Player_::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Player_)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_pos()) {
    // required .Vector3_ pos = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pos_);
  }

  if (has_rotation()) {
    // required .Quaternion_ rotation = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->rotation_);
  }

  if (has_id()) {
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  if (has_weapon1()) {
    // required uint32 weapon1 = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->weapon1());
  }

  if (has_weapon2()) {
    // required uint32 weapon2 = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->weapon2());
  }

  if (has_weapon()) {
    // required uint32 weapon = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->weapon());
  }

  if (has_weapon_pos()) {
    // required uint32 weapon_pos = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->weapon_pos());
  }

  if (has_model()) {
    // required int32 model = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->model());
  }

  if (has_anisource()) {
    // required int32 aniSource = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->anisource());
  }

  if (has_frame()) {
    // required int32 frame = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->frame());
  }

  if (has_hpmax()) {
    // required int32 hpMax = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hpmax());
  }

  if (has_hp()) {
    // required int32 hp = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hp());
  }

  if (has_angry()) {
    // required int32 angry = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->angry());
  }

  if (has_camp()) {
    // required int32 Camp = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->camp());
  }

  if (has_spawnpoint()) {
    // required int32 SpawnPoint = 16;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->spawnpoint());
  }

  return total_size;
}
size_t Player_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Player_)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000ffff) ^ 0x0000ffff) == 0) {  // All required fields are present.
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required .Vector3_ pos = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pos_);

    // required .Quaternion_ rotation = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->rotation_);

    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());

    // required uint32 weapon1 = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->weapon1());

    // required uint32 weapon2 = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->weapon2());

    // required uint32 weapon = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->weapon());

    // required uint32 weapon_pos = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->weapon_pos());

    // required int32 model = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->model());

    // required int32 aniSource = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->anisource());

    // required int32 frame = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->frame());

    // required int32 hpMax = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hpmax());

    // required int32 hp = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hp());

    // required int32 angry = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->angry());

    // required int32 Camp = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->camp());

    // required int32 SpawnPoint = 16;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->spawnpoint());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Player_::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Player_)
  GOOGLE_DCHECK_NE(&from, this);
  const Player_* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Player_>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Player_)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Player_)
    MergeFrom(*source);
  }
}

void Player_::MergeFrom(const Player_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Player_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_pos()->::Vector3_::MergeFrom(from.pos());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_rotation()->::Quaternion_::MergeFrom(from.rotation());
    }
    if (cached_has_bits & 0x00000008u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000010u) {
      weapon1_ = from.weapon1_;
    }
    if (cached_has_bits & 0x00000020u) {
      weapon2_ = from.weapon2_;
    }
    if (cached_has_bits & 0x00000040u) {
      weapon_ = from.weapon_;
    }
    if (cached_has_bits & 0x00000080u) {
      weapon_pos_ = from.weapon_pos_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      model_ = from.model_;
    }
    if (cached_has_bits & 0x00000200u) {
      anisource_ = from.anisource_;
    }
    if (cached_has_bits & 0x00000400u) {
      frame_ = from.frame_;
    }
    if (cached_has_bits & 0x00000800u) {
      hpmax_ = from.hpmax_;
    }
    if (cached_has_bits & 0x00001000u) {
      hp_ = from.hp_;
    }
    if (cached_has_bits & 0x00002000u) {
      angry_ = from.angry_;
    }
    if (cached_has_bits & 0x00004000u) {
      camp_ = from.camp_;
    }
    if (cached_has_bits & 0x00008000u) {
      spawnpoint_ = from.spawnpoint_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Player_::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Player_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Player_::CopyFrom(const Player_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Player_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Player_::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000ffff) != 0x0000ffff) return false;
  if (has_pos()) {
    if (!this->pos_->IsInitialized()) return false;
  }
  if (has_rotation()) {
    if (!this->rotation_->IsInitialized()) return false;
  }
  return true;
}

void Player_::Swap(Player_* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Player_::InternalSwap(Player_* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(pos_, other->pos_);
  swap(rotation_, other->rotation_);
  swap(id_, other->id_);
  swap(weapon1_, other->weapon1_);
  swap(weapon2_, other->weapon2_);
  swap(weapon_, other->weapon_);
  swap(weapon_pos_, other->weapon_pos_);
  swap(model_, other->model_);
  swap(anisource_, other->anisource_);
  swap(frame_, other->frame_);
  swap(hpmax_, other->hpmax_);
  swap(hp_, other->hp_);
  swap(angry_, other->angry_);
  swap(camp_, other->camp_);
  swap(spawnpoint_, other->spawnpoint_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Player_::GetMetadata() const {
  protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InputReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InputReq::kInputFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InputReq::InputReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsInputReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:InputReq)
}
InputReq::InputReq(const InputReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      input_(from.input_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:InputReq)
}

void InputReq::SharedCtor() {
  _cached_size_ = 0;
}

InputReq::~InputReq() {
  // @@protoc_insertion_point(destructor:InputReq)
  SharedDtor();
}

void InputReq::SharedDtor() {
}

void InputReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InputReq::descriptor() {
  ::protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InputReq& InputReq::default_instance() {
  ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsInputReq();
  return *internal_default_instance();
}

InputReq* InputReq::New(::google::protobuf::Arena* arena) const {
  InputReq* n = new InputReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InputReq::Clear() {
// @@protoc_insertion_point(message_clear_start:InputReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InputReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:InputReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Input_ input = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:InputReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:InputReq)
  return false;
#undef DO_
}

void InputReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:InputReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Input_ input = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->input_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->input(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:InputReq)
}

::google::protobuf::uint8* InputReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:InputReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Input_ input = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->input_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->input(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InputReq)
  return target;
}

size_t InputReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:InputReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .Input_ input = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->input_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->input(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InputReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:InputReq)
  GOOGLE_DCHECK_NE(&from, this);
  const InputReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InputReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:InputReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:InputReq)
    MergeFrom(*source);
  }
}

void InputReq::MergeFrom(const InputReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:InputReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  input_.MergeFrom(from.input_);
}

void InputReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:InputReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputReq::CopyFrom(const InputReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:InputReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputReq::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->input())) return false;
  return true;
}

void InputReq::Swap(InputReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InputReq::InternalSwap(InputReq* other) {
  using std::swap;
  input_.InternalSwap(&other->input_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InputReq::GetMetadata() const {
  protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Input_::InitAsDefaultInstance() {
  ::_Input__default_instance_._instance.get_mutable()->joystick_ = const_cast< ::Vector2_*>(
      ::Vector2_::internal_default_instance());
  ::_Input__default_instance_._instance.get_mutable()->mousedelta_ = const_cast< ::Vector2_*>(
      ::Vector2_::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Input_::kPlayerIdFieldNumber;
const int Input_::kJoyStickFieldNumber;
const int Input_::kMouseDeltaFieldNumber;
const int Input_::kWFieldNumber;
const int Input_::kSFieldNumber;
const int Input_::kAFieldNumber;
const int Input_::kDFieldNumber;
const int Input_::kJumpFieldNumber;
const int Input_::kBreakFieldNumber;
const int Input_::kAttackFieldNumber;
const int Input_::kEFieldNumber;
const int Input_::kRFieldNumber;
const int Input_::kYFieldNumber;
const int Input_::kSpaceFieldNumber;
const int Input_::kCFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Input_::Input_()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsInput_();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Input_)
}
Input_::Input_(const Input_& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  w_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_w()) {
    w_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.w_);
  }
  s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_s()) {
    s_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.s_);
  }
  a_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_a()) {
    a_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.a_);
  }
  d_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_d()) {
    d_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.d_);
  }
  jump_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_jump()) {
    jump_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jump_);
  }
  break__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_break_()) {
    break__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.break__);
  }
  attack_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attack()) {
    attack_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attack_);
  }
  e_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_e()) {
    e_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.e_);
  }
  r_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_r()) {
    r_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.r_);
  }
  y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_y()) {
    y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_);
  }
  space_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_space()) {
    space_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.space_);
  }
  c_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_c()) {
    c_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.c_);
  }
  if (from.has_joystick()) {
    joystick_ = new ::Vector2_(*from.joystick_);
  } else {
    joystick_ = NULL;
  }
  if (from.has_mousedelta()) {
    mousedelta_ = new ::Vector2_(*from.mousedelta_);
  } else {
    mousedelta_ = NULL;
  }
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:Input_)
}

void Input_::SharedCtor() {
  _cached_size_ = 0;
  w_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  a_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  d_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jump_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  break__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attack_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  e_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  r_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  space_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  c_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&joystick_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&joystick_)) + sizeof(playerid_));
}

Input_::~Input_() {
  // @@protoc_insertion_point(destructor:Input_)
  SharedDtor();
}

void Input_::SharedDtor() {
  w_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  s_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  a_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  d_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jump_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  break__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attack_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  e_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  r_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  space_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  c_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete joystick_;
  if (this != internal_default_instance()) delete mousedelta_;
}

void Input_::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Input_::descriptor() {
  ::protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Input_& Input_::default_instance() {
  ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsInput_();
  return *internal_default_instance();
}

Input_* Input_::New(::google::protobuf::Arena* arena) const {
  Input_* n = new Input_;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Input_::Clear() {
// @@protoc_insertion_point(message_clear_start:Input_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!w_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*w_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!s_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*s_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!a_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*a_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!d_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*d_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!jump_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*jump_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(!break__.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*break__.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(!attack_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*attack_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(!e_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*e_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 16128u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(!r_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*r_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(!y_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*y_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(!space_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*space_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(!c_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*c_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(joystick_ != NULL);
      joystick_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(mousedelta_ != NULL);
      mousedelta_->Clear();
    }
  }
  playerid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Input_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Input_)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 playerId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_playerid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .Vector2_ JoyStick = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_joystick()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .Vector2_ MouseDelta = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mousedelta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes w = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_w()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes s = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_s()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes a = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_a()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes d = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_d()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes jump = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_jump()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes break = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_break_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes attack = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attack()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes e = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_e()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes r = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_r()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes y = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_y()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes space = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_space()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes c = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_c()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Input_)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Input_)
  return false;
#undef DO_
}

void Input_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Input_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 playerId = 1;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->playerid(), output);
  }

  // required .Vector2_ JoyStick = 2;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->joystick_, output);
  }

  // required .Vector2_ MouseDelta = 3;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->mousedelta_, output);
  }

  // required bytes w = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->w(), output);
  }

  // required bytes s = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->s(), output);
  }

  // required bytes a = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->a(), output);
  }

  // required bytes d = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->d(), output);
  }

  // required bytes jump = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->jump(), output);
  }

  // required bytes break = 9;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->break_(), output);
  }

  // required bytes attack = 10;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->attack(), output);
  }

  // required bytes e = 11;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->e(), output);
  }

  // required bytes r = 12;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->r(), output);
  }

  // required bytes y = 13;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      13, this->y(), output);
  }

  // required bytes space = 14;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      14, this->space(), output);
  }

  // required bytes c = 15;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      15, this->c(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Input_)
}

::google::protobuf::uint8* Input_::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Input_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 playerId = 1;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->playerid(), target);
  }

  // required .Vector2_ JoyStick = 2;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->joystick_, deterministic, target);
  }

  // required .Vector2_ MouseDelta = 3;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->mousedelta_, deterministic, target);
  }

  // required bytes w = 4;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->w(), target);
  }

  // required bytes s = 5;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->s(), target);
  }

  // required bytes a = 6;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->a(), target);
  }

  // required bytes d = 7;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->d(), target);
  }

  // required bytes jump = 8;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->jump(), target);
  }

  // required bytes break = 9;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->break_(), target);
  }

  // required bytes attack = 10;
  if (cached_has_bits & 0x00000040u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->attack(), target);
  }

  // required bytes e = 11;
  if (cached_has_bits & 0x00000080u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->e(), target);
  }

  // required bytes r = 12;
  if (cached_has_bits & 0x00000100u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->r(), target);
  }

  // required bytes y = 13;
  if (cached_has_bits & 0x00000200u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        13, this->y(), target);
  }

  // required bytes space = 14;
  if (cached_has_bits & 0x00000400u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        14, this->space(), target);
  }

  // required bytes c = 15;
  if (cached_has_bits & 0x00000800u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        15, this->c(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Input_)
  return target;
}

size_t Input_::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Input_)
  size_t total_size = 0;

  if (has_w()) {
    // required bytes w = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->w());
  }

  if (has_s()) {
    // required bytes s = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->s());
  }

  if (has_a()) {
    // required bytes a = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->a());
  }

  if (has_d()) {
    // required bytes d = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->d());
  }

  if (has_jump()) {
    // required bytes jump = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->jump());
  }

  if (has_break_()) {
    // required bytes break = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->break_());
  }

  if (has_attack()) {
    // required bytes attack = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attack());
  }

  if (has_e()) {
    // required bytes e = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->e());
  }

  if (has_r()) {
    // required bytes r = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->r());
  }

  if (has_y()) {
    // required bytes y = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->y());
  }

  if (has_space()) {
    // required bytes space = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->space());
  }

  if (has_c()) {
    // required bytes c = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->c());
  }

  if (has_joystick()) {
    // required .Vector2_ JoyStick = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->joystick_);
  }

  if (has_mousedelta()) {
    // required .Vector2_ MouseDelta = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->mousedelta_);
  }

  if (has_playerid()) {
    // required uint32 playerId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->playerid());
  }

  return total_size;
}
size_t Input_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Input_)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00007fff) ^ 0x00007fff) == 0) {  // All required fields are present.
    // required bytes w = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->w());

    // required bytes s = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->s());

    // required bytes a = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->a());

    // required bytes d = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->d());

    // required bytes jump = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->jump());

    // required bytes break = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->break_());

    // required bytes attack = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attack());

    // required bytes e = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->e());

    // required bytes r = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->r());

    // required bytes y = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->y());

    // required bytes space = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->space());

    // required bytes c = 15;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->c());

    // required .Vector2_ JoyStick = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->joystick_);

    // required .Vector2_ MouseDelta = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->mousedelta_);

    // required uint32 playerId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->playerid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Input_::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Input_)
  GOOGLE_DCHECK_NE(&from, this);
  const Input_* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Input_>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Input_)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Input_)
    MergeFrom(*source);
  }
}

void Input_::MergeFrom(const Input_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Input_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_w();
      w_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.w_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_s();
      s_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.s_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_a();
      a_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.a_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_d();
      d_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.d_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_jump();
      jump_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jump_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_break_();
      break__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.break__);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_attack();
      attack_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attack_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_e();
      e_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.e_);
    }
  }
  if (cached_has_bits & 32512u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_r();
      r_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.r_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has_y();
      y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_);
    }
    if (cached_has_bits & 0x00000400u) {
      set_has_space();
      space_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.space_);
    }
    if (cached_has_bits & 0x00000800u) {
      set_has_c();
      c_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.c_);
    }
    if (cached_has_bits & 0x00001000u) {
      mutable_joystick()->::Vector2_::MergeFrom(from.joystick());
    }
    if (cached_has_bits & 0x00002000u) {
      mutable_mousedelta()->::Vector2_::MergeFrom(from.mousedelta());
    }
    if (cached_has_bits & 0x00004000u) {
      playerid_ = from.playerid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Input_::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Input_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Input_::CopyFrom(const Input_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Input_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Input_::IsInitialized() const {
  if ((_has_bits_[0] & 0x00007fff) != 0x00007fff) return false;
  if (has_joystick()) {
    if (!this->joystick_->IsInitialized()) return false;
  }
  if (has_mousedelta()) {
    if (!this->mousedelta_->IsInitialized()) return false;
  }
  return true;
}

void Input_::Swap(Input_* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Input_::InternalSwap(Input_* other) {
  using std::swap;
  w_.Swap(&other->w_);
  s_.Swap(&other->s_);
  a_.Swap(&other->a_);
  d_.Swap(&other->d_);
  jump_.Swap(&other->jump_);
  break__.Swap(&other->break__);
  attack_.Swap(&other->attack_);
  e_.Swap(&other->e_);
  r_.Swap(&other->r_);
  y_.Swap(&other->y_);
  space_.Swap(&other->space_);
  c_.Swap(&other->c_);
  swap(joystick_, other->joystick_);
  swap(mousedelta_, other->mousedelta_);
  swap(playerid_, other->playerid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Input_::GetMetadata() const {
  protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KeyFrame::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyFrame::kFrameIndexFieldNumber;
const int KeyFrame::kInputsFieldNumber;
const int KeyFrame::kPlayersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyFrame::KeyFrame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsKeyFrame();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:KeyFrame)
}
KeyFrame::KeyFrame(const KeyFrame& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      inputs_(from.inputs_),
      players_(from.players_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  frameindex_ = from.frameindex_;
  // @@protoc_insertion_point(copy_constructor:KeyFrame)
}

void KeyFrame::SharedCtor() {
  _cached_size_ = 0;
  frameindex_ = 0u;
}

KeyFrame::~KeyFrame() {
  // @@protoc_insertion_point(destructor:KeyFrame)
  SharedDtor();
}

void KeyFrame::SharedDtor() {
}

void KeyFrame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KeyFrame::descriptor() {
  ::protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeyFrame& KeyFrame::default_instance() {
  ::protobuf_protosrc_2fprotocol_2eproto::InitDefaultsKeyFrame();
  return *internal_default_instance();
}

KeyFrame* KeyFrame::New(::google::protobuf::Arena* arena) const {
  KeyFrame* n = new KeyFrame;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KeyFrame::Clear() {
// @@protoc_insertion_point(message_clear_start:KeyFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  inputs_.Clear();
  players_.Clear();
  frameindex_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool KeyFrame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KeyFrame)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 frameIndex = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_frameindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &frameindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Input_ Inputs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_inputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Player_ Players = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_players()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KeyFrame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KeyFrame)
  return false;
#undef DO_
}

void KeyFrame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KeyFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 frameIndex = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->frameindex(), output);
  }

  // repeated .Input_ Inputs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inputs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->inputs(static_cast<int>(i)), output);
  }

  // repeated .Player_ Players = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->players(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:KeyFrame)
}

::google::protobuf::uint8* KeyFrame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KeyFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 frameIndex = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->frameindex(), target);
  }

  // repeated .Input_ Inputs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inputs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->inputs(static_cast<int>(i)), deterministic, target);
  }

  // repeated .Player_ Players = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->players(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KeyFrame)
  return target;
}

size_t KeyFrame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KeyFrame)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 frameIndex = 1;
  if (has_frameindex()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->frameindex());
  }
  // repeated .Input_ Inputs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->inputs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->inputs(static_cast<int>(i)));
    }
  }

  // repeated .Player_ Players = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->players_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->players(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KeyFrame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KeyFrame)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyFrame* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyFrame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KeyFrame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KeyFrame)
    MergeFrom(*source);
  }
}

void KeyFrame::MergeFrom(const KeyFrame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KeyFrame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  inputs_.MergeFrom(from.inputs_);
  players_.MergeFrom(from.players_);
  if (from.has_frameindex()) {
    set_frameindex(from.frameindex());
  }
}

void KeyFrame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KeyFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyFrame::CopyFrom(const KeyFrame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KeyFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyFrame::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->inputs())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->players())) return false;
  return true;
}

void KeyFrame::Swap(KeyFrame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyFrame::InternalSwap(KeyFrame* other) {
  using std::swap;
  inputs_.InternalSwap(&other->inputs_);
  players_.InternalSwap(&other->players_);
  swap(frameindex_, other->frameindex_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KeyFrame::GetMetadata() const {
  protobuf_protosrc_2fprotocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protosrc_2fprotocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
